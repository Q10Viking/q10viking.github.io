"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[96483],{61848:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-51026e3a",path:"/dubbo/02%20%E5%9F%BA%E4%BA%8EDubbo%20Api%E5%BC%80%E5%8F%91.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Docker/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"定义服务接口",slug:"定义服务接口",children:[]},{level:2,title:"定义服务端的实现",slug:"定义服务端的实现",children:[]},{level:2,title:"服务端发布服务",slug:"服务端发布服务",children:[]},{level:2,title:"消费端订阅并调用",slug:"消费端订阅并调用",children:[]},{level:2,title:"启动",slug:"启动",children:[]},{level:2,title:"zk中的信息",slug:"zk中的信息",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"dubbo/02 基于Dubbo Api开发.md"}},16271:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var e=a(20641);const p={href:"https://github.com/Q10Viking/learncode/tree/main/dubbo/dubbo-api-task",target:"_blank",rel:"noopener noreferrer"},t=(0,e.Fv)('<h2 id="定义服务接口" tabindex="-1"><a class="header-anchor" href="#定义服务接口" aria-hidden="true">#</a> 定义服务接口</h2><p>服务接口 Dubbo 中沟通消费端和服务端的桥梁。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GreetingService</span> <span class="token punctuation">{</span>\n    <span class="token class-name">String</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="定义服务端的实现" tabindex="-1"><a class="header-anchor" href="#定义服务端的实现" aria-hidden="true">#</a> 定义服务端的实现</h2><p>定义了服务接口之后，可以在服务端这一侧定义对应的实现，这部分的实现相对于消费端来说是远端的实现，本地没有相关的信息。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GreetingServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">GreetingService</span><span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;Hi, &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="服务端发布服务" tabindex="-1"><a class="header-anchor" href="#服务端发布服务" aria-hidden="true">#</a> 服务端发布服务</h2><p>在实现了服务之后，通过 Dubbo 的 API 在网络上发布这个服务。</p><ol><li><p>首先是基于 <code>ServiceConfig</code> 定义了发布的服务信息，包括接口的信息以及对应的实现类对象</p></li><li><p>然后是配置 Dubbo 启动器，传入了应用名，注册中心地址，协议的信息以及服务的信息等</p><blockquote><p>注：DubboBootstrap 中的<code>registry</code> 、<code>protocol</code> 和 <code>service</code> 可以多次传入。</p></blockquote></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 定义具体的服务</span>\n        <span class="token class-name">ServiceConfig</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GreetingService</span><span class="token punctuation">&gt;</span></span> service <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServiceConfig</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        service<span class="token punctuation">.</span><span class="token function">setInterface</span><span class="token punctuation">(</span><span class="token class-name">GreetingService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        service<span class="token punctuation">.</span><span class="token function">setRef</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GreetingServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 启动 Dubbo</span>\n        <span class="token class-name">DubboBootstrap</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">application</span><span class="token punctuation">(</span><span class="token string">&quot;first-dubbo-provider&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">registry</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegistryConfig</span><span class="token punctuation">(</span><span class="token string">&quot;zookeeper://172.29.96.105:2181&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">protocol</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProtocolConfig</span><span class="token punctuation">(</span><span class="token string">&quot;dubbo&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="消费端订阅并调用" tabindex="-1"><a class="header-anchor" href="#消费端订阅并调用" aria-hidden="true">#</a> 消费端订阅并调用</h2><p>对于消费端，可以通过 Dubbo 的 API 可以进行消费端订阅。</p><ol><li><p>首先是基于 <code>ReferenceConfig</code> 定义了订阅的服务信息，包括接口的信息</p></li><li><p>其次是配置 Dubbo 启动器，传入了应用名，注册中心地址，协议的信息以及服务的信息等</p></li><li><p>最后是获取到动态代理的对象并进行调用</p><blockquote><p>注：DubboBootstrap 中支持 <code>service</code> 和 <code>reference</code> 可以同时传入，意味着一个应用可以同时即是消费端、也是服务端</p></blockquote></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token class-name">ReferenceConfig</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GreetingService</span><span class="token punctuation">&gt;</span></span> reference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReferenceConfig</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        reference<span class="token punctuation">.</span><span class="token function">setInterface</span><span class="token punctuation">(</span><span class="token class-name">GreetingService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">DubboBootstrap</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">application</span><span class="token punctuation">(</span><span class="token string">&quot;first-dubbo-consumer&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">registry</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegistryConfig</span><span class="token punctuation">(</span><span class="token string">&quot;zookeeper://172.29.96.105:2181&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">reference</span><span class="token punctuation">(</span>reference<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">GreetingService</span> service <span class="token operator">=</span> reference<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> message <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token string">&quot;Q10Viking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Receive result ======&gt; &quot;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><blockquote><p>先启动服务提供者，日志中打印出<code>DubboBootstrap awaiting...</code>代表成功</p></blockquote><p><img src="/images/dubbo/image-20230508231221043.png" alt="image-20230508231221043"></p><blockquote><p>接着在启动服务端，可以看到调用成功</p></blockquote><p><img src="/images/dubbo/image-20230508231443870.png" alt="image-20230508231443870"></p><h2 id="zk中的信息" tabindex="-1"><a class="header-anchor" href="#zk中的信息" aria-hidden="true">#</a> zk中的信息</h2><blockquote><p>我启动了两个服务提供实例，只启动了一个消费者实例，在zk的体现如下</p></blockquote><p><img src="/images/dubbo/image-20230508232806950.png" alt="image-20230508232806950"></p>',22),o={href:"https://tool.ip138.com/urlencode/",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Fv)('<blockquote><p>服务端信息，可以看到服务提供者的【ip+port】不同</p></blockquote><div class="language-http ext-http line-numbers-mode"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">dubbo</span><span class="token punctuation">:</span><span class="token header-value">//192.168.1.5:20882/org.hzz.GreetingService?anyhost=true&amp;application=first-dubbo-provider&amp;background=false&amp;deprecated=false&amp;dubbo=2.0.2&amp;dynamic=true&amp;environment=product&amp;executor-management-mode=isolation&amp;file-cache=true&amp;generic=false&amp;interface=org.hzz.GreetingService&amp;methods=sayHi&amp;pid=21056&amp;prefer.serialization=fastjson2,hessian2&amp;release=3.2.0&amp;service-name-mapping=true&amp;side=provider&amp;timestamp=1683559572642</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-http ext-http line-numbers-mode"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">dubbo</span><span class="token punctuation">:</span><span class="token header-value">//192.168.1.5:20880/org.hzz.GreetingService?anyhost=true&amp;application=first-dubbo-provider&amp;background=false&amp;deprecated=false&amp;dubbo=2.0.2&amp;dynamic=true&amp;environment=product&amp;executor-management-mode=isolation&amp;file-cache=true&amp;generic=false&amp;interface=org.hzz.GreetingService&amp;methods=sayHi&amp;pid=18156&amp;prefer.serialization=fastjson2,hessian2&amp;release=3.2.0&amp;service-name-mapping=true&amp;side=provider&amp;timestamp=1683559174104</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>消费订阅者的信息</p></blockquote><div class="language-http ext-http line-numbers-mode"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">consumer</span><span class="token punctuation">:</span><span class="token header-value">//192.168.1.5/org.hzz.GreetingService?application=first-dubbo-consumer&amp;background=false&amp;category=consumers&amp;check=false&amp;dubbo=2.0.2&amp;environment=product&amp;executor-management-mode=isolation&amp;file-cache=true&amp;interface=org.hzz.GreetingService&amp;methods=sayHi&amp;pid=20456&amp;release=3.2.0&amp;side=consumer&amp;sticky=false&amp;timestamp=1683559454009&amp;unloadClusterRelated=false</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><hr><p><img src="/images/dubbo/image-20230508233347656.png" alt="image-20230508233347656"></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;first-dubbo-provider&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;id&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;192.168.1.5:20880&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;address&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;192.168.1.5&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;port&quot;</span> <span class="token operator">:</span> <span class="token number">20880</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;sslPort&quot;</span> <span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;payload&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;@class&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;org.apache.dubbo.registry.zookeeper.ZookeeperInstance&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;id&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;192.168.1.5:20880&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;first-dubbo-provider&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;metadata&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;dubbo.endpoints&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;[{\\&quot;port\\&quot;:20880,\\&quot;protocol\\&quot;:\\&quot;dubbo\\&quot;}]&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;dubbo.metadata-service.url-params&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;{\\&quot;prefer.serialization\\&quot;:\\&quot;fastjson2,hessian2\\&quot;,\\&quot;version\\&quot;:\\&quot;1.0.0\\&quot;,\\&quot;dubbo\\&quot;:\\&quot;2.0.2\\&quot;,\\&quot;release\\&quot;:\\&quot;3.2.0\\&quot;,\\&quot;side\\&quot;:\\&quot;provider\\&quot;,\\&quot;port\\&quot;:\\&quot;20880\\&quot;,\\&quot;protocol\\&quot;:\\&quot;dubbo\\&quot;}&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;dubbo.metadata.revision&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;02c0ec2be52e9d9f54872b85d88e351c&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;dubbo.metadata.storage-type&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;local&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;timestamp&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1683559174104&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;registrationTimeUTC&quot;</span> <span class="token operator">:</span> <span class="token number">1683559180249</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;serviceType&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;DYNAMIC&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;uriSpec&quot;</span> <span class="token operator">:</span> <span class="token null keyword">null</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',9),l={href:"https://cn.dubbo.apache.org/zh-cn/overview/quickstart/java/api/",target:"_blank",rel:"noopener noreferrer"},u={},r=(0,a(66262).A)(u,[["render",function(n,s){const a=(0,e.g2)("OutboundLink");return(0,e.uX)(),(0,e.CE)(e.FK,null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",p,[(0,e.eW)("Source Code"),(0,e.bF)(a)])]),t,(0,e.Lk)("p",null,[(0,e.eW)("借助"),(0,e.Lk)("a",o,[(0,e.eW)("URL解码 URL编码 在线URL解码/编码工具 iP138在线工具"),(0,e.bF)(a)]),(0,e.eW)("，进行解码")]),c,(0,e.Lk)("p",null,[(0,e.Lk)("a",l,[(0,e.eW)("2 - 基于 Dubbo API 开发微服务应用 | Apache Dubbo"),(0,e.bF)(a)])])],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);