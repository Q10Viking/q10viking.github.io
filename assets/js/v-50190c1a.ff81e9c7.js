"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[24660],{82922:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-50190c1a",path:"/MySQL/54%20MySQL%E8%AE%B0%E5%BD%95%E8%B4%A7%E5%B8%81%E4%BD%BF%E7%94%A8%E4%BB%80%E4%B9%88%E7%B1%BB%E5%9E%8B.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/MySQL/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[],filePathRelative:"MySQL/54 MySQL记录货币使用什么类型.md"}},69724:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(20641).Fv)('<p>DECIMAL字段类型用于存储精确的定点数值，可以指定总共的位数和小数点后的位数。这使得它非常适合用于存储货币金额，因为货币金额通常需要精确到小数点后几位。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> my_table <span class="token punctuation">(</span>\n   amount <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>上述语句创建了一个名为amount的DECIMAL字段，总共有18位，其中小数点后有2位。</p><p>使用DECIMAL字段类型的好处包括：</p><ol><li>**精确性：**DECIMAL字段类型可以确保货币金额的精确性，避免由于浮点数运算带来的精度问题。</li><li>**可控性：**通过指定总位数和小数位数，可以精确控制存储的金额范围和精度。</li><li>**计算准确性：**DECIMAL字段类型支持数值计算，如加法、减法和乘法等，保证计算结果的准确性。</li></ol><p>需要注意的是，DECIMAL字段类型占用的存储空间相对较大，因此在设计表结构时需要考虑存储和性能需求，合理选择DECIMAL字段的位数。另外，应根据具体业务需求和国际化要求，考虑货币符号和货币转换等问题。</p>',6),t={},p=(0,a(66262).A)(t,[["render",function(n,s){return e}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);