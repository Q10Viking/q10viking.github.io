"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[54064],{43308:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-8f13d5a4",path:"/Algorithm/%E4%BD%8D%E8%BF%90%E7%AE%97.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Algorithm/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"二进制",slug:"二进制",children:[]},{level:2,title:"负数的表示",slug:"负数的表示",children:[]},{level:2,title:"常用位运算",slug:"常用位运算",children:[{level:3,title:"位运算的运用-权限控制❤️",slug:"位运算的运用-权限控制❤️",children:[]}]},{level:2,title:"有趣的位运算",slug:"有趣的位运算",children:[{level:3,title:"取模❤️",slug:"取模❤️",children:[]},{level:3,title:"判断奇数偶数❤️",slug:"判断奇数偶数❤️",children:[]},{level:3,title:"实现数字翻倍或减半❤️",slug:"实现数字翻倍或减半❤️",children:[]},{level:3,title:"交换两数❤️",slug:"交换两数❤️",children:[]}]}],filePathRelative:"Algorithm/位运算.md"}},77793:(n,s,a)=>{a.r(s),a.d(s,{default:()=>S});var p=a(20641);const t=(0,p.Fv)('<h2 id="二进制" tabindex="-1"><a class="header-anchor" href="#二进制" aria-hidden="true">#</a> 二进制</h2><p><img src="/images/algorithm/image-20220814205800684.png" alt="image-20220814205800684"></p><h2 id="负数的表示" tabindex="-1"><a class="header-anchor" href="#负数的表示" aria-hidden="true">#</a> 负数的表示</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>计算机中负数的表示，是以补码的形式呈现的</p><p>负数为何在计算机中要这么表示？人类的减法运算涉及到符号位的处理，这对电路来说，是比较复杂的。补码系统下，可以通过把减法换成反码，然后通过加法器运算，这样就可以避免设计复杂的减法电路。</p></div><p><img src="/images/algorithm/image-20220814210345891.png" alt="image-20220814210345891"></p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>原码：一个正数，按照绝对值大小转换成的二进制数；一个负数按照绝对值大小转换成的二进制数，然后最高位补1，称为原码。</p></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 5的 原码</span>\n00000000 00000000 00000000 00000101\n<span class="token comment"># -5的 原码</span>\n<span class="token number">10000000</span> 00000000 00000000 00000101\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>反码：正数的反码与原码相同，负数的反码为对该数的原码除符号位外各位取反</p><p>取反操作指：原为1，得0；原为0，得1。（1变0; 0变1）</p></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>00000000 00000000 00000000 00000101  \n<span class="token comment">#正数的反码还是</span>\n00000000 00000000 00000000 00000101\n\n<span class="token comment">#-------------------------------------</span>\n\n<span class="token number">10000000</span> 00000000 00000000 00000101\n<span class="token comment"># 负数每一位取反（除符号位）</span>\n<span class="token number">11111111</span> <span class="token number">11111111</span> <span class="token number">11111111</span> <span class="token number">11111010</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>补码：正数的补码与原码相同，负数的补码为对该数的原码除符号位外各位取反，然后在最后一位加1.</p></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 原码</span>\n<span class="token number">10000000</span> 00000000 00000000 00000101\n<span class="token comment"># 反码</span>\n<span class="token number">11111111</span> <span class="token number">11111111</span> <span class="token number">11111111</span> <span class="token number">11111010</span>\n<span class="token comment"># 补码 + 1</span>\n<span class="token number">11111111</span> <span class="token number">11111111</span> <span class="token number">11111111</span> <span class="token number">11111011</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="常用位运算" tabindex="-1"><a class="header-anchor" href="#常用位运算" aria-hidden="true">#</a> 常用位运算</h2><ul><li>按位与 &amp; (1&amp;1=1 0&amp;0=0 1&amp;0=0)</li><li>按位或 | (1|1=1 0|0=0 1|0=1)</li><li>按位非 ~(~1=0 ~0=1)</li><li>按位异或 ^ (1^1=0 1^0=1 0^0=0，很明显任何一个数和自己异或结果一定是0)</li><li>有符号右移&gt;&gt;(若正数,高位补0,负数,高位补1)</li><li>有符号左移&lt;&lt;</li><li>无符号右移&gt;&gt;&gt;(不论正负,高位均补0)</li></ul>',13),e={class:"custom-container tip"},o=(0,p.Lk)("p",{class:"custom-container-title"},"TIP",-1),c={href:"https://github.com/Q10Viking/learncode/blob/main/algorithm/src/main/java/org/hzz/bit/base/IntToBinary.java",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 按位运算\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IntToBinary</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 4 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 6 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//位与&amp;(1&amp;1=1 0&amp;0=0 1&amp;0=0)</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 4&amp;6 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">&amp;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//位或|(1|1=1 0|0=0 1|0=1)</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 4|6 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">|</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//位非~(~1=0  ~0=1)</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the ~4 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//位异或^(1^1=0 1^0=1  0^0=0)</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 4^6 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">^</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 17^17 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token operator">^</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * the 6 is : 110\n * the 4&amp;6 is : 100\n * the 4|6 is : 110\n * the ~4 is : 11111111111111111111111111111011\n * the 4^6 is : 10\n * the 17^17 is : 0\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>',1),u={class:"custom-container tip"},r=(0,p.Lk)("p",{class:"custom-container-title"},"TIP",-1),i={href:"https://github.com/Q10Viking/learncode/blob/main/algorithm/src/main/java/org/hzz/bit/base/BitMove.java",target:"_blank",rel:"noopener noreferrer"},k=(0,p.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 左移右移\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BitMove</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the -234567 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">234567</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//有符号右移&gt;&gt;(若正数,高位补0,负数,高位补1)</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 4&gt;&gt;1 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the -234567&gt;&gt;1 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">234567</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//有符号左移&lt;&lt;(若正数,高位补0,负数,高位补1)</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the -234567&lt;&lt;16 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">234567</span><span class="token operator">&lt;&lt;</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//无符号右移&gt;&gt;&gt;(不论正负,高位均补0)</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 234567 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">234567</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 234567&gt;&gt;&gt;4 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token number">234567</span><span class="token operator">&gt;&gt;&gt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//无符号右移&gt;&gt;&gt;(不论正负,高位均补0)</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the -4 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the -4&gt;&gt;&gt;4 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token operator">&gt;&gt;&gt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the -4&gt;&gt;4 is : &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * the -234567 is : 11111111111111000110101110111001\n * the 4&gt;&gt;1 is : 10\n * the -234567&gt;&gt;1 is : 11111111111111100011010111011100\n *\n * the -234567&lt;&lt;16 is : 1101011101110010000000000000000\n *\n * the 234567 is : 111001010001000111\n * the 234567&gt;&gt;&gt;4 is : 11100101000100\n *\n * the -4 is : 11111111111111111111111111111100\n * the -4&gt;&gt;&gt;4 is : 1111111111111111111111111111\n * the -4&gt;&gt;4 is : 11111111111111111111111111111110\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="位运算的运用-权限控制❤️" tabindex="-1"><a class="header-anchor" href="#位运算的运用-权限控制❤️" aria-hidden="true">#</a> 位运算的运用-权限控制❤️</h3>',2),m={class:"custom-container tip"},b=(0,p.Lk)("p",{class:"custom-container-title"},"TIP",-1),d={href:"https://github.com/Q10Viking/learncode/blob/main/algorithm/src/main/java/org/hzz/bit/base/Permission.java",target:"_blank",rel:"noopener noreferrer"},g=(0,p.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 位运算的运用-权限控制,add,query,modify,del\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Permission</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ALLOW_SELECT</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ALLOW_INSERT</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ALLOW_UPDATE</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ALLOW_DELETE</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//当前的权限状态</span>\n    <span class="token keyword">private</span> <span class="token keyword">int</span> flag<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPermission</span><span class="token punctuation">(</span><span class="token keyword">int</span> permission<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        flag <span class="token operator">=</span> permission<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token comment">/*增加权限,可以一项或者多项*/</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addPermission</span><span class="token punctuation">(</span><span class="token keyword">int</span> permission<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        flag <span class="token operator">=</span> flag<span class="token operator">|</span>permission<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/*删除权限,可以一项或者多项*/</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">disablePermission</span><span class="token punctuation">(</span><span class="token keyword">int</span> permission<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        flag <span class="token operator">=</span> flag<span class="token operator">&amp;</span><span class="token operator">~</span>permission<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/*是否拥有某些权限*/</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAllow</span><span class="token punctuation">(</span><span class="token keyword">int</span> permission<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>flag<span class="token operator">&amp;</span>permission<span class="token punctuation">)</span><span class="token operator">==</span>permission<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/*是否不拥有某些权限*/</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isNotAllow</span><span class="token punctuation">(</span><span class="token keyword">int</span> permission<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>flag<span class="token operator">&amp;</span>permission<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">int</span> flag <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Permission</span> permission <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Permission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        permission<span class="token punctuation">.</span><span class="token function">setPermission</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        permission<span class="token punctuation">.</span><span class="token function">disablePermission</span><span class="token punctuation">(</span><span class="token constant">ALLOW_DELETE</span><span class="token operator">|</span><span class="token constant">ALLOW_INSERT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ALLOW_SELECT=&quot;</span><span class="token operator">+</span>permission<span class="token punctuation">.</span><span class="token function">isAllow</span><span class="token punctuation">(</span><span class="token constant">ALLOW_SELECT</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ALLOW_INSERT=&quot;</span><span class="token operator">+</span>permission<span class="token punctuation">.</span><span class="token function">isAllow</span><span class="token punctuation">(</span><span class="token constant">ALLOW_INSERT</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ALLOW_UPDATE=&quot;</span><span class="token operator">+</span>permission<span class="token punctuation">.</span><span class="token function">isAllow</span><span class="token punctuation">(</span><span class="token constant">ALLOW_UPDATE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ALLOW_DELETE=&quot;</span><span class="token operator">+</span>permission<span class="token punctuation">.</span><span class="token function">isAllow</span><span class="token punctuation">(</span><span class="token constant">ALLOW_DELETE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * 1111\n * ALLOW_SELECT=true\n * ALLOW_INSERT=false\n * ALLOW_UPDATE=true\n * ALLOW_DELETE=false\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><h2 id="有趣的位运算" tabindex="-1"><a class="header-anchor" href="#有趣的位运算" aria-hidden="true">#</a> 有趣的位运算</h2>',2),h={class:"custom-container tip"},v=(0,p.Lk)("p",{class:"custom-container-title"},"TIP",-1),y={href:"https://github.com/Q10Viking/learncode/blob/main/algorithm/src/main/java/org/hzz/bit/base/Calc.java",target:"_blank",rel:"noopener noreferrer"},f=(0,p.Fv)('<details class="custom-container details"><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Calc</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">/*取模a % (2的幂) 等价于 a &amp; (2的幂 - 1)*/</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 345 % 32 is : &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">345</span><span class="token operator">%</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; or &quot;</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">345</span><span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">/*判断奇偶数*/</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;偶数&quot;</span><span class="token operator">:</span><span class="token string">&quot;奇数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;偶数&quot;</span><span class="token operator">:</span><span class="token string">&quot;奇数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;偶数&quot;</span><span class="token operator">:</span><span class="token string">&quot;奇数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;偶数&quot;</span><span class="token operator">:</span><span class="token string">&quot;奇数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">/*实现数字翻倍或减半*/</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">/*交换两数*/</span>\n        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">4</span> <span class="token punctuation">,</span>b <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> temp <span class="token operator">=</span> a<span class="token punctuation">;</span>\n        a <span class="token operator">=</span> b<span class="token punctuation">;</span>\n        b <span class="token operator">=</span> temp<span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a=&quot;</span><span class="token operator">+</span>a<span class="token operator">+</span><span class="token string">&quot;,b=&quot;</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">/*不借助临时变量交换两数*/</span>\n        a <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>\n        b <span class="token operator">=</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>\n        a <span class="token operator">=</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a=&quot;</span><span class="token operator">+</span>a<span class="token operator">+</span><span class="token string">&quot;,b=&quot;</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">/*位操作交换两数*/</span>\n        a<span class="token operator">=</span>a<span class="token operator">^</span>b<span class="token punctuation">;</span>\n        b<span class="token operator">=</span>a<span class="token operator">^</span>b<span class="token punctuation">;</span><span class="token comment">// b=(a^b)^b=a^(b^b)=a</span>\n        a<span class="token operator">=</span>a<span class="token operator">^</span>b<span class="token punctuation">;</span><span class="token comment">// a=(a^b)^a=(a^a)^b=b</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a=&quot;</span><span class="token operator">+</span>a<span class="token operator">+</span><span class="token string">&quot;,b=&quot;</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * the 345 % 32 is : 25 or 25\n * 偶数\n * 奇数\n * 偶数\n * 奇数\n * 4\n * 18\n * a=6,b=4\n * a=4,b=6\n * a=6,b=4\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div></details><h3 id="取模❤️" tabindex="-1"><a class="header-anchor" href="#取模❤️" aria-hidden="true">#</a> 取模❤️</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>有趣的取模性质：取模a % (2^n) 等价于 a &amp; (2^n - 1)，所以在map里的数组个数一定是2的乘方数，计算key值在哪个元素中的时候，就用位运算来快速定位。</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*取模a % (2的幂) 等价于 a &amp; (2的幂 - 1)*/</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;the 345 % 32 is : &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">345</span><span class="token operator">%</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; or &quot;</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">345</span><span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="判断奇数偶数❤️" tabindex="-1"><a class="header-anchor" href="#判断奇数偶数❤️" aria-hidden="true">#</a> 判断奇数偶数❤️</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>无需采用取模运算，只要根据数的最后一位是 0 还是 1 来决定即可，为 0 就是偶数，为 1 就是奇数</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*判断奇偶数*/</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;偶数&quot;</span><span class="token operator">:</span><span class="token string">&quot;奇数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;偶数&quot;</span><span class="token operator">:</span><span class="token string">&quot;奇数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;偶数&quot;</span><span class="token operator">:</span><span class="token string">&quot;奇数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;偶数&quot;</span><span class="token operator">:</span><span class="token string">&quot;奇数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="实现数字翻倍或减半❤️" tabindex="-1"><a class="header-anchor" href="#实现数字翻倍或减半❤️" aria-hidden="true">#</a> 实现数字翻倍或减半❤️</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>数 a 向右移一位，相当于将 a 除以 2；数 a 向左移一位，相当于将 a 乘以 2</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// ArrayList的扩容</span>\n<span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">+</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="交换两数❤️" tabindex="-1"><a class="header-anchor" href="#交换两数❤️" aria-hidden="true">#</a> 交换两数❤️</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>位操作交换两数可以不需要第三个临时变量，虽然普通操作也可以做到，但是没有其效率高。</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*位操作交换两数*/</span>\na<span class="token operator">=</span>a<span class="token operator">^</span>b<span class="token punctuation">;</span>\nb<span class="token operator">=</span>a<span class="token operator">^</span>b<span class="token punctuation">;</span><span class="token comment">// b=(a^b)^b=a^(b^b)=a</span>\na<span class="token operator">=</span>a<span class="token operator">^</span>b<span class="token punctuation">;</span><span class="token comment">// a=(a^b)^a=(a^a)^b=b</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',13),q={},S=(0,a(66262).A)(q,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[t,(0,p.Lk)("div",e,[o,(0,p.Lk)("p",null,[(0,p.Lk)("a",c,[(0,p.eW)("Source Code IntToBinary.java"),(0,p.bF)(a)])])]),l,(0,p.Lk)("div",u,[r,(0,p.Lk)("p",null,[(0,p.Lk)("a",i,[(0,p.eW)("Source Code BitMove.java"),(0,p.bF)(a)])])]),k,(0,p.Lk)("div",m,[b,(0,p.Lk)("p",null,[(0,p.Lk)("a",d,[(0,p.eW)("Source Code Permission.java"),(0,p.bF)(a)])])]),g,(0,p.Lk)("div",h,[v,(0,p.Lk)("p",null,[(0,p.Lk)("a",y,[(0,p.eW)("Source Code Calc.java"),(0,p.bF)(a)])])]),f],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);