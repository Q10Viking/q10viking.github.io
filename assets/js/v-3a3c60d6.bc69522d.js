"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[98614],{36525:(e,r,t)=>{t.r(r),t.d(r,{data:()=>o});const o={key:"v-3a3c60d6",path:"/Docker/",title:"",lang:"zh-CN",frontmatter:{prev:{text:"Back To 目录",link:"/topicNav/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"Docker 引擎",slug:"docker-引擎",children:[]},{level:2,title:"Docker Hub",slug:"docker-hub",children:[]},{level:2,title:"Resources",slug:"resources",children:[]}],filePathRelative:"Docker/README.md"}},426:(e,r,t)=>{t.r(r),t.d(r,{default:()=>F});var o=t(20641);const c=(0,o.Lk)("h2",{id:"docker",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#docker","aria-hidden":"true"},"#"),(0,o.eW)(" Docker")],-1),l={class:"custom-container tip"},n=(0,o.Lk)("p",{class:"custom-container-title"},"TIP",-1),k={href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"},a=(0,o.Lk)("p",null,"Docker 是一个用于开发、交付和运行容器的容器化平台。 Docker 不使用虚拟机监控程序，如果要开发和测试应用程序，可以在台式机或笔记本电脑上运行 Docker。 桌面版 Docker 支持 Linux、Windows 和 macOS。 对于生产系统，Docker 适用于服务器环境，包括 Linux 的多种变体和 Microsoft Windows Server 2016 及更高版本。 许多云（包括 Azure）都支持 Docker。",-1),s=(0,o.Lk)("h2",{id:"docker-引擎",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#docker-引擎","aria-hidden":"true"},"#"),(0,o.eW)(" Docker 引擎")],-1),i={href:"https://learn.microsoft.com/zh-cn/training/modules/intro-to-docker-containers/2-what-is-docker",target:"_blank",rel:"noopener noreferrer"},d=(0,o.Fv)('<p><img src="/images/Docker/2-docker-architecture.svg" alt="显示 Docker 体系结构的大致概述的关系图。"></p><p><img src="/images/Docker/112214" alt="https://note.youdao.com/yws/public/resource/42384826563c36cddfa032983505bd0d/xmlnote/8115491FCB464209B8FBAFF17AE99A1B/112214"></p><ul><li><p>Docker daemon是一个运行在宿主机（ DOCKER-HOST）的后台进程。可通过 Docker客户端与之通信</p></li><li><p>Docker客户端是 Docker的用户界面，它可以接受用户命令和配置标识，并与 Docker daemon通信。图中， docker build等都是 Docker的相关命令</p></li><li><p>Docker镜像是一个只读模板，它包含创建 Docker容器的说明。<strong>它和系统安装光盘有点像</strong>，使用系统安装光盘可以安装系统，同理，使用Docker镜像可以运行 Docker镜像中的程序</p></li><li><p>容器是镜像的可运行实例。<strong>镜像和容器的关系有点类似于面向对象中，类和对象的关系</strong>。可通过 Docker API或者 CLI命令来启停、移动、删除容器</p></li><li><p>Registry</p><ul><li><p>Docker Registry是一个集中存储与分发镜像的服务。构建完 Docker镜像后，就可在当前宿主机上运行。但如果想要在其他机器上运行这个镜像，就需要手动复制。此时可借助 Docker Registry来避免镜像的手动复制。</p><p>一个 Docker Registry可包含多个 Docker仓库，每个仓库可包含多个镜像标签，每个标签对应一个 Docker镜像。这跟 Maven的仓库有点类似，如果把 Docker Registry比作 Maven仓库的话，那么 Docker仓库就可理解为某jar包的路径，而镜像标签则可理解为jar包的版本号。</p><p>Docker Registry可分为公有Docker Registry和私有Docker Registry。 最常⽤的Docker Registry莫过于官⽅的Docker Hub， 这也是默认的Docker Registry。 Docker Hub上存放着⼤量优秀的镜像， 我们可使⽤Docker命令下载并使⽤</p></li></ul></li></ul><h2 id="docker-hub" tabindex="-1"><a class="header-anchor" href="#docker-hub" aria-hidden="true">#</a> Docker Hub</h2>',4),u={href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"},h=(0,o.Fv)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>q10viking\nqw*******\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="resources" tabindex="-1"><a class="header-anchor" href="#resources" aria-hidden="true">#</a> Resources</h2>',2),p=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th",{style:{"text-align":"center"}},"说明"),(0,o.Lk)("th",{style:{"text-align":"center"}},"网址")])],-1),D=(0,o.Lk)("td",{style:{"text-align":"center"}},"Docker文档",-1),b={style:{"text-align":"center"}},g={href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"},L=(0,o.Lk)("td",{style:{"text-align":"center"}},"DockerHub",-1),m={style:{"text-align":"center"}},f={href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"},y=(0,o.Lk)("td",{style:{"text-align":"center"}},"Play With Docker",-1),v={style:{"text-align":"center"}},x={href:"https://labs.play-with-docker.com/",target:"_blank",rel:"noopener noreferrer"},R={},F=(0,t(66262).A)(R,[["render",function(e,r){const t=(0,o.g2)("OutboundLink");return(0,o.uX)(),(0,o.CE)(o.FK,null,[c,(0,o.Lk)("div",l,[n,(0,o.Lk)("p",null,[(0,o.Lk)("a",k,[(0,o.eW)("Docker docs https://docs.docker.com"),(0,o.bF)(t)])])]),a,s,(0,o.Lk)("blockquote",null,[(0,o.Lk)("p",null,[(0,o.Lk)("a",i,[(0,o.eW)("Microsoft: Docket tutorial"),(0,o.bF)(t)])])]),d,(0,o.Lk)("p",null,[(0,o.Lk)("a",u,[(0,o.eW)("Docker Hub"),(0,o.bF)(t)])]),h,(0,o.Lk)("table",null,[p,(0,o.Lk)("tbody",null,[(0,o.Lk)("tr",null,[D,(0,o.Lk)("td",b,[(0,o.Lk)("a",g,[(0,o.eW)("https://docs.docker.com/"),(0,o.bF)(t)])])]),(0,o.Lk)("tr",null,[L,(0,o.Lk)("td",m,[(0,o.Lk)("a",f,[(0,o.eW)("https://hub.docker.com/"),(0,o.bF)(t)])])]),(0,o.Lk)("tr",null,[y,(0,o.Lk)("td",v,[(0,o.Lk)("a",x,[(0,o.eW)("https://labs.play-with-docker.com/"),(0,o.bF)(t)])])])])])],64)}]])},66262:(e,r)=>{r.A=(e,r)=>{const t=e.__vccOpts||e;for(const[e,o]of r)t[e]=o;return t}}}]);