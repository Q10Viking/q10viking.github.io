"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[93662],{7142:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-a7dc2c88",path:"/MySQL/29%20SQL%E6%A0%87%E5%87%86%E4%B8%8E%E8%BF%9E%E6%8E%A5%E8%A1%A8.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/MySQL/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"SQL标准",slug:"sql标准",children:[]},{level:2,title:"笛卡尔积(交叉连接)",slug:"笛卡尔积-交叉连接",children:[{level:3,title:"SQL92",slug:"sql92",children:[]},{level:3,title:"SQL99（cross join）",slug:"sql99-cross-join",children:[]}]},{level:2,title:"等值连接👍",slug:"等值连接👍",children:[{level:3,title:"SQL92",slug:"sql92-1",children:[]},{level:3,title:"inner join(SQL99)❤️",slug:"inner-join-sql99-❤️",children:[]},{level:3,title:"cross join(SQL99)",slug:"cross-join-sql99",children:[]},{level:3,title:"自然连接(SQL99)❤️",slug:"自然连接-sql99-❤️",children:[]}]},{level:2,title:"using连接",slug:"using连接",children:[]},{level:2,title:"非等值连接",slug:"非等值连接",children:[]},{level:2,title:"自连接❤️",slug:"自连接❤️",children:[{level:3,title:"SQL92",slug:"sql92-2",children:[]},{level:3,title:"SQL99",slug:"sql99",children:[]}]},{level:2,title:"外连接😘",slug:"外连接😘",children:[{level:3,title:"左连接",slug:"左连接",children:[]},{level:3,title:"右连接",slug:"右连接",children:[]}]},{level:2,title:"小结",slug:"小结",children:[]},{level:2,title:"测试SQL资源",slug:"测试sql资源",children:[]}],filePathRelative:"MySQL/29 SQL标准与连接表.md"}},22258:(s,n,a)=>{a.r(n),a.d(n,{default:()=>r});var e=a(20641);const p=(0,e.Fv)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>主要关注在mysql中能够执行的语句</p></div><h2 id="sql标准" tabindex="-1"><a class="header-anchor" href="#sql标准" aria-hidden="true">#</a> SQL标准</h2><p>SQL 有两个主要的标准，分别是 SQL92 和 SQL99。92 和 99 代表了标准提出的时间，SQL92 就是 92 年提出的标准规范。当然除了 SQL92 和 SQL99 以外，还存在 SQL-86、SQL-89、SQL:2003、SQL:2008、SQL:2011 和 SQL:2016 等其他的标准</p><ul><li>实际上最重要的 SQL 标准就是 SQL92 和 SQL99。一般来说 SQL92 的形式更简单，但是写的 SQL 语句会比较长，可读性较差。</li><li>而 SQL99 相比于 SQL92 来说，语法更加复杂，但可读性更强。</li></ul><p><img src="/images/MySQL/image-20230510205723057.png" alt="image-20230510205723057"></p><blockquote><p>为了方便对比，建立三张表</p></blockquote><ul><li>player表,为球员表，一共有 37 个球员</li></ul><p><img src="/images/MySQL/image-20230510210601049.png" alt="image-20230510210601049"></p><ul><li><p>team表,球队表，一共有 3 支球队</p><p><img src="/images/MySQL/image-20230510210925627.png" alt="image-20230510210925627"></p></li><li><p>身高级别表 height_grades</p><p><img src="/images/MySQL/image-20230510211339268.png" alt="image-20230510211339268"></p></li></ul><hr><h2 id="笛卡尔积-交叉连接" tabindex="-1"><a class="header-anchor" href="#笛卡尔积-交叉连接" aria-hidden="true">#</a> 笛卡尔积(交叉连接)</h2><blockquote><p>笛卡尔积也称为交叉连接，英文是 CROSS JOIN，它的作用就是可以把任意表进行连接，即使这两张表不相关。但我们通常进行连接还是需要筛选的，因此你需要在连接后面加上 WHERE 子句，也就是作为过滤条件对连接数据进行筛选。</p></blockquote><h3 id="sql92" tabindex="-1"><a class="header-anchor" href="#sql92" aria-hidden="true">#</a> SQL92</h3><p>笛卡尔乘积是一个数学运算。假设我有两个集合 X 和 Y，那么 X 和 Y 的笛卡尔积就是 X 和 Y 的所有可能组合，也就是第一个对象来自于 X，第二个对象来自于 Y 的所有可能</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span>  <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> player<span class="token punctuation">,</span> team<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> team_id <span class="token operator">|</span> player_name                        <span class="token operator">|</span> height <span class="token operator">|</span> team_id <span class="token operator">|</span> team_name             <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1003</span> <span class="token operator">|</span> 亚特兰大老鹰          <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1003</span> <span class="token operator">|</span> 亚特兰大老鹰          <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span>    <span class="token number">1003</span> <span class="token operator">|</span> 亚特兰大老鹰          <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1003</span> <span class="token operator">|</span> 亚特兰大老鹰          <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>运行结果（一共 37*3=111 条记录）：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> player<span class="token punctuation">,</span>team<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span>      <span class="token number">111</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="sql99-cross-join" tabindex="-1"><a class="header-anchor" href="#sql99-cross-join" aria-hidden="true">#</a> SQL99（cross join）</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span>  <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> player <span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> team<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> team_id <span class="token operator">|</span> player_name                        <span class="token operator">|</span> height <span class="token operator">|</span> team_id <span class="token operator">|</span> team_name             <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1003</span> <span class="token operator">|</span> 亚特兰大老鹰          <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1003</span> <span class="token operator">|</span> 亚特兰大老鹰          <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span>    <span class="token number">1003</span> <span class="token operator">|</span> 亚特兰大老鹰          <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1003</span> <span class="token operator">|</span> 亚特兰大老鹰          <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>如果多张表进行交叉连接，比如表 t1，表 t2，表 t3 进行交叉连接，可以写成下面这样</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> t1 <span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> t2 <span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> t3<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="等值连接👍" tabindex="-1"><a class="header-anchor" href="#等值连接👍" aria-hidden="true">#</a> 等值连接👍</h2><h3 id="sql92-1" tabindex="-1"><a class="header-anchor" href="#sql92-1" aria-hidden="true">#</a> SQL92</h3><p>❤️两张表的等值连接就是用两张表中都存在的列进行连接❤️。我们也可以对多张表进行等值连接。</p><p>针对 player 表和 team 表都存在 team_id 这一列，我们可以用等值连接进行查询</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> player<span class="token punctuation">.</span>team_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_name <span class="token keyword">FROM</span> player<span class="token punctuation">,</span> team <span class="token keyword">WHERE</span> player<span class="token punctuation">.</span>team_id <span class="token operator">=</span> team<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+-----------------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> team_id <span class="token operator">|</span> player_name                        <span class="token operator">|</span> height <span class="token operator">|</span> team_name             <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+-----------------------+</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+-----------------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>他本质上也是笛卡尔连接，但是连接的两张表中都存在相同的列，可以用来作为条件，减少没必要的交叉，所以最终查询到37条</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>\nmysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> player<span class="token punctuation">,</span> team <span class="token keyword">WHERE</span> player<span class="token punctuation">.</span>team_id <span class="token operator">=</span> team<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span>       <span class="token number">37</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>我们在进行等值连接的时候，可以使用表的别名，这样会让 SQL 语句更简洁</p></blockquote><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 使用了别名</span>\n<span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>team_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_name <span class="token keyword">FROM</span> player <span class="token keyword">AS</span> a<span class="token punctuation">,</span> team <span class="token keyword">AS</span> b <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>team_id <span class="token operator">=</span> b<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\n<span class="token comment"># 没有使用别名</span>\n<span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> player<span class="token punctuation">.</span>team_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_name <span class="token keyword">FROM</span> player<span class="token punctuation">,</span> team <span class="token keyword">WHERE</span> player<span class="token punctuation">.</span>team_id <span class="token operator">=</span> team<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="inner-join-sql99-❤️" tabindex="-1"><a class="header-anchor" href="#inner-join-sql99-❤️" aria-hidden="true">#</a> inner join(SQL99)❤️</h3><blockquote><p>上面这种写法是SQL92并不符合规范，可能只对某些数据库管用，如sqlserver,mysql。推荐最好不要这样写。最好写成inner join的写法</p></blockquote><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># SQL92的等值连接</span>\n<span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>team_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_name <span class="token keyword">FROM</span> player <span class="token keyword">AS</span> a<span class="token punctuation">,</span> team <span class="token keyword">AS</span> b <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>team_id <span class="token operator">=</span> b<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\n\n<span class="token comment">#SQL99</span>\n<span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>team_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_name <span class="token keyword">FROM</span> player <span class="token keyword">AS</span> a <span class="token keyword">inner</span> <span class="token keyword">join</span> team <span class="token keyword">AS</span> b <span class="token keyword">on</span> a<span class="token punctuation">.</span>team_id <span class="token operator">=</span> b<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="cross-join-sql99" tabindex="-1"><a class="header-anchor" href="#cross-join-sql99" aria-hidden="true">#</a> cross join(SQL99)</h3><p>使用inner join和cross join效果一样</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>team_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_name <span class="token keyword">FROM</span> player <span class="token keyword">AS</span> a <span class="token keyword">cross</span> <span class="token keyword">join</span> team <span class="token keyword">AS</span> b <span class="token keyword">on</span> a<span class="token punctuation">.</span>team_id <span class="token operator">=</span> b<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="自然连接-sql99-❤️" tabindex="-1"><a class="header-anchor" href="#自然连接-sql99-❤️" aria-hidden="true">#</a> 自然连接(SQL99)❤️</h3><p>可以把自然连接理解为 SQL92 中的等值连接。它会帮你自动查询两张连接表中所有相同的字段，然后进行等值连接。</p><p>把 player 表和 team 表进行等值连接，相同的字段是 team_id。</p><p>在 SQL92 标准中</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>team_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_name <span class="token keyword">FROM</span> player <span class="token keyword">as</span> a<span class="token punctuation">,</span> team <span class="token keyword">as</span> b <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>team_id <span class="token operator">=</span> b<span class="token punctuation">.</span>team_id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>SQL99标准中</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> team_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_name <span class="token keyword">FROM</span> player <span class="token keyword">NATURAL</span> <span class="token keyword">JOIN</span> team<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+-----------------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> team_id <span class="token operator">|</span> player_name                        <span class="token operator">|</span> height <span class="token operator">|</span> team_name             <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+-----------------------+</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10003</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 安德烈<span class="token operator">-</span>德拉蒙德                    <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token operator">|</span>     <span class="token number">10035</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 达文<span class="token operator">-</span>里德                          <span class="token operator">|</span>   <span class="token number">1.98</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+-----------------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>在 SQL99 中用 NATURAL JOIN 替代了 <code>WHERE player.team_id = team.team_id</code></p></blockquote><h2 id="using连接" tabindex="-1"><a class="header-anchor" href="#using连接" aria-hidden="true">#</a> using连接</h2><p>当我们进行连接的时候，可以用 USING 指定数据表里的同名字段进行等值连接。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> team_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_name <span class="token keyword">FROM</span> player <span class="token keyword">JOIN</span> team <span class="token keyword">USING</span><span class="token punctuation">(</span>team_id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+-----------------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> team_id <span class="token operator">|</span> player_name                        <span class="token operator">|</span> height <span class="token operator">|</span> team_name             <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+-----------------------+</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10003</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 安德烈<span class="token operator">-</span>德拉蒙德                    <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token operator">|</span>     <span class="token number">10035</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 达文<span class="token operator">-</span>里德                          <span class="token operator">|</span>   <span class="token number">1.98</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+-----------------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>与自然连接 NATURAL JOIN 不同的是，USING 指定了具体的相同的字段名称，你需要在 USING 的括号 () 中填入要指定的同名字段。同时使用 JOIN USING 可以简化 JOIN ON 的等值连接，它与下面的 SQL 查询结果是相同的</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> player<span class="token punctuation">.</span>team_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_name <span class="token keyword">FROM</span> player <span class="token keyword">JOIN</span> team <span class="token keyword">ON</span> player<span class="token punctuation">.</span>team_id <span class="token operator">=</span> team<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="非等值连接" tabindex="-1"><a class="header-anchor" href="#非等值连接" aria-hidden="true">#</a> 非等值连接</h2><p>当我们进行多表查询的时候，如果连接多个表的条件是等号时，就是等值连接，其他的运算符连接就是非等值查询</p><blockquote><p>player 表中有身高 height 字段，如果想要知道每个球员的身高的级别，可以采用非等值连接查询</p></blockquote><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> p<span class="token punctuation">.</span>player_id<span class="token punctuation">,</span> p<span class="token punctuation">.</span>player_name<span class="token punctuation">,</span> p<span class="token punctuation">.</span>height<span class="token punctuation">,</span> h<span class="token punctuation">.</span>height_level\n    <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword">FROM</span> player <span class="token keyword">AS</span> p<span class="token punctuation">,</span> height_grades <span class="token keyword">AS</span> h\n    <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword">WHERE</span> p<span class="token punctuation">.</span>height <span class="token operator">BETWEEN</span> h<span class="token punctuation">.</span>height_lowest <span class="token operator">AND</span> h<span class="token punctuation">.</span>height_highest<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+------------------------------------+--------+--------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> player_name                        <span class="token operator">|</span> height <span class="token operator">|</span> height_level <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+------------------------------------+--------+--------------+</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span> B            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span> B            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10003</span> <span class="token operator">|</span> 安德烈<span class="token operator">-</span>德拉蒙德                    <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span> A            <span class="token operator">|</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token operator">|</span>     <span class="token number">10035</span> <span class="token operator">|</span> 达文<span class="token operator">-</span>里德                          <span class="token operator">|</span>   <span class="token number">1.98</span> <span class="token operator">|</span> B            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span> A            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span> A            <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+------------------------------------+--------+--------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="自连接❤️" tabindex="-1"><a class="header-anchor" href="#自连接❤️" aria-hidden="true">#</a> 自连接❤️</h2><h3 id="sql92-2" tabindex="-1"><a class="header-anchor" href="#sql92-2" aria-hidden="true">#</a> SQL92</h3><p>自连接可以对多个表进行操作，也可以对同一个表进行操作。也就是说查询条件使用了当前表的字段。</p><blockquote><p>比如我们想要查看<code>布雷克-格里芬</code>高的球员都有谁，以及他们的对应身高：</p></blockquote><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> b<span class="token punctuation">.</span>player_name<span class="token punctuation">,</span> b<span class="token punctuation">.</span>height <span class="token keyword">FROM</span> player <span class="token keyword">as</span> a <span class="token punctuation">,</span> player <span class="token keyword">as</span> b <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>player_name <span class="token operator">=</span> <span class="token string">&#39;布雷克-格里芬&#39;</span> <span class="token operator">and</span> a<span class="token punctuation">.</span>height <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>height<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">---------------------------+--------+</span>\n<span class="token operator">|</span> player_name               <span class="token operator">|</span> height <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">---------------------------+--------+</span>\n<span class="token operator">|</span> 安德烈<span class="token operator">-</span>德拉蒙德           <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 索恩<span class="token operator">-</span>马克                 <span class="token operator">|</span>   <span class="token number">2.16</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 扎扎<span class="token operator">-</span>帕楚里亚             <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 亨利<span class="token operator">-</span>埃伦森               <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 多曼塔斯<span class="token operator">-</span>萨博尼斯         <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 迈尔斯<span class="token operator">-</span>特纳               <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">---------------------------+--------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="sql99" tabindex="-1"><a class="header-anchor" href="#sql99" aria-hidden="true">#</a> SQL99</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> b<span class="token punctuation">.</span>player_name<span class="token punctuation">,</span> b<span class="token punctuation">.</span>height <span class="token keyword">FROM</span> player <span class="token keyword">as</span> a <span class="token keyword">JOIN</span> player <span class="token keyword">as</span> b <span class="token keyword">ON</span> a<span class="token punctuation">.</span>player_name <span class="token operator">=</span> <span class="token string">&#39;布雷克-格里芬&#39;</span> <span class="token operator">and</span> a<span class="token punctuation">.</span>height <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>height<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">---------------------------+--------+</span>\n<span class="token operator">|</span> player_name               <span class="token operator">|</span> height <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">---------------------------+--------+</span>\n<span class="token operator">|</span> 安德烈<span class="token operator">-</span>德拉蒙德           <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 索恩<span class="token operator">-</span>马克                 <span class="token operator">|</span>   <span class="token number">2.16</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 扎扎<span class="token operator">-</span>帕楚里亚             <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 亨利<span class="token operator">-</span>埃伦森               <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 多曼塔斯<span class="token operator">-</span>萨博尼斯         <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 迈尔斯<span class="token operator">-</span>特纳               <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">---------------------------+--------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="外连接😘" tabindex="-1"><a class="header-anchor" href="#外连接😘" aria-hidden="true">#</a> 外连接😘</h2><p>在 SQL92 中采用（+）代表从表所在的位置，而且在 SQL92 中，只有左外连接和右外连接，没有全外连接。</p><p>在SQL99 的外连接包括了三种形式：</p><ol><li>左外连接：LEFT JOIN 或 LEFT OUTER JOIN</li><li>右外连接：RIGHT JOIN 或 RIGHT OUTER JOIN</li><li>全外连接：FULL JOIN 或 FULL OUTER JOIN（<strong>MySQL不支持</strong>）</li></ol><h3 id="左连接" tabindex="-1"><a class="header-anchor" href="#左连接" aria-hidden="true">#</a> 左连接</h3><blockquote><p>左外连接，就是指<strong>左边的表是主表</strong>，需要显示左边表的全部行，而右侧的表是从表</p></blockquote><ul><li>SQL92: （+）表示哪个是从表</li></ul><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> player<span class="token punctuation">,</span> team <span class="token keyword">where</span> player<span class="token punctuation">.</span>team_id <span class="token operator">=</span> team<span class="token punctuation">.</span>team_id<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nERROR <span class="token number">1064</span> <span class="token punctuation">(</span><span class="token number">42000</span><span class="token punctuation">)</span>: You have an error <span class="token operator">in</span> your <span class="token keyword">SQL</span> syntax<span class="token punctuation">;</span> <span class="token keyword">check</span> the manual that corresponds <span class="token keyword">to</span> your MySQL server version <span class="token keyword">for</span> the <span class="token keyword">right</span> syntax <span class="token keyword">to</span> <span class="token keyword">use</span> near <span class="token string">&#39;)&#39;</span> at line <span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>可以看到mysql不支持SQL92的外连接</p><ul><li>SQL99的：左外连接</li></ul><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> player <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> team <span class="token keyword">on</span> player<span class="token punctuation">.</span>team_id <span class="token operator">=</span> team<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> team_id <span class="token operator">|</span> player_name                        <span class="token operator">|</span> height <span class="token operator">|</span> team_id <span class="token operator">|</span> team_name             <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10003</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 安德烈<span class="token operator">-</span>德拉蒙德                    <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token operator">|</span>     <span class="token number">10035</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 达文<span class="token operator">-</span>里德                          <span class="token operator">|</span>   <span class="token number">1.98</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="右连接" tabindex="-1"><a class="header-anchor" href="#右连接" aria-hidden="true">#</a> 右连接</h3><p>右外连接，指的就是右边的表是主表，需要显示右边表的全部行，而左侧的表是从表</p><ul><li><p>SQL92: （+）表示哪个是从表</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> player<span class="token punctuation">,</span> team <span class="token keyword">where</span> player<span class="token punctuation">.</span>team_id<span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">=</span> team<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\nERROR <span class="token number">1064</span> <span class="token punctuation">(</span><span class="token number">42000</span><span class="token punctuation">)</span>: You have an error <span class="token operator">in</span> your <span class="token keyword">SQL</span> syntax<span class="token punctuation">;</span> <span class="token keyword">check</span> the manual that corresponds <span class="token keyword">to</span> your MySQL server version <span class="token keyword">for</span> the <span class="token keyword">right</span> syntax <span class="token keyword">to</span> <span class="token keyword">use</span> near <span class="token string">&#39;) = team.team_id&#39;</span> at line <span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>SQL99：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> player <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> team <span class="token keyword">on</span> player<span class="token punctuation">.</span>team_id <span class="token operator">=</span> team<span class="token punctuation">.</span>team_id<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> team_id <span class="token operator">|</span> player_name                        <span class="token operator">|</span> height <span class="token operator">|</span> team_id <span class="token operator">|</span> team_name             <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n<span class="token operator">|</span>     <span class="token number">10020</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 卡林<span class="token operator">-</span>卢卡斯                        <span class="token operator">|</span>   <span class="token number">1.85</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10019</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 扎克<span class="token operator">-</span>洛夫顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10018</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 斯维亚托斯拉夫<span class="token operator">-</span>米凯卢克            <span class="token operator">|</span>   <span class="token number">2.03</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token operator">|</span>     <span class="token number">10023</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 多曼塔斯<span class="token operator">-</span>萨博尼斯                  <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10022</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 博扬<span class="token operator">-</span>博格达诺维奇                  <span class="token operator">|</span>   <span class="token number">2.03</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10021</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 维克多<span class="token operator">-</span>奥拉迪波                    <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>\n<span class="token operator">|</span>      <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>                               <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1003</span> <span class="token operator">|</span> 亚特兰大老鹰          <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+--------+---------+-----------------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>可以看到右边表球队全部查询出来了，左边没有对应的球员数据，显示为NULL.</p></li></ul><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><p>主流 RDBMS，比如 MySQL、Oracle、SQL Sever、DB2、PostgreSQL 等都支持 SQL 语言，也就是说它们的使用符合大部分 SQL 标准，但很难完全符合，因为这些数据库管理系统都在 SQL 语言的基础上，根据自身产品的特点进行了扩充。即使这样，SQL 语言也是目前所有语言中半衰期最长的，在 1992 年，Windows3.1 发布，SQL92 标准也同时发布，如今我们早已不使用 Windows3.1 操作系统，而 SQL92 标准却一直持续至今。</p><p>注意到 SQL 标准的变化，以及不同数据库管理系统使用时的差别，比如 Oracle 对 SQL92 支持较好，而 MySQL 则不支持 SQL92 的外连接。</p><h2 id="测试sql资源" tabindex="-1"><a class="header-anchor" href="#测试sql资源" aria-hidden="true">#</a> 测试SQL资源</h2>',78),o={href:"https://github.com/cystanford/sql_nba_data",target:"_blank",rel:"noopener noreferrer"},t=(0,e.Lk)("div",{class:"language-sql ext-sql line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-sql"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"DROP"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"IF"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"EXISTS"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"CREATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"AUTO_INCREMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球员ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球队ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_name"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"varchar"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"255"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(" utf8_general_ci "),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球员姓名'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"float"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"DEFAULT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球员身高'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"PRIMARY"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"KEY"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"USING"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"BTREE"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"UNIQUE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INDEX"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_name"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_name"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"USING"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"BTREE"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"ENGINE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"InnoDB"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8_general_ci ROW_FORMAT "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" Dynamic"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- Records of player"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'韦恩-艾灵顿'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.93"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'雷吉-杰克逊'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.91"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10003"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'安德烈-德拉蒙德'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10004"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'索恩-马克'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.16"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10005"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'布鲁斯-布朗'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.96"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10006"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'兰斯顿-加洛韦'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.88"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10007"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'格伦-罗宾逊三世'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.98"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10008"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'伊斯梅尔-史密斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.83"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10009"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'扎扎-帕楚里亚'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10010"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'乔恩-洛伊尔'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.08"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10011"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'布雷克-格里芬'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.08"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10012"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'雷吉-巴洛克'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.01"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10013"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'卢克-肯纳德'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.96"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10014"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'斯坦利-约翰逊'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.01"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10015"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'亨利-埃伦森'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10016"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'凯里-托马斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.91"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10017"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'何塞-卡尔德隆'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.91"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10018"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'斯维亚托斯拉夫-米凯卢克'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.03"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10019"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'扎克-洛夫顿'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.93"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10020"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'卡林-卢卡斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.85"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10021"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'维克多-奥拉迪波'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.93"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10022"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'博扬-博格达诺维奇'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.03"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10023"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'多曼塔斯-萨博尼斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10024"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'迈尔斯-特纳'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10025"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'赛迪斯-杨'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.03"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10026"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'达伦-科里森'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.83"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10027"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'韦斯利-马修斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.96"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10028"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'泰瑞克-埃文斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.98"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10029"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'道格-迈克德莫特'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.03"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10030"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'科里-约瑟夫'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.91"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10031"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'阿龙-霍勒迪'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.85"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10032"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'TJ-利夫'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.08"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10033"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'凯尔-奥奎因'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.08"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10034"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'埃德蒙-萨姆纳'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.96"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10035"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'达文-里德'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.98"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10036"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'阿利兹-约翰逊'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.06"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10037"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'伊凯·阿尼博古'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.08"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"15"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"16"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"17"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"18"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"19"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"20"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"21"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"22"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"23"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"24"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"25"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"26"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"27"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"28"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"29"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"30"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"31"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"32"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"33"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"34"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"35"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"36"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"37"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"38"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"39"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"40"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"41"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"42"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"43"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"44"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"45"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"46"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"47"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"48"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"49"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"50"),(0,e.Lk)("br")])],-1),k=(0,e.Lk)("div",{class:"language-sql ext-sql line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-sql"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"DROP"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"IF"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"EXISTS"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"CREATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球队ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_name"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"varchar"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"255"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(" utf8_general_ci "),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球队名称'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"PRIMARY"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"KEY"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"USING"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"BTREE"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"ENGINE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"InnoDB"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8_general_ci ROW_FORMAT "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" Dynamic"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- Records of team"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'底特律活塞'"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'印第安纳步行者'"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"1003"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'亚特兰大老鹰'"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br")])],-1),c=(0,e.Lk)("div",{class:"language-sql ext-sql line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-sql"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"DROP"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"IF"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"EXISTS"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"CREATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_level"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"varchar"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"255"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(" utf8_general_ci "),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'身高等级'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_lowest"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"float"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'该等级范围中的最低身高'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_highest"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"float"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'该等级范围中的最高身高'"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"ENGINE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"InnoDB"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8_general_ci ROW_FORMAT "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" Dynamic"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- Records of height_grades"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},"'A'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.00"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.50"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},"'B'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.90"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.99"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},"'C'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.80"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.89"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},"'D'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.60"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.79"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br")])],-1),l={},r=(0,a(66262).A)(l,[["render",function(s,n){const a=(0,e.g2)("OutboundLink"),l=(0,e.g2)("CodeGroupItem"),r=(0,e.g2)("CodeGroup");return(0,e.uX)(),(0,e.CE)(e.FK,null,[p,(0,e.Lk)("p",null,[(0,e.Lk)("a",o,[(0,e.eW)("NBA球员表 "),(0,e.bF)(a)])]),(0,e.bF)(r,null,{default:(0,e.k6)((()=>[(0,e.bF)(l,{title:"play表"},{default:(0,e.k6)((()=>[t])),_:1}),(0,e.bF)(l,{title:"team表"},{default:(0,e.k6)((()=>[k])),_:1}),(0,e.bF)(l,{title:"height_grades表"},{default:(0,e.k6)((()=>[c])),_:1})])),_:1})],64)}]])},66262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);