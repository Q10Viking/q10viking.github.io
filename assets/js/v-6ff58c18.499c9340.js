"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[58063],{16989:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-6ff58c18",path:"/MySQL/44%20%E6%B7%BB%E5%8A%A0%E7%B4%A2%E5%BC%95%E7%9C%9F%E7%9A%84%E4%B8%8D%E4%BC%9A%E9%94%81%E8%A1%A8%E5%90%97.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/MySQL/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"MySQL DDL执行方式",slug:"mysql-ddl执行方式",children:[{level:3,title:"数据准备",slug:"数据准备",children:[]},{level:3,title:"使用ALGORITHM = INPLACE，Lock = NONE;",slug:"使用algorithm-inplace-lock-none",children:[]},{level:3,title:"使用ALGORITHM = COPY，Lock = EXCLUSIVE;",slug:"使用algorithm-copy-lock-exclusive",children:[]},{level:3,title:"模拟online ddl执行时，有其他事务持有MDL锁",slug:"模拟online-ddl执行时-有其他事务持有mdl锁",children:[]}]},{level:2,title:"参数",slug:"参数",children:[{level:3,title:"ALGORITHM：",slug:"algorithm",children:[]},{level:3,title:"LOCK：",slug:"lock",children:[]}]}],filePathRelative:"MySQL/44 添加索引真的不会锁表吗.md"}},28032:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});const e=(0,a(20641).Fv)('<h2 id="mysql-ddl执行方式" tabindex="-1"><a class="header-anchor" href="#mysql-ddl执行方式" aria-hidden="true">#</a> MySQL DDL执行方式</h2><p>MySQL5.5以及之前的版本，通常更改数据表结构操作(DDL)会阻塞对表数据的增删改操作(DML)。 MySQL5.6提供Online DDL之后可支持DDL与DML操作同时执行，降低了DDL期间对业务延迟带来的影响</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>数据操作语言DML（Data Manipulation Language）\n数据库模式定义语言DDL(Data Definition Language)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="数据准备" tabindex="-1"><a class="header-anchor" href="#数据准备" aria-hidden="true">#</a> 数据准备</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>scores<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> scores <span class="token punctuation">(</span>\n   id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;序号&#39;</span><span class="token punctuation">,</span>\n   student_id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;学号&#39;</span><span class="token punctuation">,</span>\n   course_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;课程名称&#39;</span><span class="token punctuation">,</span>\n   score <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;分数&#39;</span><span class="token punctuation">,</span>\n\t remarks <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;备注&#39;</span><span class="token punctuation">,</span>\n\t <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>\n\n<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> scores<span class="token punctuation">;</span> <span class="token comment">--240w</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="使用algorithm-inplace-lock-none" tabindex="-1"><a class="header-anchor" href="#使用algorithm-inplace-lock-none" aria-hidden="true">#</a> 使用ALGORITHM = INPLACE，Lock = NONE;</h3><p>使用INPLACE，NONE时不阻塞其他事务的DML操作。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> scores <span class="token keyword">drop</span> <span class="token keyword">index</span> idx_student_id<span class="token punctuation">;</span>\n事务A使用online ddl添加索引:\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> scores <span class="token keyword">ADD</span> <span class="token keyword">index</span> idx_student_id <span class="token punctuation">(</span>student_id<span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token keyword">ALGORITHM</span><span class="token operator">=</span>INPLACE<span class="token punctuation">,</span> <span class="token keyword">LOCK</span><span class="token operator">=</span>NONE<span class="token punctuation">;</span>\n<span class="token keyword">commit</span><span class="token punctuation">;</span>\n\n<span class="token number">1.</span>事务A使用online ddl添加索引，事务B进行查询，可以正常读取：\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> scores <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>\n<span class="token keyword">commit</span><span class="token punctuation">;</span>\n\n\n<span class="token number">2.</span>事务A使用online ddl添加索引，事务B进行修改，可以正常修改：\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">update</span> scores <span class="token keyword">set</span> course_name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>\n<span class="token keyword">commit</span><span class="token punctuation">;</span>\n\n<span class="token number">3.</span>事务A使用online ddl添加索引，事务B进行删除，可以正常删除：\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">delete</span> <span class="token keyword">from</span> scores <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">commit</span>\n\n<span class="token number">4.</span>事务A使用online ddl添加索引，事务B进行插入，可以正常插入：\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>scores<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>student_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>course_name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>score<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>remarks<span class="token punctuation">`</span></span><span class="token punctuation">)</span> \n\t<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mock_Chinese1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;71&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">commit</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="使用algorithm-copy-lock-exclusive" tabindex="-1"><a class="header-anchor" href="#使用algorithm-copy-lock-exclusive" aria-hidden="true">#</a> 使用ALGORITHM = COPY，Lock = EXCLUSIVE;</h3><p>使用COPY，EXCLUSIVE时，会阻塞其他事务的DML操作。当DDL事务提交后，其他事务才能正常DML操作</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> scores <span class="token keyword">drop</span> <span class="token keyword">index</span> idx_student_id<span class="token punctuation">;</span>\n事务A使用online ddl添加索引:\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> scores <span class="token keyword">ADD</span> <span class="token keyword">index</span> idx_student_id <span class="token punctuation">(</span>student_id<span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token keyword">ALGORITHM</span><span class="token operator">=</span>COPY<span class="token punctuation">,</span> <span class="token keyword">LOCK</span><span class="token operator">=</span>EXCLUSIVE<span class="token punctuation">;</span>\n<span class="token keyword">commit</span><span class="token punctuation">;</span>\n\n<span class="token number">1.</span>事务A使用online ddl添加索引，事务B进行查询出现阻塞，需等事务A结束：\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> scores <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>\n<span class="token keyword">commit</span><span class="token punctuation">;</span>\n\n<span class="token number">2.</span>事务A使用online ddl添加索引，事务B进行修改出现阻塞，需等事务A结束：\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">update</span> scores <span class="token keyword">set</span> course_name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>\n<span class="token keyword">commit</span><span class="token punctuation">;</span>\n\n<span class="token number">3.</span>事务A使用online ddl添加索引，事务B进行删除出现阻塞，需等事务A结束：\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">delete</span> <span class="token keyword">from</span> scores <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">commit</span>\n\n<span class="token number">4.</span>事务A使用online ddl添加索引，事务B进行插入出现阻塞，需等事务A结束：\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>scores<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>student_id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>course_name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>score<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>remarks<span class="token punctuation">`</span></span><span class="token punctuation">)</span> \n\t<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mock_Chinese1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;71&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks_mock_remarks&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">commit</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="模拟online-ddl执行时-有其他事务持有mdl锁" tabindex="-1"><a class="header-anchor" href="#模拟online-ddl执行时-有其他事务持有mdl锁" aria-hidden="true">#</a> 模拟online ddl执行时，有其他事务持有MDL锁</h3><p>Online DDL 过程必须等待已经持有MDL锁的并发事务提交或者回滚才能继续执行</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> scores <span class="token keyword">drop</span> <span class="token keyword">index</span> idx_student_id<span class="token punctuation">;</span>\n事务A进行查询，不提交事务:\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> scores<span class="token punctuation">;</span>\n<span class="token comment">--commit;</span>\n\n事务B使用online ddl添加索引，阻塞中:\n<span class="token keyword">begin</span><span class="token punctuation">;</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> scores <span class="token keyword">ADD</span> <span class="token keyword">index</span> idx_student_id <span class="token punctuation">(</span>student_id<span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token keyword">ALGORITHM</span><span class="token operator">=</span>INPLACE<span class="token punctuation">,</span> <span class="token keyword">LOCK</span><span class="token operator">=</span>NONE<span class="token punctuation">;</span>\n<span class="token keyword">commit</span><span class="token punctuation">;</span>\n\n事务C进行查询，阻塞中:\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> scores <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>\n\n查询进程信息：\n<span class="token keyword">show</span> processlist<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><h3 id="algorithm" tabindex="-1"><a class="header-anchor" href="#algorithm" aria-hidden="true">#</a> <strong>ALGORITHM：</strong></h3><p>**ALGORITHM=DEFAULT：**默认算法，使用最高效的算法 **ALGORITHM=INPLACE：**在原表上进行更改，不需要生成临时表，不需要进行数据copy的过程。 添加索引步骤： 1.创建索引(二级索引)数据字典 2.加共享表锁，禁止DML，允许查询 3.读取聚簇索引，构造新的索引项，排序并插入新索引 4.等待打开当前表的所有只读事务提交 5.创建索引结束</p><p>**ALGORITHM=COPY：**最原始的方式，通过临时表创建索引，需要多一倍存储，还有更多的IO（类似5.6版本之前的处理过程） 添加索引步骤： 1.新建带索引（主键索引）的临时表 2.锁原表，禁止DML，允许查询 3.将原表数据拷贝到临时表 4.禁止读写,进行rename，升级字典锁 5.完成创建索引操作</p><h3 id="lock" tabindex="-1"><a class="header-anchor" href="#lock" aria-hidden="true">#</a> <strong>LOCK：</strong></h3><p>**LOCK=DEFAULT：**默认方式，MySQL自行判断使用哪种LOCK模式，尽量不锁表 **LOCK=NONE：**无锁：允许Online DDL期间进行并发读写操作。如果Online DDL操作不支持对表的继续写入，则DDL操作失败，对表修改无效 **LOCK=SHARED：**共享锁：Online DDL操作期间堵塞写入，不影响读取 **LOCK=EXCLUSIVE：**排它锁：Online DDL操作期间不允许对锁表进行任何操作</p>',20),p={},o=(0,a(66262).A)(p,[["render",function(n,s){return e}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);