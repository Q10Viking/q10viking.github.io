"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[80992],{49536:(t,l,e)=>{e.r(l),e.d(l,{data:()=>i});const i={key:"v-7f333145",path:"/MySQL/39%20%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/MySQL/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[],filePathRelative:"MySQL/39 创建索引注意事项.md"}},62206:(t,l,e)=>{e.r(l),e.d(l,{default:()=>u});var i=e(20641);const n=[(0,i.Lk)("li",null,"**选择适当的列：**根据实际查询需求和数据特点，选择合适的列作为索引列。通常情况下，选择经常被用于查询条件、排序或聚合操作的列作为索引列可以获得更好的性能。",-1),(0,i.Lk)("li",null,"**避免过多的索引：**过多的索引会增加存储空间的开销，并且在数据写入时需要维护多个索引结构，导致性能下降。因此，只创建必要的索引，避免不必要的冗余索引。",-1),(0,i.Lk)("li",null,"**考虑联合索引：**对于多个列的组合查询条件，可以考虑创建复合索引。复合索引可以覆盖多个列，减少查询时需要访问的索引数量，提高查询效率。",-1),(0,i.Lk)("li",null,"**注意索引的顺序：**对于多列索引，考虑索引的顺序。将最常用的列放在索引的前面，以提高查询性能。",-1),(0,i.Lk)("li",null,"**使用合适的数据类型：**选择合适的数据类型可以减小索引的大小，提高索引的效率。尽量避免使用过长或过大的数据类型作为索引列。",-1)],r={},u=(0,e(66262).A)(r,[["render",function(t,l){return(0,i.uX)(),(0,i.CE)("ol",null,n)}]])},66262:(t,l)=>{l.A=(t,l)=>{const e=t.__vccOpts||t;for(const[t,i]of l)e[t]=i;return e}}}]);