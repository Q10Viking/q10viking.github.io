"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[1798],{51942:(n,o,t)=>{t.r(o),t.d(o,{data:()=>e});const e={key:"v-475a93c2",path:"/MySQL/47%20Undo%20Log%E6%98%AF%E5%A6%82%E4%BD%95%E5%9B%9E%E6%BB%9A%E4%BA%8B%E5%8A%A1%E7%9A%84.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/MySQL/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[],filePathRelative:"MySQL/47 Undo Log是如何回滚事务的.md"}},57827:(n,o,t)=>{t.r(o),t.d(o,{default:()=>k});var e=t(20641);const l=(0,e.Lk)("p",null,"**首先，**获取事务的回滚指针或Undo Log的起始位置。",-1),u=(0,e.Lk)("p",null,"从Undo Log的末尾开始逆向扫描，按照事务操作的逆序依次处理每个日志记录。",-1),r=(0,e.Lk)("p",null,"**然后，**针对 INSERT 操作，执行 DELETE 操作来撤销插入的数据。对于 UPDATE 操作，使用Undo Log 中记录的旧值将数据还原到之前的状态。",-1),L=(0,e.Lk)("p",null,"在回滚过程中，对于已经提交的其他事务所做的修改需要跳过，只处理属于当前回滚事务的 Undo Log 记录。",-1),a=(0,e.Lk)("p",null,"按照逆序依次处理所有的日志记录，直到达到回滚指针位置或 Undo Log 的起始位置。",-1),d=(0,e.Lk)("p",null,"**回滚完成后，**清除或标记已回滚的 Undo Log 记录。",-1),p=(0,e.Lk)("p",null,"总体而言，事务回滚是通过执行 Undo Log 中记录的反向操作，将事务的修改操作撤销，恢复到事务开始前的状态。",-1),i={},k=(0,t(66262).A)(i,[["render",function(n,o){return(0,e.uX)(),(0,e.CE)(e.FK,null,[l,u,r,L,a,d,p],64)}]])},66262:(n,o)=>{o.A=(n,o)=>{const t=n.__vccOpts||n;for(const[n,e]of o)t[n]=e;return t}}}]);