"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[9746],{67956:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-6e09dd26",path:"/java/57%20%E6%B3%A8%E8%A7%A3%E6%B3%A8%E9%87%8A.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/java/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[],filePathRelative:"java/57 注解注释.md"}},6223:(n,a,s)=>{s.r(a),s.d(a,{default:()=>t});const e=(0,s(20641).Fv)('<ul><li>@since</li><li>@author</li><li>@version</li><li>@see</li><li>@link</li><li>@return</li><li>@param</li><li>@inheritDoc</li></ul><blockquote><p>9之所以注释中能使用html标签，是因为package-info.java之前是package.html</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>public tracking web interfaces<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>对外物流跟踪web接口<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n * <span class="token keyword">@since</span> 1.1\n * <span class="token keyword">@author</span> Q10Viking\n * <span class="token keyword">@version</span> 1.1\n */</span>\n<span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span>ddd<span class="token punctuation">.</span>interfaces<span class="token punctuation">.</span>tracking</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * Validator for <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">TrackCommand</span></span><span class="token punctuation">}</span>s.\n *if applicable a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span>ddd<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>model<span class="token punctuation">.</span>voyage<span class="token punctuation">.</span></span><span class="token class-name">Voyage</span></span><span class="token punctuation">}</span>.\n */</span>\n\n枚举<span class="token comment">//{@link Type#LOAD} or {@link Type#UNLOAD}.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n     * Value objects compare by the values of their attributes, they don&#39;t have an identity.\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">other</span> The other value object.\n     * <span class="token keyword">@return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">true</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> if the given value object&#39;s and this value object&#39;s attributes are the same.\n     */</span>\n<span class="token keyword">boolean</span> <span class="token function">sameValueAs</span><span class="token punctuation">(</span><span class="token class-name">T</span> other<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\n<span class="token doc-comment comment">/**\n     * <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span>\n     */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',6),p={},t=(0,s(66262).A)(p,[["render",function(n,a){return e}]])},66262:(n,a)=>{a.A=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);