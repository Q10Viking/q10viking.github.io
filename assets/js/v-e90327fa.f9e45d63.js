"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[39591],{38508:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-e90327fa",path:"/minifrontendproject/07%20Typing%20%E6%88%91%E6%89%93%E7%A2%8E%E4%BA%86%E5%A4%95%E9%98%B3.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/minifrontendproject/"}},excerpt:"",headers:[{level:2,title:"Typing by JS",slug:"typing-by-js",children:[]},{level:2,title:"笔记",slug:"笔记",children:[{level:3,title:"背景图片设置",slug:"背景图片设置",children:[]}]}],filePathRelative:"minifrontendproject/07 Typing 我打碎了夕阳.md"}},90314:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var p=a(20641);const e=(0,p.Lk)("h2",{id:"typing-by-js",tabindex:"-1"},[(0,p.Lk)("a",{class:"header-anchor",href:"#typing-by-js","aria-hidden":"true"},"#"),(0,p.eW)(" Typing by JS")],-1),t={href:"https://q10viking.github.io/Mini-FrontEnd-project/11%20Simple%20Typing%20animation%20by%20js/",target:"_blank",rel:"noopener noreferrer"},o={href:"https://github.com/Q10Viking/Mini-FrontEnd-project/tree/main/11%20Simple%20Typing%20animation%20by%20js",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Fv)('<h2 id="笔记" tabindex="-1"><a class="header-anchor" href="#笔记" aria-hidden="true">#</a> 笔记</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>使用setInterval一个个字符输出</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;我打碎了夕阳&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;洒在你身上&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;你满是圣光&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;我黯然退场&#39;</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> linesDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;.line&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> word <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;word&#39;</span><span class="token punctuation">)</span>\n<span class="token comment">// ,&#39;洒在你身上&#39;,&#39;你满是圣光&#39;,&#39;我黯然退场&#39;</span>\n<span class="token keyword">let</span> arrayIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> charIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> allText <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n\n<span class="token keyword">let</span> currentLine <span class="token operator">=</span> linesDiv<span class="token punctuation">[</span>arrayIndex<span class="token punctuation">]</span>\n\n<span class="token keyword">let</span> refresh <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> content <span class="token operator">=</span> words<span class="token punctuation">[</span>arrayIndex<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>charIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    currentLine<span class="token punctuation">.</span>innerText <span class="token operator">=</span> content\n\n    <span class="token keyword">if</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span>length <span class="token operator">===</span> words<span class="token punctuation">[</span>arrayIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        allText <span class="token operator">+=</span> content<span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>arrayIndex <span class="token operator">===</span> words<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">// 清空内容重新书写</span>\n            linesDiv<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">div</span> <span class="token operator">=&gt;</span> div<span class="token punctuation">.</span>innerText<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n            charIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            arrayIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            <span class="token comment">// clearInterval(refresh)</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n            <span class="token comment">// next line</span>\n            arrayIndex<span class="token operator">++</span>\n            charIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    currentLine <span class="token operator">=</span> linesDiv<span class="token punctuation">[</span>arrayIndex<span class="token punctuation">]</span>\n    charIndex<span class="token operator">++</span><span class="token punctuation">;</span>\n    \n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="背景图片设置" tabindex="-1"><a class="header-anchor" href="#背景图片设置" aria-hidden="true">#</a> 背景图片设置</h3><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./sun-night.jpg&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>\n<span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>\n<span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>\n<span class="token property">background-position</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',5),r={},l=(0,a(66262).A)(r,[["render",function(n,s){const a=(0,p.g2)("OutboundLink"),r=(0,p.g2)("common-progresson-snippet");return(0,p.uX)(),(0,p.CE)(p.FK,null,[e,(0,p.Lk)("p",null,[(0,p.Lk)("a",t,[(0,p.eW)("项目预览（Project view）"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",o,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),(0,p.bF)(r,{src:"https://q10viking.github.io/Mini-FrontEnd-project/11%20Simple%20Typing%20animation%20by%20js/"}),c],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);