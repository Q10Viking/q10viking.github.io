"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[66621],{19134:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-0572a1b3",path:"/ShardingJDBC/04%20%E5%B9%BF%E6%92%AD.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/ShardingJDBC/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"广播表",slug:"广播表",children:[]},{level:2,title:"配置",slug:"配置",children:[]},{level:2,title:"测试",slug:"测试",children:[]}],filePathRelative:"ShardingJDBC/04 广播.md"}},1795:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var e=a(20641);const p=(0,e.Lk)("h2",{id:"广播表",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#广播表","aria-hidden":"true"},"#"),(0,e.eW)(" 广播表")],-1),t={href:"https://github.com/Q10Viking/springcloudalibaba/tree/main/shardingjdbc/_07-broadcast",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Fv)('<p>存在一些公共表在所有库中，需要同步更新，这时候广播表就能做到。它不需要数据库分片，表分片</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>t_dict<span class="token punctuation">`</span></span>  <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>dict_id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>ustatus<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>uvalue<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token comment">#配置真实的数据源</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.names</span><span class="token punctuation">=</span><span class="token value attr-value">m1,m2</span>\n\n<span class="token key attr-name">spring.shardingsphere.datasource.m1.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m1.drive-class</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.cj.jdbc.Driver</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m1.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://192.168.135.130:3306/coursedb?serverTimezone=UTC</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m1.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m1.password</span><span class="token punctuation">=</span><span class="token value attr-value">Root.123456</span>\n\n\n<span class="token key attr-name">spring.shardingsphere.datasource.m2.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m2.drive-class</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.cj.jdbc.Driver</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m2.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://192.168.135.130:3306/coursedb2?serverTimezone=UTC</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m2.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m2.password</span><span class="token punctuation">=</span><span class="token value attr-value">Root.123456</span>\n\n<span class="token comment"># 指定表的分布情况 配置表在哪个数据库里，表名是什么。水平分表，分两个表：</span>\n<span class="token comment">#m1.course_1,m1.course_2</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.actual-data-nodes</span><span class="token punctuation">=</span><span class="token value attr-value">m$-&gt;{1..2}.course_$-&gt;{1..2}</span>\n\n<span class="token comment"># 指定表的主键生成策略</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.key-generator.column</span><span class="token punctuation">=</span><span class="token value attr-value">cid</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.key-generator.type</span><span class="token punctuation">=</span><span class="token value attr-value">MYKEY</span>\n\n<span class="token comment">#指定分片策略</span>\n<span class="token comment"># 数据分片策略</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.database-strategy.inline.algorithm-expression</span><span class="token punctuation">=</span><span class="token value attr-value">m$-&gt;{cid%2+1}</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.database-strategy.inline.sharding-column</span><span class="token punctuation">=</span><span class="token value attr-value">cid</span>\n<span class="token comment"># 表分片策略</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression</span><span class="token punctuation">=</span><span class="token value attr-value">course_$-&gt;{(cid%4).intdiv(2)+1}</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column</span><span class="token punctuation">=</span><span class="token value attr-value">cid</span>\n\n<span class="token comment"># 广播表配置</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.broadcast-tables</span><span class="token punctuation">=</span><span class="token value attr-value">t_dict</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.t_dict.key-generator.column</span><span class="token punctuation">=</span><span class="token value attr-value">dict_id</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.t_dict.key-generator.type</span><span class="token punctuation">=</span><span class="token value attr-value">SNOWFLAKE</span>\n\n\n<span class="token comment"># 打开日志输出</span>\n<span class="token key attr-name">spring.shardingsphere.props.sql.show</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token class-name">Dict</span> dict <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    dict<span class="token punctuation">.</span><span class="token function">setUstatus</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    dict<span class="token punctuation">.</span><span class="token function">setUvalue</span><span class="token punctuation">(</span><span class="token string">&quot;正常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    dictMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>dict<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token class-name">Dict</span> dict2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    dict2<span class="token punctuation">.</span><span class="token function">setUstatus</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    dict2<span class="token punctuation">.</span><span class="token function">setUvalue</span><span class="token punctuation">(</span><span class="token string">&quot;异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    dictMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>dict2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>可以看到两个库都插入了数据</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">2023</span>-03-27 <span class="token number">18</span>:24:30.750 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> ShardingSphere-SQL  <span class="token builtin class-name">:</span> Actual SQL: \nm1 ::: INSERT INTO t_dict  <span class="token punctuation">(</span> ustatus,\nuvalue , dict_id<span class="token punctuation">)</span>  VALUES  <span class="token punctuation">(</span>?, ?, ?<span class="token punctuation">)</span> ::: <span class="token punctuation">[</span><span class="token number">2</span>, 异常, <span class="token number">847178401579008001</span><span class="token punctuation">]</span>\n\n<span class="token number">2023</span>-03-27 <span class="token number">18</span>:24:30.750 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> ShardingSphere-SQL  <span class="token builtin class-name">:</span> Actual SQL: \nm2 ::: INSERT INTO t_dict  <span class="token punctuation">(</span> ustatus,\nuvalue , dict_id<span class="token punctuation">)</span>  VALUES  <span class="token punctuation">(</span>?, ?, ?<span class="token punctuation">)</span> ::: <span class="token punctuation">[</span><span class="token number">2</span>, 异常, <span class="token number">847178401579008001</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="/images/ShardingJDBC/image-20230327182545404.png" alt="image-20230327182545404"></p>',9),l={},r=(0,a(66262).A)(l,[["render",function(n,s){const a=(0,e.g2)("OutboundLink");return(0,e.uX)(),(0,e.CE)(e.FK,null,[p,(0,e.Lk)("p",null,[(0,e.Lk)("a",t,[(0,e.eW)("Source Code"),(0,e.bF)(a)])]),c],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);