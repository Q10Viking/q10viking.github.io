"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[57778],{44203:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-82de570e",path:"/typescript/04%20tsc%E7%AE%A1%E7%90%86ts%E6%96%87%E4%BB%B6.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/typescript/"}},excerpt:"",headers:[{level:2,title:"tsc管理ts文件",slug:"tsc管理ts文件",children:[{level:3,title:"单个文件",slug:"单个文件",children:[]},{level:3,title:"整个项目",slug:"整个项目",children:[]}]},{level:2,title:"tsconfig.json文件",slug:"tsconfig-json文件",children:[]}],filePathRelative:"typescript/04 tsc管理ts文件.md"}},78320:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(20641).Fv)('<h2 id="tsc管理ts文件" tabindex="-1"><a class="header-anchor" href="#tsc管理ts文件" aria-hidden="true">#</a> tsc管理ts文件</h2><h3 id="单个文件" tabindex="-1"><a class="header-anchor" href="#单个文件" aria-hidden="true">#</a> 单个文件</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>tsc file.ts <span class="token parameter variable">-w</span>\n<span class="token comment"># 或者</span>\ntsc file.ts <span class="token parameter variable">--watch</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="整个项目" tabindex="-1"><a class="header-anchor" href="#整个项目" aria-hidden="true">#</a> 整个项目</h3><p>将整个项目交给TypeScript Compiler管理</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 执行命令会生成 tsconfig.json</span>\ntsc <span class="token parameter variable">--init</span>\n<span class="token comment"># model模式</span>\ntsc <span class="token parameter variable">--watch</span>   <span class="token comment"># 或者tsc -w</span>\n\n<span class="token comment">#直接执行tsc，则一次性编译所有ts文件</span>\ntsc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="tsconfig-json文件" tabindex="-1"><a class="header-anchor" href="#tsconfig-json文件" aria-hidden="true">#</a> tsconfig.json文件</h2><p>用于配置tsc如何编译ts文件</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es6&quot;</span><span class="token punctuation">,</span> <span class="token comment">/*指定typescript compiler编译的版本*/</span>\n<span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">/* 用于debug ts文件⭐*/</span>\n<span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist&quot;</span><span class="token punctuation">,</span> <span class="token comment">/*编译后的js文件存放根目录*/</span>\n<span class="token property">&quot;rootDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./src&quot;</span><span class="token punctuation">,</span> <span class="token comment">/*指定要编译的文件所在的根目录*/</span>\n<span class="token property">&quot;noEmitOnError&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">/*如果报告任何类型检查错误，则禁用编译文件*/</span>\n<span class="token comment">// =================严格模式================================</span>\n<span class="token property">&quot;strictNullChecks&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token comment">/*对于可能为null的进行检查*/</span>\n<span class="token property">&quot;noUnusedLocals&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">/*对声明却没有被使用的进行检查*/</span>\n\n<span class="token comment">// ======================配置相对路径=====================================</span>\n<span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>\n<span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;@/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&quot;src/*&quot;</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 这样就能导入 import TodoItem from &#39;@/types/TodoItems&#39;     在src/types/TodoItems.ts</span>\n<span class="token comment">// ==========================================================================</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// !告诉typescript compiler 这个不会返回null,是永远存在的</span>\n<span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 为了确保的确存在，自己需要处理一下</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">// ... ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',10),t={},p=(0,a(66262).A)(t,[["render",function(s,n){return e}]])},66262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);