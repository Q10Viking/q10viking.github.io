"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[29879],{6483:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-34d30540",path:"/minifrontendproject/16%20Auto%20Text%20Effect.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/minifrontendproject/"}},excerpt:"",headers:[{level:2,title:"Auto Text Effect",slug:"auto-text-effect",children:[]},{level:2,title:"input number类型",slug:"input-number类型",children:[]},{level:2,title:"使用setTimeout进行回调",slug:"使用settimeout进行回调",children:[]}],filePathRelative:"minifrontendproject/16 Auto Text Effect.md"}},69682:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var t=a(20641);const e=(0,t.Lk)("h2",{id:"auto-text-effect",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#auto-text-effect","aria-hidden":"true"},"#"),(0,t.eW)(" Auto Text Effect")],-1),p={href:"https://q10viking.github.io/Mini-FrontEnd-project/20%20Auto%20Text%20Effect/",target:"_blank",rel:"noopener noreferrer"},o={href:"https://github.com/Q10Viking/Mini-FrontEnd-project/tree/main/20%20Auto%20Text%20Effect",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Fv)('<h2 id="input-number类型" tabindex="-1"><a class="header-anchor" href="#input-number类型" aria-hidden="true">#</a> input number类型</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><ol><li><p>type = number</p></li><li><p>监听的是input事件</p></li></ol></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>speed<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>speed<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 监听input事件,也可以监听change事件</span>\nspeedEl<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> speed <span class="token operator">=</span> <span class="token number">300</span> <span class="token operator">/</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n<span class="token comment">// speedEl.addEventListener(&#39;change&#39;,e =&gt; speed = 300 / e.target.value)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="使用settimeout进行回调" tabindex="-1"><a class="header-anchor" href="#使用settimeout进行回调" aria-hidden="true">#</a> 使用setTimeout进行回调</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>只是用setTimeout而没有使用setInterval</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">writeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    textEl<span class="token punctuation">.</span>innerText <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>idx<span class="token punctuation">)</span>\n    idx<span class="token operator">++</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>idx <span class="token operator">&gt;</span> message<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        idx <span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span>writeMessage<span class="token punctuation">,</span>speed<span class="token punctuation">)</span> <span class="token comment">// 递归调用</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',7),u={},l=(0,a(66262).A)(u,[["render",function(n,s){const a=(0,t.g2)("OutboundLink"),u=(0,t.g2)("common-progresson-snippet");return(0,t.uX)(),(0,t.CE)(t.FK,null,[e,(0,t.Lk)("p",null,[(0,t.Lk)("a",p,[(0,t.eW)("项目预览（Project view）"),(0,t.bF)(a)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",o,[(0,t.eW)("Source Code"),(0,t.bF)(a)])]),(0,t.bF)(u,{src:"https://q10viking.github.io/Mini-FrontEnd-project/20%20Auto%20Text%20Effect/"}),c],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);