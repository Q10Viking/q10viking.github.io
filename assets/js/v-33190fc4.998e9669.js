"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[83319],{9623:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-33190fc4",path:"/spring/07%20cglib%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/spring/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[{level:3,title:"代理类",slug:"代理类",children:[]},{level:3,title:"代理接口",slug:"代理接口",children:[]}]},{level:2,title:"查看生成的代理类",slug:"查看生成的代理类",children:[{level:3,title:"methodProxy",slug:"methodproxy",children:[]}]},{level:2,title:"代理类",slug:"代理类-1",children:[]},{level:2,title:"MethodProxy",slug:"methodproxy-1",children:[]}],filePathRelative:"spring/07 cglib动态代理源码分析.md"}},40929:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(20641).Fv)('<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><h3 id="代理类" tabindex="-1"><a class="header-anchor" href="#代理类" aria-hidden="true">#</a> 代理类</h3><blockquote><p>定义一个UserService类</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>cglib实现代理</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">final</span> <span class="token class-name">UserService</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Enhancer</span> enhancer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Enhancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        enhancer<span class="token punctuation">.</span><span class="token function">setUseCache</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        enhancer<span class="token punctuation">.</span><span class="token function">setSuperclass</span><span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        enhancer<span class="token punctuation">.</span><span class="token function">setCallback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MethodInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token annotation punctuation">@Override</span>\n            <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> objects<span class="token punctuation">,</span> <span class="token class-name">MethodProxy</span> methodProxy<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;before&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token class-name">Object</span> result <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;after&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">return</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">UserService</span> proxy <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">)</span> enhancer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        proxy<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * before\n * test\n * after\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="代理接口" tabindex="-1"><a class="header-anchor" href="#代理接口" aria-hidden="true">#</a> 代理接口</h3><blockquote><p>定义一个接口</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserServiceInterface</span> <span class="token punctuation">{</span>\n    <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>cglib实现代理</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainInterface</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Enhancer</span> enhancer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Enhancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        enhancer<span class="token punctuation">.</span><span class="token function">setUseCache</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        enhancer<span class="token punctuation">.</span><span class="token function">setSuperclass</span><span class="token punctuation">(</span><span class="token class-name">UserServiceInterface</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        enhancer<span class="token punctuation">.</span><span class="token function">setCallback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MethodInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token annotation punctuation">@Override</span>\n            <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> objects<span class="token punctuation">,</span> <span class="token class-name">MethodProxy</span> methodProxy<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;执行切面逻辑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">Object</span> proxy <span class="token operator">=</span> enhancer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">UserServiceInterface</span><span class="token punctuation">)</span>proxy<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * 执行切面逻辑\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="查看生成的代理类" tabindex="-1"><a class="header-anchor" href="#查看生成的代理类" aria-hidden="true">#</a> 查看生成的代理类</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-Dcglib.debugLocation=D:\\Github\\learncode\\spring\\_03-cglib\\_03-cglib\\target\\classes\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="/images/spring/image-20230409141330800.png" alt="image-20230409141330800"></p><details class="custom-container details"><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span>$$<span class="token class-name">EnhancerByCGLIB</span>$$<span class="token number">7f</span>c9ae62 <span class="token keyword">extends</span> <span class="token class-name">UserService</span> <span class="token keyword">implements</span> <span class="token class-name">Factory</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token constant">CGLIB</span>$<span class="token constant">BOUND</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token constant">CGLIB</span>$<span class="token constant">FACTORY_DATA</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ThreadLocal</span> <span class="token constant">CGLIB</span>$<span class="token constant">THREAD_CALLBACKS</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">CGLIB</span>$<span class="token constant">STATIC_CALLBACKS</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">MethodInterceptor</span> <span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_FILTER</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Method</span> <span class="token constant">CGLIB</span>$test$<span class="token number">0</span>$<span class="token class-name">Method</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">MethodProxy</span> <span class="token constant">CGLIB</span>$test$<span class="token number">0</span>$<span class="token class-name">Proxy</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">CGLIB</span>$emptyArgs<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Method</span> <span class="token constant">CGLIB</span>$equals$<span class="token number">1</span>$<span class="token class-name">Method</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">MethodProxy</span> <span class="token constant">CGLIB</span>$equals$<span class="token number">1</span>$<span class="token class-name">Proxy</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Method</span> <span class="token constant">CGLIB</span>$toString$<span class="token number">2</span>$<span class="token class-name">Method</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">MethodProxy</span> <span class="token constant">CGLIB</span>$toString$<span class="token number">2</span>$<span class="token class-name">Proxy</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Method</span> <span class="token constant">CGLIB</span>$hashCode$<span class="token number">3</span>$<span class="token class-name">Method</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">MethodProxy</span> <span class="token constant">CGLIB</span>$hashCode$<span class="token number">3</span>$<span class="token class-name">Proxy</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Method</span> <span class="token constant">CGLIB</span>$clone$<span class="token number">4</span>$<span class="token class-name">Method</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">MethodProxy</span> <span class="token constant">CGLIB</span>$clone$<span class="token number">4</span>$<span class="token class-name">Proxy</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token constant">CGLIB</span>$<span class="token function">STATICHOOK1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token constant">THREAD_CALLBACKS</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$emptyArgs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token class-name">Class</span> var0 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;org.hzz.UserService$$EnhancerByCGLIB$$7fc9ae62&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Class</span> var1<span class="token punctuation">;</span>\n        <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var10000 <span class="token operator">=</span> <span class="token class-name">ReflectUtils</span><span class="token punctuation">.</span><span class="token function">findMethods</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;equals&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(Ljava/lang/Object;)Z&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;toString&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;()Ljava/lang/String;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hashCode&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;()I&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;clone&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;()Ljava/lang/Object;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>var1 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$equals$<span class="token number">1</span>$<span class="token class-name">Method</span> <span class="token operator">=</span> var10000<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$equals$<span class="token number">1</span>$<span class="token class-name">Proxy</span> <span class="token operator">=</span> <span class="token class-name">MethodProxy</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token string">&quot;(Ljava/lang/Object;)Z&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;equals&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CGLIB$equals$1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$toString$<span class="token number">2</span>$<span class="token class-name">Method</span> <span class="token operator">=</span> var10000<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$toString$<span class="token number">2</span>$<span class="token class-name">Proxy</span> <span class="token operator">=</span> <span class="token class-name">MethodProxy</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token string">&quot;()Ljava/lang/String;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;toString&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CGLIB$toString$2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$hashCode$<span class="token number">3</span>$<span class="token class-name">Method</span> <span class="token operator">=</span> var10000<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$hashCode$<span class="token number">3</span>$<span class="token class-name">Proxy</span> <span class="token operator">=</span> <span class="token class-name">MethodProxy</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token string">&quot;()I&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hashCode&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CGLIB$hashCode$3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$clone$<span class="token number">4</span>$<span class="token class-name">Method</span> <span class="token operator">=</span> var10000<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$clone$<span class="token number">4</span>$<span class="token class-name">Proxy</span> <span class="token operator">=</span> <span class="token class-name">MethodProxy</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token string">&quot;()Ljava/lang/Object;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;clone&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CGLIB$clone$4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$test$<span class="token number">0</span>$<span class="token class-name">Method</span> <span class="token operator">=</span> <span class="token class-name">ReflectUtils</span><span class="token punctuation">.</span><span class="token function">findMethods</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;()V&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>var1 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;org.hzz.UserService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$test$<span class="token number">0</span>$<span class="token class-name">Proxy</span> <span class="token operator">=</span> <span class="token class-name">MethodProxy</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token string">&quot;()V&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CGLIB$test$0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token constant">CGLIB</span>$test$<span class="token function">0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MethodInterceptor</span> var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token constant">CGLIB</span>$<span class="token function">BIND_CALLBACKS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            var10000<span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$test$<span class="token number">0</span>$<span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$emptyArgs<span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$test$<span class="token number">0</span>$<span class="token class-name">Proxy</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token constant">CGLIB</span>$equals$<span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MethodInterceptor</span> var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token constant">CGLIB</span>$<span class="token function">BIND_CALLBACKS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">Object</span> var2 <span class="token operator">=</span> var10000<span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$equals$<span class="token number">1</span>$<span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>var1<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$equals$<span class="token number">1</span>$<span class="token class-name">Proxy</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> var2 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span>var2<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CGLIB</span>$toString$<span class="token function">2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MethodInterceptor</span> var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token constant">CGLIB</span>$<span class="token function">BIND_CALLBACKS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> var10000 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>var10000<span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$toString$<span class="token number">2</span>$<span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$emptyArgs<span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$toString$<span class="token number">2</span>$<span class="token class-name">Proxy</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CGLIB</span>$hashCode$<span class="token function">3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MethodInterceptor</span> var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token constant">CGLIB</span>$<span class="token function">BIND_CALLBACKS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">Object</span> var1 <span class="token operator">=</span> var10000<span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$hashCode$<span class="token number">3</span>$<span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$emptyArgs<span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$hashCode$<span class="token number">3</span>$<span class="token class-name">Proxy</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> var1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Number</span><span class="token punctuation">)</span>var1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">final</span> <span class="token class-name">Object</span> <span class="token constant">CGLIB</span>$clone$<span class="token function">4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">CloneNotSupportedException</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">CloneNotSupportedException</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MethodInterceptor</span> var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token constant">CGLIB</span>$<span class="token function">BIND_CALLBACKS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> var10000 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> var10000<span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$clone$<span class="token number">4</span>$<span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$emptyArgs<span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$clone$<span class="token number">4</span>$<span class="token class-name">Proxy</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">MethodProxy</span> <span class="token constant">CGLIB</span>$<span class="token function">findMethodProxy</span><span class="token punctuation">(</span><span class="token class-name">Signature</span> var0<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">String</span> var10000 <span class="token operator">=</span> var0<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">switch</span> <span class="token punctuation">(</span>var10000<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">case</span> <span class="token operator">-</span><span class="token number">1422510685</span><span class="token operator">:</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;test()V&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token constant">CGLIB</span>$test$<span class="token number">0</span>$<span class="token class-name">Proxy</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token operator">-</span><span class="token number">508378822</span><span class="token operator">:</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;clone()Ljava/lang/Object;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token constant">CGLIB</span>$clone$<span class="token number">4</span>$<span class="token class-name">Proxy</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token number">1826985398</span><span class="token operator">:</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;equals(Ljava/lang/Object;)Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token constant">CGLIB</span>$equals$<span class="token number">1</span>$<span class="token class-name">Proxy</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token number">1913648695</span><span class="token operator">:</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;toString()Ljava/lang/String;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token constant">CGLIB</span>$toString$<span class="token number">2</span>$<span class="token class-name">Proxy</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token number">1984935277</span><span class="token operator">:</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;hashCode()I&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token constant">CGLIB</span>$hashCode$<span class="token number">3</span>$<span class="token class-name">Proxy</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">UserService</span>$$<span class="token class-name">EnhancerByCGLIB</span>$$<span class="token function">7fc9ae62</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token function">BIND_CALLBACKS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token constant">CGLIB</span>$<span class="token function">SET_THREAD_CALLBACKS</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var0<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token constant">THREAD_CALLBACKS</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>var0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token constant">CGLIB</span>$<span class="token function">SET_STATIC_CALLBACKS</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var0<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token constant">STATIC_CALLBACKS</span> <span class="token operator">=</span> var0<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token constant">CGLIB</span>$<span class="token function">BIND_CALLBACKS</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var0<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">UserService</span>$$<span class="token class-name">EnhancerByCGLIB</span>$$<span class="token number">7f</span>c9ae62 var1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserService</span>$$<span class="token class-name">EnhancerByCGLIB</span>$$<span class="token number">7f</span>c9ae62<span class="token punctuation">)</span>var0<span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>var1<span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">BOUND</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            var1<span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">BOUND</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token class-name">Object</span> var10000 <span class="token operator">=</span> <span class="token constant">CGLIB</span>$<span class="token constant">THREAD_CALLBACKS</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                var10000 <span class="token operator">=</span> <span class="token constant">CGLIB</span>$<span class="token constant">STATIC_CALLBACKS</span><span class="token punctuation">;</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n\n            var1<span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MethodInterceptor</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>var10000<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token function">SET_THREAD_CALLBACKS</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">UserService</span>$$<span class="token class-name">EnhancerByCGLIB</span>$$<span class="token number">7f</span>c9ae62 var10000 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span>$$<span class="token class-name">EnhancerByCGLIB</span>$$<span class="token function">7fc9ae62</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$<span class="token function">SET_THREAD_CALLBACKS</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> var10000<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Callback</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token function">SET_THREAD_CALLBACKS</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>var1<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">UserService</span>$$<span class="token class-name">EnhancerByCGLIB</span>$$<span class="token number">7f</span>c9ae62 var10000 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span>$$<span class="token class-name">EnhancerByCGLIB</span>$$<span class="token function">7fc9ae62</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token constant">CGLIB</span>$<span class="token function">SET_THREAD_CALLBACKS</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> var10000<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">,</span> <span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token function">SET_THREAD_CALLBACKS</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">UserService</span>$$<span class="token class-name">EnhancerByCGLIB</span>$$<span class="token number">7f</span>c9ae62 var10000 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span>$$<span class="token class-name">EnhancerByCGLIB</span>$$<span class="token number">7f</span>c9ae62<span class="token punctuation">;</span>\n        <span class="token keyword">switch</span> <span class="token punctuation">(</span>var1<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>\n                var10000<span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token constant">CGLIB</span>$<span class="token function">SET_THREAD_CALLBACKS</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span> var10000<span class="token punctuation">;</span>\n            <span class="token keyword">default</span><span class="token operator">:</span>\n                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Constructor not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Callback</span> <span class="token function">getCallback</span><span class="token punctuation">(</span><span class="token keyword">int</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token function">BIND_CALLBACKS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">MethodInterceptor</span> var10000<span class="token punctuation">;</span>\n        <span class="token keyword">switch</span> <span class="token punctuation">(</span>var1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>\n                var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">default</span><span class="token operator">:</span>\n                var10000 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> var10000<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCallback</span><span class="token punctuation">(</span><span class="token keyword">int</span> var1<span class="token punctuation">,</span> <span class="token class-name">Callback</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">switch</span> <span class="token punctuation">(</span>var1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MethodInterceptor</span><span class="token punctuation">)</span>var2<span class="token punctuation">;</span>\n            <span class="token keyword">default</span><span class="token operator">:</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token function">BIND_CALLBACKS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCallbacks</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MethodInterceptor</span><span class="token punctuation">)</span>var1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">static</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token function">STATICHOOK1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br></div></div></details><h3 id="methodproxy" tabindex="-1"><a class="header-anchor" href="#methodproxy" aria-hidden="true">#</a> methodProxy</h3><blockquote><p>UserService代理对象在 执⾏test()⽅法，那么当执⾏流程进⼊到intercept()⽅法时，MethodProxy对象表示的就是test()⽅法， 但是我们现在知道了在UserService类和UserService代理类中都有test()⽅法，所以MethodProxy对象 代理的就是这两个test()</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//  o表示当前代理对象，target表示被代理对象</span>\n\n<span class="token comment">// 执⾏UserService代理对象的CGLIB$test$0()⽅法，也就是执⾏UserService代理对象的⽗类的test()</span>\n<span class="token class-name">Object</span> result <span class="token operator">=</span> methodProxy<span class="token punctuation">.</span><span class="token function">invokeSuper</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 报错 ClassCastException: org.hzz.UserService cannot be cast to org.hzz.UserService$$EnhancerByCGLIB$$7fc9ae62</span>\n<span class="token class-name">Object</span> result <span class="token operator">=</span> methodProxy<span class="token punctuation">.</span><span class="token function">invokeSuper</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 执⾏UserService对象的test()</span>\n<span class="token class-name">Object</span> result <span class="token operator">=</span> methodProxy<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 报错：栈溢出</span>\n<span class="token class-name">Object</span> result <span class="token operator">=</span> methodProxy<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>所以在执⾏methodProxy.invokeSuper()⽅法时，就会去执⾏CGLIB$test$0()⽅法。 我们来总结⼀下cglib的⼤概⼯作原理是：cglib会根据所设置的Superclass，⽣成代理类作为其⼦类， 并且会重写Superclass中的⽅法，Superclass中的某⼀个⽅法，⽐如test()，相应的在代理类中会对应 两个⽅法，⼀个是重写的test()，⽤来执⾏增强逻辑，⼀个是CGLIB$test$0()，会直接调⽤ super.test()，是让MethodProxy对象来⽤的。</p><h2 id="代理类-1" tabindex="-1"><a class="header-anchor" href="#代理类-1" aria-hidden="true">#</a> 代理类</h2><p>代理类中有⼀个代理块，会调⽤CGLIB$STATICHOOK1()，这个⽅法主要就是给属性赋值，⽐如：</p><ol><li><p>构造⼀个ThreadLocal对象给CGLIB$THREAD_CALLBACKS属性</p></li><li><p>获取UserService类中的test⽅法的Method对象给CGLIB$test$0$Method属性</p></li><li><p>构造test()⽅法所对应的MethodProxy对象给CGLIB$test$0$Proxy属性</p></li><li><p>cglib先⽣成代理类</p></li><li><p>然后调⽤构造⽅法得到代理对象</p></li><li><p>然后cglib调⽤代理对象的CGLIB$SET_THREAD_CALLBACKS()⽅法，把程序员所设置的 Callbacks设置到CGLIB$THREAD_CALLBACKS这个ThreadLocal中</p></li><li><p>后续代理对象在执⾏test()⽅法时，就会从CGLIB$THREAD_CALLBACKS拿到所设置的 Callbacks</p></li></ol><hr><p>调⽤其intercept()⽅法 ⽽代理类的⽣成逻辑就是：</p><ol><li>先⽣成类的定义，实现UserService和Factory接⼝</li><li>根据UserService类中的⽅法⽣成代理类中对应的⽅法和属性</li><li>⽣成⼀些辅助的属性和⽅法</li></ol><h2 id="methodproxy-1" tabindex="-1"><a class="header-anchor" href="#methodproxy-1" aria-hidden="true">#</a> MethodProxy</h2><p>MethodProxy对象，表示⼀个⽅法的代理，⽐如UserSerivce中的test()⽅法，在对应的代理 类中会有对应的两个⽅法</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token constant">CGLIB</span>$test$<span class="token function">0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">MethodInterceptor</span> var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">CGLIB</span>$<span class="token function">BIND_CALLBACKS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        var10000 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">CGLIB</span>$<span class="token constant">CALLBACK_0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>var10000 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        var10000<span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$test$<span class="token number">0</span>$<span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$emptyArgs<span class="token punctuation">,</span> <span class="token constant">CGLIB</span>$test$<span class="token number">0</span>$<span class="token class-name">Proxy</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//  o表示当前代理对象，target表示被代理对象</span>\n\n<span class="token comment">// 执⾏UserService代理对象的CGLIB$test$0()⽅法，也就是执⾏UserService代理对象的⽗类的test()</span>\n<span class="token class-name">Object</span> result <span class="token operator">=</span> methodProxy<span class="token punctuation">.</span><span class="token function">invokeSuper</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 报错 ClassCastException: org.hzz.UserService cannot be cast to org.hzz.UserService$$EnhancerByCGLIB$$7fc9ae62</span>\n<span class="token class-name">Object</span> result <span class="token operator">=</span> methodProxy<span class="token punctuation">.</span><span class="token function">invokeSuper</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 执⾏UserService对象的test()</span>\n<span class="token class-name">Object</span> result <span class="token operator">=</span> methodProxy<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 报错：栈溢出</span>\n<span class="token class-name">Object</span> result <span class="token operator">=</span> methodProxy<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>下MethodProxy对象的创建，创建的⼊⼝在代理类中：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Class</span> var0 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;org.hzz.UserService$$EnhancerByCGLIB$$7fc9ae62&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token constant">CGLIB</span>$test$<span class="token number">0</span>$<span class="token class-name">Proxy</span> <span class="token operator">=</span> <span class="token class-name">MethodProxy</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token string">&quot;()V&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CGLIB$test$0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">MethodProxy</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Class</span> c1<span class="token punctuation">,</span> <span class="token class-name">Class</span> c2<span class="token punctuation">,</span> <span class="token class-name">String</span> desc<span class="token punctuation">,</span> <span class="token class-name">String</span> name1<span class="token punctuation">,</span> <span class="token class-name">String</span> name2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// c1是UserService类</span>\n    <span class="token comment">// c2是UserService代理类</span>\n    <span class="token comment">// desc是⽅法的返回类型 ()V</span>\n    <span class="token comment">// name1是⽅法名 test</span>\n    <span class="token comment">// name2是代理类中对应的另外⼀个⽅法名，CGLIB$test$0</span>\n    <span class="token class-name">MethodProxy</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MethodProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    proxy<span class="token punctuation">.</span>sig1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Signature</span><span class="token punctuation">(</span>name1<span class="token punctuation">,</span> desc<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    proxy<span class="token punctuation">.</span>sig2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Signature</span><span class="token punctuation">(</span>name2<span class="token punctuation">,</span> desc<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    proxy<span class="token punctuation">.</span>createInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateInfo</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',32),t={},e=(0,a(66262).A)(t,[["render",function(n,s){return p}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);