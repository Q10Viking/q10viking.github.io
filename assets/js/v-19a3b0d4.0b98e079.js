"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[74820],{38668:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-19a3b0d4",path:"/designpattern/12%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/designpattern/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"模式定义",slug:"模式定义",children:[{level:3,title:"对象的联动",slug:"对象的联动",children:[]}]},{level:2,title:"开发优点",slug:"开发优点",children:[]},{level:2,title:"基本模型",slug:"基本模型",children:[{level:3,title:"基本模型1",slug:"基本模型1",children:[]},{level:3,title:"基本模型2",slug:"基本模型2",children:[]}]},{level:2,title:"应用场景",slug:"应用场景",children:[]},{level:2,title:"源码应用",slug:"源码应用",children:[]},{level:2,title:"案例",slug:"案例",children:[{level:3,title:"多人联机对战游戏",slug:"多人联机对战游戏",children:[]},{level:3,title:"RRS消息订阅",slug:"rrs消息订阅",children:[]},{level:3,title:"观察者与被观察者的理解",slug:"观察者与被观察者的理解",children:[]}]}],filePathRelative:"designpattern/12 观察者模式.md"}},54055:(n,s,a)=>{a.r(s),a.d(s,{default:()=>g});var p=a(20641);const t=(0,p.Fv)('<h2 id="模式定义" tabindex="-1"><a class="header-anchor" href="#模式定义" aria-hidden="true">#</a> 模式定义</h2><p>观察者模式也叫做发布/订阅模型（Publish/Subscribe）</p><blockquote><p>定义了对象之间的<strong>一对多依赖</strong>，让<strong>多个观察者对象同时监听某一个主题对象</strong>，<strong>当主题对象发生变化</strong>时，它的<strong>所有依赖者都会收到通知并更新</strong></p></blockquote><h3 id="对象的联动" tabindex="-1"><a class="header-anchor" href="#对象的联动" aria-hidden="true">#</a> 对象的联动</h3><p><img src="/images/designpattern/image-20240327153550482.png" alt="image-20240327153550482"></p><hr><h2 id="开发优点" tabindex="-1"><a class="header-anchor" href="#开发优点" aria-hidden="true">#</a> 开发优点</h2><ol><li>符合开闭原则</li><li>可以在<strong>运行时建立对象之间的关系</strong></li></ol><h2 id="基本模型" tabindex="-1"><a class="header-anchor" href="#基本模型" aria-hidden="true">#</a> 基本模型</h2><h3 id="基本模型1" tabindex="-1"><a class="header-anchor" href="#基本模型1" aria-hidden="true">#</a> 基本模型1</h3>',10),e={href:"https://gitee.com/q10viking/design-patterns/tree/master/springboot-design-patterns/src/main/java/org/hzz/%E8%A1%8C%E4%B8%BA%E6%80%A7%E6%A8%A1%E5%BC%8F/BP1_%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/%E5%9F%BA%E6%9C%AC%E6%A8%A1%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Fv)('<p><img src="/images/designpattern/image-20240327154307815.png" alt="image-20240327154307815"></p><ul><li>Subject（目标）：目标又称为主题，它是指被观察的对象。在目标中定义了一个观察者集合，一个观察目标可以接受任意数量的观察者来观察，它提供一系列方法来增加和删除观察者对象，同时定义了通知方法notify（）。目标类可以是接口，也可以是抽象类或具体类。(有点类似注册中心的意思)</li><li>ConcreteSubject（具体目标）：具体目标是目标类的子类，通常包含有经常发生改变的数据。当它的状态发生改变时，向其各个观察者发出通知。同时它还实现了在目标类中定义的抽象业务逻辑方法（如果有）。如果无须扩展目标类，则具体目标类可以省略</li><li>ConcreteSubject（具体目标）：具体目标是目标类的子类，通常包含有经常发生改变的数据。当它的状态发生改变时，向其各个观察者发出通知。同时它还实现了在目标类中定义的抽象业务逻辑方法（如果有）。如果无须扩展目标类，则具体目标类可以省略</li><li>ConcreteObserver（具体观察者）：在具体观察者中维护一个指向具体目标对象的引用，它存储具体观察者的有关状态，这些状态需要和具体目标的状态保持一致。它实现了在抽象观察者Observer中声明的update（）方法。通常在实现时，可以调用具体目标类的attach（）方法将自己添加到目标类的集合中或通过detach（）方法将自己从目标类的集合中删除。</li></ul><h4 id="subject" tabindex="-1"><a class="header-anchor" href="#subject" aria-hidden="true">#</a> subject</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 目标主题抽象类\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Subject</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 定义一个观察者集合用于存储所有观察者对象</span>\n    <span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observer</span><span class="token punctuation">&gt;</span></span> observers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 注册方法，用于向观察者集合中添加一个观察者</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attach</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> observer<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        observers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>observer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 注销方法,用于在观察者集合中删除指定的观察者</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">detach</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> observer<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        observers<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>observer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 声明抽象通知方法</span>\n    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">notifyAllObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>基本模型<span class="token punctuation">.</span>impl<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>基本模型<span class="token punctuation">.</span>Observer<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>基本模型<span class="token punctuation">.</span>Subject<span class="token punctuation">;</span>\n\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolExecutor</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConcreteSubject</span> <span class="token keyword">extends</span> <span class="token class-name">Subject</span> <span class="token punctuation">{</span>\n    <span class="token class-name">ThreadPoolExecutor</span> executor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">)</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 实现通知方法</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">notifyAllObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 遍历观察者集合，调用每一个观察者的像一个响应方法</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Observer</span> observer<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>observers<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            executor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span> observer<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;业务变动，通知各个观察者&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAllObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h4 id="observer" tabindex="-1"><a class="header-anchor" href="#observer" aria-hidden="true">#</a> observer</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 响应声明方法</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConcreteObserver</span> <span class="token keyword">implements</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token class-name">ConcreteObserver</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 实现响应方法</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 具体响应代码</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">&quot;收到通知&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Subject</span> subject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcreteSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        subject<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConcreteObserver</span><span class="token punctuation">(</span><span class="token string">&quot;broker-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        subject<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConcreteObserver</span><span class="token punctuation">(</span><span class="token string">&quot;broker-2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        subject<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConcreteObserver</span><span class="token punctuation">(</span><span class="token string">&quot;broker-3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ConcreteSubject</span><span class="token punctuation">)</span>subject<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * 业务变动，通知各个观察者\n * broker-2收到通知\n * broker-3收到通知\n * broker-1收到通知\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="基本模型2" tabindex="-1"><a class="header-anchor" href="#基本模型2" aria-hidden="true">#</a> 基本模型2</h3><p><img src="/images/designpattern/image-20210330234215870.png" alt="image-20210330234215870"></p>',12),o={href:"https://github.com/Q10Viking/learncode/tree/main/designpattern/src/org/hzz/observer",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 观察者</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ObServer</span> <span class="token punctuation">{</span>\n    <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Object</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 主题</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Subject</span> <span class="token punctuation">{</span>\n    <span class="token keyword">void</span> <span class="token function">attach</span><span class="token punctuation">(</span><span class="token class-name">ObServer</span> obServer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">ObServer</span> obServer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">void</span> <span class="token function">notifyAllObServer</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 订阅者实现</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Task</span> <span class="token keyword">implements</span> <span class="token class-name">ObServer</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;Task1&quot;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Task</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Object</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s receive %s\\n&quot;</span><span class="token punctuation">,</span>name<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 主题实现</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SubjectImp</span> <span class="token keyword">implements</span> <span class="token class-name">Subject</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ObServer</span><span class="token punctuation">&gt;</span></span> container <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attach</span><span class="token punctuation">(</span><span class="token class-name">ObServer</span> obServer<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        container<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obServer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">ObServer</span> obServer<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        container<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>obServer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">notifyAllObServer</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ObServer</span> observer<span class="token operator">:</span>\n             container<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            observer<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="测试-1" tabindex="-1"><a class="header-anchor" href="#测试-1" aria-hidden="true">#</a> 测试</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestMain</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Subject</span> subject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubjectImp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ObServer</span> task1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Task</span><span class="token punctuation">(</span><span class="token string">&quot;Task1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ObServer</span> task2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Task</span><span class="token punctuation">(</span><span class="token string">&quot;Task2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        subject<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>task1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        subject<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>task2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        subject<span class="token punctuation">.</span><span class="token function">notifyAllObServer</span><span class="token punctuation">(</span><span class="token string">&quot;A happed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        subject<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>task2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        subject<span class="token punctuation">.</span><span class="token function">notifyAllObServer</span><span class="token punctuation">(</span><span class="token string">&quot;A happed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * Task1 receive A happed\n * Task2 receive A happed\n * --------------------------------------------\n * Task1 receive A happed\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><hr><h2 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h2><p>当<strong>更改一个对象的状态可能需要更改其他对象</strong>，并且实际的<strong>对象集事先未知或动态更改</strong>时，请使用观察者模式</p><h2 id="源码应用" tabindex="-1"><a class="header-anchor" href="#源码应用" aria-hidden="true">#</a> 源码应用</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Spring</span><span class="token operator">:</span>\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span>ApplicationListener</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><h3 id="多人联机对战游戏" tabindex="-1"><a class="header-anchor" href="#多人联机对战游戏" aria-hidden="true">#</a> 多人联机对战游戏</h3>',13),u={href:"https://gitee.com/q10viking/design-patterns/tree/master/springboot-design-patterns/src/main/java/org/hzz/%E8%A1%8C%E4%B8%BA%E6%80%A7%E6%A8%A1%E5%BC%8F/BP1_%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/%E6%A1%88%E4%BE%8B/%E5%A4%9A%E4%BA%BA%E8%81%94%E6%9C%BA%E5%AF%B9%E6%88%98%E6%B8%B8%E6%88%8F",target:"_blank",rel:"noopener noreferrer"},i=(0,p.Fv)('<p>联盟成员受到攻击→发送通知给盟友→盟友做出响应。</p><p><img src="/images/designpattern/image-20240327153550482.png" alt="image-20240327153550482"></p><p><img src="/images/designpattern/image-20240327170525513.png" alt="image-20240327170525513"></p><p>AllyControlCenter充当目标类，ConcreteAllyControlCenter充当具体目标类，Observer充当抽象观察者，Player充当具体观察者</p><h4 id="控制中心-主题" tabindex="-1"><a class="header-anchor" href="#控制中心-主题" aria-hidden="true">#</a> 控制中心（主题）</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//战队控制中心类：目标类</span>\n<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AllyControlCenter</span> <span class="token punctuation">{</span>\n    <span class="token comment">//战队名称</span>\n    <span class="token keyword">protected</span> <span class="token class-name">String</span> allyName<span class="token punctuation">;</span>\n    <span class="token comment">//定义一个集合用于存储战队成员</span>\n    <span class="token keyword">protected</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observer</span><span class="token punctuation">&gt;</span></span> players <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAllyName</span><span class="token punctuation">(</span><span class="token class-name">String</span> allyName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>allyName <span class="token operator">=</span> allyName<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAllyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>allyName<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//注册方法</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> obs<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obs<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;加入&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>allyName <span class="token operator">+</span> <span class="token string">&quot;战队！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        players<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//注销方法</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">quit</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> obs<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obs<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;退出&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>allyName <span class="token operator">+</span> <span class="token string">&quot;战队！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        players<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>obs<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//声明抽象通知方法</span>\n    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">notifyObserver</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>具体实现</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>多人联机对战游戏<span class="token punctuation">.</span>impl<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>多人联机对战游戏<span class="token punctuation">.</span>AllyControlCenter<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>多人联机对战游戏<span class="token punctuation">.</span>Observer<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolExecutor</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConcreteAllyControlCenter</span> <span class="token keyword">extends</span> <span class="token class-name">AllyControlCenter</span> <span class="token punctuation">{</span>\n    <span class="token class-name">ThreadPoolExecutor</span> executor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">)</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token class-name">ConcreteAllyControlCenter</span><span class="token punctuation">(</span><span class="token class-name">String</span> allyName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>allyName <span class="token operator">+</span> <span class="token string">&quot;战队组建成功！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>allyName <span class="token operator">=</span> allyName<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">notifyObserver</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>allyName <span class="token operator">+</span> <span class="token string">&quot;战队紧急通知，盟友&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;遭受敌人攻击！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//遍历观察者集合，调用每一个盟友（自己除外）的支援方法</span>\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> obs <span class="token operator">:</span> players<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obs<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// 使用多线程提高并发</span>\n               executor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span> obs<span class="token punctuation">.</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h4 id="玩家-观察者" tabindex="-1"><a class="header-anchor" href="#玩家-观察者" aria-hidden="true">#</a> 玩家（观察者）</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//抽象观察类</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//声明支援盟友方法</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beAttacked</span><span class="token punctuation">(</span><span class="token class-name">AllyControlCenter</span> acc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//声明遭受攻击方法</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>具体实现</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>多人联机对战游戏<span class="token punctuation">.</span>impl<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>多人联机对战游戏<span class="token punctuation">.</span>AllyControlCenter<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>多人联机对战游戏<span class="token punctuation">.</span>Observer<span class="token punctuation">;</span>\n\n<span class="token comment">//战队成员类：具体观察者类</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Player</span> <span class="token keyword">implements</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//支援盟友方法的实现</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">help</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;坚持住，&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&quot;来救你！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//遭受攻击方法的实现，当遭受攻击时将调用战队控制中心类的通知方法notifyObserver()来通知盟友</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beAttacked</span><span class="token punctuation">(</span><span class="token class-name">AllyControlCenter</span> acc<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&quot;被攻击！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        acc<span class="token punctuation">.</span><span class="token function">notifyObserver</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h4 id="测试-2" tabindex="-1"><a class="header-anchor" href="#测试-2" aria-hidden="true">#</a> 测试</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>多人联机对战游戏<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>多人联机对战游戏<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>ConcreteAllyControlCenter<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>多人联机对战游戏<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>Player<span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//定义观察目标对象</span>\n        <span class="token class-name">AllyControlCenter</span> acc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcreteAllyControlCenter</span><span class="token punctuation">(</span><span class="token string">&quot;王者荣耀红方&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//定义四个观察者对象</span>\n        <span class="token class-name">Observer</span> player1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token string">&quot;对抗路-狂铁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Observer</span> player2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token string">&quot;辅助-蔡文姬&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Observer</span> player3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token string">&quot;中路-女娲&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Observer</span> player4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token string">&quot;打野-云中君&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Observer</span> player5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token string">&quot;射手-伽罗&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        acc<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>player1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        acc<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>player2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        acc<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>player3<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        acc<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>player4<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        acc<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>player5<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//某成员遭受攻击</span>\n        player1<span class="token punctuation">.</span><span class="token function">beAttacked</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * 王者荣耀红方战队组建成功！\n * ----------------------------\n * 对抗路-狂铁加入王者荣耀红方战队！\n * 辅助-蔡文姬加入王者荣耀红方战队！\n * 中路-女娲加入王者荣耀红方战队！\n * 打野-云中君加入王者荣耀红方战队！\n * 射手-伽罗加入王者荣耀红方战队！\n * 对抗路-狂铁被攻击！\n * 王者荣耀红方战队紧急通知，盟友对抗路-狂铁遭受敌人攻击！\n * 坚持住，辅助-蔡文姬来救你！\n * 坚持住，打野-云中君来救你！\n * 坚持住，中路-女娲来救你！\n * 坚持住，射手-伽罗来救你！\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h3 id="rrs消息订阅" tabindex="-1"><a class="header-anchor" href="#rrs消息订阅" aria-hidden="true">#</a> RRS消息订阅</h3>',15),r={href:"https://gitee.com/q10viking/design-patterns/tree/master/springboot-design-patterns/src/main/java/org/hzz/%E8%A1%8C%E4%B8%BA%E6%80%A7%E6%A8%A1%E5%BC%8F/BP1_%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/%E6%A1%88%E4%BE%8B/RRS%E6%B6%88%E6%81%AF%E8%AE%A2%E9%98%85",target:"_blank",rel:"noopener noreferrer"},k=(0,p.Fv)('<h4 id="主题中心" tabindex="-1"><a class="header-anchor" href="#主题中心" aria-hidden="true">#</a> 主题中心</h4><p>定义一系列操作行为</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 消息订阅者操作接口\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IRsserOperate</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 增加一个订阅者</span>\n    <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">IRss</span> rss<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 移除一个订阅者</span>\n    <span class="token keyword">void</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token class-name">IRss</span> rss<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 根据订阅者的ID移除一个订阅者</span>\n    <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Long</span> rssID<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 通知所有订阅者，订阅的内容是什么</span>\n    <span class="token keyword">void</span> <span class="token function">notifyRssers</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 发布消息</span>\n    <span class="token keyword">void</span> <span class="token function">publish</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>抽象主题类</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 抽象一个订阅类，实现rss操作\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractSubscription</span> <span class="token keyword">implements</span> <span class="token class-name">IRsserOperate</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 存放不同的消息订阅对象（一个消息订阅对象对应一个消息消费者）\n     */</span>\n    <span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IRss</span><span class="token punctuation">&gt;</span></span> rsses <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">IRss</span> rss<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>rsses<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>rss<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token class-name">IRss</span> rss<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>rsses<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>rss<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * 移除消息订阅方\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">rssId</span> 消息订阅消费者ID\n     */</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Long</span> rssId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IRss</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> rsses<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">RssUser</span> next <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RssUser</span><span class="token punctuation">)</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>rssId<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**\n     * 将消息通知到所有的订阅者\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">content</span> 消息内容\n     */</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">notifyRssers</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">IRss</span> rss <span class="token operator">:</span> rsses<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 循环调用</span>\n            rss<span class="token punctuation">.</span><span class="token function">rss</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><p>具体实现</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span><span class="token constant">RRS</span>消息订阅<span class="token punctuation">.</span>impl<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span><span class="token constant">RRS</span>消息订阅<span class="token punctuation">.</span>AbstractSubscription<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span><span class="token constant">RRS</span>消息订阅<span class="token punctuation">.</span>IRss<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ExecutorService</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CsdnSystem</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractSubscription</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">ExecutorService</span> executor <span class="token operator">=</span>\n            <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>一旦调用该方法，所有依赖于csdn系统的消息订阅者都将收到变更的消息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n     */</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">publish</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">CsdnSystem</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyRssers</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 使用自己的通知，采用线程池</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">notifyRssers</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">IRss</span> user <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rsses<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            executor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> user<span class="token punctuation">.</span><span class="token function">rss</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h4 id="观察者rss订阅的用户" tabindex="-1"><a class="header-anchor" href="#观察者rss订阅的用户" aria-hidden="true">#</a> 观察者Rss订阅的用户</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>消息订阅接口，提供一个订阅消息内容的实现<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IRss</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 消息订阅，主要输出订阅的内容\n     */</span>\n    <span class="token keyword">void</span> <span class="token function">rss</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>具体实现</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 消息订阅消费者\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RssUser</span> <span class="token keyword">implements</span> <span class="token class-name">IRss</span> <span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**\n     * 用户ID\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 用户名称\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">RssUser</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rss</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;尊敬的用户（ id = &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">&quot;,name = &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&quot;),你搜到了一条订阅消息：&quot;</span> <span class="token operator">+</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> id<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="测试-3" tabindex="-1"><a class="header-anchor" href="#测试-3" aria-hidden="true">#</a> 测试</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token string">&quot;官方通知：CSDN版本升级,维护时间到&quot;</span> <span class="token operator">+</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">plusHours</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">CsdnSystem</span> csdnSystem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CsdnSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">RssUser</span><span class="token punctuation">[</span><span class="token punctuation">]</span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RssUser</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>\n                <span class="token keyword">new</span> <span class="token class-name">RssUser</span><span class="token punctuation">(</span><span class="token number">1000L</span><span class="token punctuation">,</span><span class="token string">&quot;hzz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token keyword">new</span> <span class="token class-name">RssUser</span><span class="token punctuation">(</span><span class="token number">1001L</span><span class="token punctuation">,</span><span class="token string">&quot;love&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token keyword">new</span> <span class="token class-name">RssUser</span><span class="token punctuation">(</span><span class="token number">1002L</span><span class="token punctuation">,</span><span class="token string">&quot;java&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span> user <span class="token operator">-&gt;</span> csdnSystem<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        csdnSystem<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * 官方通知：CSDN版本升级,维护时间到2024-03-27T23:57:53.933\n * 尊敬的用户（ id = 1000,name = hzz),你搜到了一条订阅消息：官方通知：CSDN版本升级,维护时间到2024-03-27T23:57:53.933\n * 尊敬的用户（ id = 1002,name = java),你搜到了一条订阅消息：官方通知：CSDN版本升级,维护时间到2024-03-27T23:57:53.933\n * 尊敬的用户（ id = 1001,name = love),你搜到了一条订阅消息：官方通知：CSDN版本升级,维护时间到2024-03-27T23:57:53.933\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="观察者与被观察者的理解" tabindex="-1"><a class="header-anchor" href="#观察者与被观察者的理解" aria-hidden="true">#</a> 观察者与被观察者的理解</h3><h4 id="监控程序版本" tabindex="-1"><a class="header-anchor" href="#监控程序版本" aria-hidden="true">#</a> 监控程序版本</h4>',15),b={href:"https://gitee.com/q10viking/design-patterns/tree/master/springboot-design-patterns/src/main/java/org/hzz/%E8%A1%8C%E4%B8%BA%E6%80%A7%E6%A8%A1%E5%BC%8F/BP1_%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/%E6%A1%88%E4%BE%8B/%E8%A7%82%E5%AF%9F%E8%80%85%E4%B8%8E%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/%E7%9B%91%E6%8E%A7%E7%A8%8B%E5%BA%8F%E7%89%88%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},m=(0,p.Fv)('<p>我们要解决的是李斯是怎么监控韩非子的？创建一个后台线程一直处于运行状态，一旦发现韩非子在吃饭或者娱乐就触发事件？这是真实世界的翻版，安排了一个间谍，观察韩非子的生活起居，并上报给李斯，然后李斯再触发update事件</p><p><img src="/images/designpattern/image-20240327191221682.png" alt="image-20240327191221682"></p><h5 id="被观察查hanfeizi" tabindex="-1"><a class="header-anchor" href="#被观察查hanfeizi" aria-hidden="true">#</a> 被观察查HanFeiZi</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">.</span>被观察者<span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 类似韩非子这花样的人，被监控起来了还不知道\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IHanFeiZi</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">//韩非子也是人，也要吃早饭的</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">haveBreakfast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//韩非之也是人，是人就要娱乐活动，</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">haveFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">.</span>被观察者<span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 韩非子，李斯的师弟，韩国的重要人物\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HanFeiZi</span> <span class="token keyword">implements</span> <span class="token class-name">IHanFeiZi</span><span class="token punctuation">{</span>\n    <span class="token comment">//韩非子是否在吃饭，作为监控的判断标准</span>\n    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> isHavingBreakfast <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token comment">//韩非子是否在娱乐</span>\n    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> isHavingFun <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//韩非子要吃饭了</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">haveBreakfast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;韩非子:开始吃饭了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>isHavingBreakfast <span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//韩非子开始娱乐了,古代人没啥娱乐，你能想到的就那么多</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">haveFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;韩非子:开始娱乐了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>isHavingFun <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//以下是bean的基本方法，getter/setter，不多说</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isHavingBreakfast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> isHavingBreakfast<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHavingBreakfast</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> isHavingBreakfast<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>isHavingBreakfast <span class="token operator">=</span> isHavingBreakfast<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isHavingFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> isHavingFun<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHavingFun</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> isHavingFun<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>isHavingFun <span class="token operator">=</span> isHavingFun<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h5 id="观察者李斯" tabindex="-1"><a class="header-anchor" href="#观察者李斯" aria-hidden="true">#</a> 观察者李斯</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">.</span>观察者<span class="token punctuation">;</span>\n\n\n<span class="token doc-comment comment">/**\n * 类似于李斯的这种人，现代嘛叫做偷窥狂\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ILiSi</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">//一发现别人有动静，自己也要行动起来</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">String</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">.</span>观察者<span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 李斯这个人，是个观察者，只要韩非子一有动静，这边就知道\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LiSi</span> <span class="token keyword">implements</span> <span class="token class-name">ILiSi</span><span class="token punctuation">{</span>\n\n    <span class="token comment">//首先李斯是个观察者，一旦韩非子有活动，他就知道，他就要向老板汇报</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;李斯:观察到韩非子活动，开始向老板汇报了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reportToQiShiHuang</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;李斯：汇报完毕，秦老板赏给他两个萝卜吃吃...\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//汇报给秦始皇</span>\n    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">reportToQiShiHuang</span><span class="token punctuation">(</span><span class="token class-name">String</span> reportContext<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;李斯：报告，秦老板！韩非子有活动了---&gt;&quot;</span><span class="token operator">+</span>reportContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h5 id="监控程序" tabindex="-1"><a class="header-anchor" href="#监控程序" aria-hidden="true">#</a> 监控程序</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">.</span>监控程序<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">.</span>被观察者<span class="token punctuation">.</span>HanFeiZi<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">.</span>观察者<span class="token punctuation">.</span>LiSi<span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Spy</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">HanFeiZi</span> hanFeiZi<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">LiSi</span> liSi<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> type<span class="token punctuation">;</span>\n\n    <span class="token comment">//通过构造函数传递参数，我要监控的是谁,谁来监控,要监控什么</span>\n    <span class="token keyword">public</span> <span class="token class-name">Spy</span><span class="token punctuation">(</span><span class="token class-name">HanFeiZi</span> _hanFeiZi<span class="token punctuation">,</span><span class="token class-name">LiSi</span> _liSi<span class="token punctuation">,</span><span class="token class-name">String</span> _type<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>hanFeiZi <span class="token operator">=</span>_hanFeiZi<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>liSi <span class="token operator">=</span> _liSi<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> _type<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;breakfast&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//监控是否在吃早餐</span>\n                <span class="token comment">//如果发现韩非子在吃饭，就通知李斯</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>hanFeiZi<span class="token punctuation">.</span><span class="token function">isHavingBreakfast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>liSi<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&quot;韩非子在吃饭&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token comment">//重置状态，继续监控</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>hanFeiZi<span class="token punctuation">.</span><span class="token function">setHavingBreakfast</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token comment">//监控是否在娱乐</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>hanFeiZi<span class="token punctuation">.</span><span class="token function">isHavingFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>liSi<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&quot;韩非子在娱乐&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>hanFeiZi<span class="token punctuation">.</span><span class="token function">setHavingFun</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h5 id="测试-4" tabindex="-1"><a class="header-anchor" href="#测试-4" aria-hidden="true">#</a> 测试</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">.</span>监控程序<span class="token punctuation">.</span>Spy<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">.</span>被观察者<span class="token punctuation">.</span>HanFeiZi<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>监控程序版本<span class="token punctuation">.</span>观察者<span class="token punctuation">.</span>LiSi<span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>\n        <span class="token comment">//定义出韩非子和李斯</span>\n        <span class="token class-name">LiSi</span> liSi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LiSi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">HanFeiZi</span> hanFeiZi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HanFeiZi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//观察早餐</span>\n        <span class="token class-name">Spy</span> watchBreakfast <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Spy</span><span class="token punctuation">(</span>hanFeiZi<span class="token punctuation">,</span>liSi<span class="token punctuation">,</span><span class="token string">&quot;breakfast&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//开始启动线程，监控</span>\n        watchBreakfast<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//观察娱乐情况</span>\n        <span class="token class-name">Spy</span> watchFun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Spy</span><span class="token punctuation">(</span>hanFeiZi<span class="token punctuation">,</span>liSi<span class="token punctuation">,</span><span class="token string">&quot;fun&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        watchFun<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//然后这里我们看看韩非子在干什么</span>\n        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//主线程等待1秒后后再往下执行</span>\n        hanFeiZi<span class="token punctuation">.</span><span class="token function">haveBreakfast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//韩非子娱乐了</span>\n        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        hanFeiZi<span class="token punctuation">.</span><span class="token function">haveFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        watchBreakfast<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        watchFun<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * 韩非子:开始吃饭了...\n * 李斯:观察到韩非子活动，开始向老板汇报了...\n * 李斯：报告，秦老板！韩非子有活动了---&gt;韩非子在吃饭\n * 李斯：汇报完毕，秦老板赏给他两个萝卜吃吃...\n *\n * 韩非子:开始娱乐了...\n * 李斯:观察到韩非子活动，开始向老板汇报了...\n * 李斯：报告，秦老板！韩非子有活动了---&gt;韩非子在娱乐\n * 李斯：汇报完毕，秦老板赏给他两个萝卜吃吃...\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h4 id="引入设计模式" tabindex="-1"><a class="header-anchor" href="#引入设计模式" aria-hidden="true">#</a> 引入设计模式</h4>',13),d={href:"https://gitee.com/q10viking/design-patterns/tree/master/springboot-design-patterns/src/main/java/org/hzz/%E8%A1%8C%E4%B8%BA%E6%80%A7%E6%A8%A1%E5%BC%8F/BP1_%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/%E6%A1%88%E4%BE%8B/%E8%A7%82%E5%AF%9F%E8%80%85%E4%B8%8E%E8%A2%AB%E8%A7%82%E5%AF%9F%E8%80%85/%E5%BC%95%E5%85%A5%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},v=(0,p.Fv)('<h5 id="被观察者observable" tabindex="-1"><a class="header-anchor" href="#被观察者observable" aria-hidden="true">#</a> 被观察者Observable</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 所有被观察者者，通用接口\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Observable</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">//增加一个观察者</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addObserver</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> observer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//删除一个观察者，——我不想让你看了</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteObserver</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> observer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//既然要观察，我发生改变了他也应该用所动作——通知观察者</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">notifyObservers</span><span class="token punctuation">(</span><span class="token class-name">String</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>韩非子个人行为</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IHanFeiZi</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">//韩非子也是人，也要吃早饭的</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">haveBreakfast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//韩非之也是人，是人就要娱乐活动，至于活动时啥，嘿嘿，不说了</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">haveFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>实现</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>被观察者对象<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>Observable<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>Observer<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolExecutor</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HanFeiZi</span> <span class="token keyword">implements</span> <span class="token class-name">Observable</span><span class="token punctuation">,</span><span class="token class-name">IHanFeiZi</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ThreadPoolExecutor</span> executor <span class="token operator">=</span>\n            <span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">)</span><span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//定义个变长数组，存放所有的观察者</span>\n    <span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observer</span><span class="token punctuation">&gt;</span></span> observerList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//增加观察者</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addObserver</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> observer<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>observerList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>observer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//删除观察者</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteObserver</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> observer<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>observerList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>observer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//通知所有的观察者</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">notifyObservers</span><span class="token punctuation">(</span><span class="token class-name">String</span> context<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> observer<span class="token operator">:</span> observerList<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            executor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>observer<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//韩非子要吃饭了</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">haveBreakfast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;韩非子:开始吃饭了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//通知所有的观察者</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyObservers</span><span class="token punctuation">(</span><span class="token string">&quot;韩非子在吃饭&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//韩非子开始娱乐了,古代人没啥娱乐，你能想到的就那么多</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">haveFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;韩非子:开始娱乐了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyObservers</span><span class="token punctuation">(</span><span class="token string">&quot;韩非子在娱乐&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h5 id="观察者" tabindex="-1"><a class="header-anchor" href="#观察者" aria-hidden="true">#</a> 观察者</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\n<span class="token doc-comment comment">/**\n * 所有观察者，通用接口\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">//一发现别人有动静，自己也要行动起来</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">String</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>三个观察者实现类</p><ol><li>李斯</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>观察者<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>Observer<span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LiSi</span> <span class="token keyword">implements</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>\n    <span class="token comment">//首先李斯是个观察者，一旦韩非子有活动，他就知道，他就要向老板汇报</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">String</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-------------------&quot;</span><span class="token operator">+</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;-------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;李斯：观察到李斯活动，开始向老板汇报了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reportToQiShiHuang</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;李斯：汇报完毕，秦老板赏给他两个萝卜吃吃...\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//汇报给秦始皇</span>\n    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">reportToQiShiHuang</span><span class="token punctuation">(</span><span class="token class-name">String</span> reportContext<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;李斯：报告，秦老板！韩非子有活动了---&gt;&quot;</span><span class="token operator">+</span>reportContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ol start="2"><li>刘斯</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>观察者<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>Observer<span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 刘斯这个人，是个观察者，只要韩非子一有动静，这边就知道\n * 杜撰的人名\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LiuSi</span> <span class="token keyword">implements</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>\n    <span class="token comment">//刘斯，观察到韩非子活动后，自己也做一定得事情</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-------------------&quot;</span><span class="token operator">+</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;-------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;刘斯：观察到韩非子活动，开始动作了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">happy</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;刘斯：真被乐死了\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//一看韩非子有变化，他就快乐</span>\n    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">happy</span><span class="token punctuation">(</span><span class="token class-name">String</span> context<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;刘斯：因为&quot;</span> <span class="token operator">+</span>context<span class="token operator">+</span><span class="token string">&quot;,——所以我快乐呀！&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ol start="3"><li>王斯</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>观察者<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>Observer<span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 王斯，也是观察者，杜撰的人名\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WangSi</span> <span class="token keyword">implements</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>\n    <span class="token comment">//王斯，看到李斯有活动，自己就受不了</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-------------------&quot;</span><span class="token operator">+</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;-------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;王斯：观察到韩非子活动，自己也开始活动了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cry</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;王斯：真真的哭死了...\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//一看李斯有活动，就哭，痛哭</span>\n    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">cry</span><span class="token punctuation">(</span><span class="token class-name">String</span> context<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;王斯：因为&quot;</span><span class="token operator">+</span>context<span class="token operator">+</span><span class="token string">&quot;，——所以我悲伤呀！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h5 id="测试-5" tabindex="-1"><a class="header-anchor" href="#测试-5" aria-hidden="true">#</a> 测试</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>被观察者对象<span class="token punctuation">.</span>HanFeiZi<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>观察者<span class="token punctuation">.</span>LiSi<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>观察者<span class="token punctuation">.</span>LiuSi<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP1_</span>观察者模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>观察者与被观察者<span class="token punctuation">.</span>引入设计模式<span class="token punctuation">.</span>观察者<span class="token punctuation">.</span>WangSi<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Stream</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 观察者</span>\n        <span class="token class-name">Observer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> observers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>\n                <span class="token keyword">new</span> <span class="token class-name">LiSi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token keyword">new</span> <span class="token class-name">WangSi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token keyword">new</span> <span class="token class-name">LiuSi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 被观察者</span>\n        <span class="token class-name">HanFeiZi</span> hanFeiZi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HanFeiZi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>observers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>hanFeiZi<span class="token operator">::</span><span class="token function">addObserver</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        hanFeiZi<span class="token punctuation">.</span><span class="token function">haveBreakfast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * 韩非子:开始吃饭了...\n * -------------------pool-1-thread-1-------------------------\n * 李斯：观察到李斯活动，开始向老板汇报了...\n * 李斯：报告，秦老板！韩非子有活动了---&gt;韩非子在吃饭\n * 李斯：汇报完毕，秦老板赏给他两个萝卜吃吃...\n *\n * -------------------pool-1-thread-2-------------------------\n * 王斯：观察到韩非子活动，自己也开始活动了...\n * 王斯：因为韩非子在吃饭，——所以我悲伤呀！\n * 王斯：真真的哭死了...\n *\n * -------------------pool-1-thread-3-------------------------\n * 刘斯：观察到韩非子活动，开始动作了...\n * 刘斯：因为韩非子在吃饭,——所以我快乐呀！\n * 刘斯：真被乐死了\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div>',17),y={},g=(0,a(66262).A)(y,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[t,(0,p.Lk)("p",null,[(0,p.Lk)("a",e,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),c,(0,p.Lk)("p",null,[(0,p.Lk)("a",o,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),l,(0,p.Lk)("p",null,[(0,p.Lk)("a",u,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),i,(0,p.Lk)("p",null,[(0,p.Lk)("a",r,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),k,(0,p.Lk)("p",null,[(0,p.Lk)("a",b,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),m,(0,p.Lk)("p",null,[(0,p.Lk)("a",d,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),v],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);