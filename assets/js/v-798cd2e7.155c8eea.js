"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[79825],{95975:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-798cd2e7",path:"/javahelper/03%20Java%20Bean%E6%A0%A1%E9%AA%8C%20JSR%20380.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/javahelper/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"分层验证与JavaBean验证模型",slug:"分层验证与javabean验证模型",children:[{level:3,title:"分层验证模型",slug:"分层验证模型",children:[]},{level:3,title:"Java Bean验证模型",slug:"java-bean验证模型",children:[]}]},{level:2,title:"JSR 380",slug:"jsr-380",children:[]},{level:2,title:"Bean Validation和Hibernate Validator",slug:"bean-validation和hibernate-validator",children:[]},{level:2,title:"Hibernate Validation与Spring Validation",slug:"hibernate-validation与spring-validation",children:[]},{level:2,title:"常用约束注解",slug:"常用约束注解",children:[{level:3,title:"空/非空约束",slug:"空-非空约束",children:[]},{level:3,title:"Boolean值约束",slug:"boolean值约束",children:[]},{level:3,title:"长度约束",slug:"长度约束",children:[]},{level:3,title:"日期约束",slug:"日期约束",children:[]},{level:3,title:"数值约束",slug:"数值约束",children:[]},{level:3,title:"其他",slug:"其他",children:[]}]},{level:2,title:"Java项目使用❤️",slug:"java项目使用❤️",children:[]},{level:2,title:"国际化",slug:"国际化",children:[{level:3,title:"实现自定国际化与hibernate validator兼容👍",slug:"实现自定国际化与hibernate-validator兼容👍",children:[]},{level:3,title:"能够兼容的原理",slug:"能够兼容的原理",children:[]},{level:3,title:"IDEA操作Resouce Bundle",slug:"idea操作resouce-bundle",children:[]},{level:3,title:"中文ISO-8859-1idea显示",slug:"中文iso-8859-1idea显示",children:[]}]},{level:2,title:"值替换研究👍",slug:"值替换研究👍",children:[]},{level:2,title:"级联验证❤️",slug:"级联验证❤️",children:[]},{level:2,title:"分组验证❤️",slug:"分组验证❤️",children:[]},{level:2,title:"组序列❤️",slug:"组序列❤️",children:[]},{level:2,title:"方法参数校验💕",slug:"方法参数校验💕",children:[]},{level:2,title:"构造方法参数校验",slug:"构造方法参数校验",children:[]},{level:2,title:"返回值校验",slug:"返回值校验",children:[]},{level:2,title:"自定义验证😘",slug:"自定义验证😘",children:[]},{level:2,title:"getter起作用",slug:"getter起作用",children:[]},{level:2,title:"SpringBoot集成",slug:"springboot集成",children:[{level:3,title:"测试",slug:"测试",children:[]},{level:3,title:"小结👍",slug:"小结👍",children:[]}]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"javahelper/03 Java Bean校验 JSR 380.md"}},67220:(n,s,a)=>{a.r(s),a.d(s,{default:()=>rn});var p=a(20641);const t=(0,p.Fv)('<h2 id="分层验证与javabean验证模型" tabindex="-1"><a class="header-anchor" href="#分层验证与javabean验证模型" aria-hidden="true">#</a> 分层验证与JavaBean验证模型</h2><p>验证框架主要分为两种，即分层验证与JavaBean验证</p><h3 id="分层验证模型" tabindex="-1"><a class="header-anchor" href="#分层验证模型" aria-hidden="true">#</a> 分层验证模型</h3><p>传统的校验模式，即每一层都添加数据验证。但是其验证逻辑重复性大，会出现冗余代码过多的情况</p><p><img src="/images/java/image-20230514140121762.png" alt="image-20230514140219950"></p><h3 id="java-bean验证模型" tabindex="-1"><a class="header-anchor" href="#java-bean验证模型" aria-hidden="true">#</a> Java Bean验证模型</h3>',6),e={href:"https://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#preface",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Lk)("p",null,"JavaBean验证模式指向接收数据时，将校验逻辑绑定在领域模型中，也就是Java Bean中。将域类与验证代码绑定，验证代码实际上是关于类本身的元数据",-1),l=(0,p.Lk)("blockquote",null,[(0,p.Lk)("p",null,"Bean Validation为Java Bean验证定义了相应的元数据模型和API")],-1),c=(0,p.Lk)("p",null,[(0,p.Lk)("img",{src:"/images/java/application-layers2.png",alt:"application layers2"})],-1),u=(0,p.Lk)("h2",{id:"jsr-380",tabindex:"-1"},[(0,p.Lk)("a",{class:"header-anchor",href:"#jsr-380","aria-hidden":"true"},"#"),(0,p.eW)(" JSR 380")],-1),r={href:"https://jcp.org/en/jsr/detail?id=380",target:"_blank",rel:"noopener noreferrer"},i=(0,p.Fv)('<p>Java EE和Java SE的java bean校验的api规范。</p><blockquote><p>The technical objective of this work is to provide an object level constraint declaration(约束声明) and validation facility（验证工具） for the Java application developer, as well as a constraint metadata repository and query API</p></blockquote><ul><li>JSR303: Bean Validation 1.0</li><li>JSR349: Bean Validation 1.1</li><li>JSR380: Bean Validation 2.0</li></ul><h2 id="bean-validation和hibernate-validator" tabindex="-1"><a class="header-anchor" href="#bean-validation和hibernate-validator" aria-hidden="true">#</a> Bean Validation和Hibernate Validator</h2><ol><li>Bean Validation只是规范</li><li>Hibernate Validator是实现</li></ol><blockquote><p>目前最新Hibernate8.0实现了Bean Validation 3.0</p></blockquote>',6),k={href:"https://www.oracle.com/technetwork/java/javase/downloads/index.html",target:"_blank",rel:"noopener noreferrer"},b=(0,p.Lk)("th",null,"11 or 17",-1),m={href:"https://beanvalidation.org/",target:"_blank",rel:"noopener noreferrer"},d=(0,p.Lk)("td",null,"3.0",-1),g={href:"https://jakarta.ee/",target:"_blank",rel:"noopener noreferrer"},v=(0,p.Lk)("td",null,"10",-1),h={href:"https://hibernate.org/validator/releases/6.2/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://www.oracle.com/technetwork/java/javase/downloads/index.html",target:"_blank",rel:"noopener noreferrer"},y=(0,p.Lk)("th",null,"8, 11 or 17",-1),w={href:"https://beanvalidation.org/",target:"_blank",rel:"noopener noreferrer"},f=(0,p.Lk)("td",null,"2.0",-1),j={href:"https://www.oracle.com/java/technologies/java-ee-glance.html",target:"_blank",rel:"noopener noreferrer"},x=(0,p.Lk)("td",null,"8",-1),V={href:"https://jakarta.ee/",target:"_blank",rel:"noopener noreferrer"},S=(0,p.Lk)("td",null,"8",-1),L=(0,p.Lk)("h2",{id:"hibernate-validation与spring-validation",tabindex:"-1"},[(0,p.Lk)("a",{class:"header-anchor",href:"#hibernate-validation与spring-validation","aria-hidden":"true"},"#"),(0,p.eW)(" Hibernate Validation与Spring Validation")],-1),N=(0,p.Lk)("p",null,"Spring Validation是在Hibernate Validation基础之上的二次封装，以满足Spring环境中更简单，高效的数据验证。",-1),I={href:"https://docs.spring.io/spring-framework/reference/core/validation/beanvalidation.html",target:"_blank",rel:"noopener noreferrer"},U=(0,p.Fv)('<h2 id="常用约束注解" tabindex="-1"><a class="header-anchor" href="#常用约束注解" aria-hidden="true">#</a> 常用约束注解</h2><h3 id="空-非空约束" tabindex="-1"><a class="header-anchor" href="#空-非空约束" aria-hidden="true">#</a> 空/非空约束</h3><table><thead><tr><th>约束</th><th>说明</th></tr></thead><tbody><tr><td>@Null</td><td>限制只能为null</td></tr><tr><td>@NotNull</td><td>限制必须不为NULL</td></tr><tr><td>@NotEmpty</td><td>验证注解的元素值不为Null且不为空（字符串长度不为0，集合大小不为0）</td></tr><tr><td>@NotBlack</td><td>验证注解的元素值不为空（不为Null，去除首位空格后长度为0），不同于@NotEmpty，@NotBlank只应用于字符串且在比较时会去除字符串的空格</td></tr></tbody></table><h3 id="boolean值约束" tabindex="-1"><a class="header-anchor" href="#boolean值约束" aria-hidden="true">#</a> Boolean值约束</h3><table><thead><tr><th>约束</th><th>说明</th></tr></thead><tbody><tr><td>@AssertFalse</td><td>限制必须为False</td></tr><tr><td>@AssertTrue</td><td>限制必须为true</td></tr></tbody></table><h3 id="长度约束" tabindex="-1"><a class="header-anchor" href="#长度约束" aria-hidden="true">#</a> 长度约束</h3><table><thead><tr><th>约束</th><th>说明</th></tr></thead><tbody><tr><td>@Size(max=3,min=0)</td><td>限制字符长度必须在min到max之间，应用在字符串，List集合等中，不能用于Integer</td></tr><tr><td>@Leanth</td><td>限制字符长度必须在min到max之间</td></tr></tbody></table><h3 id="日期约束" tabindex="-1"><a class="header-anchor" href="#日期约束" aria-hidden="true">#</a> 日期约束</h3><table><thead><tr><th>约束</th><th>说明</th></tr></thead><tbody><tr><td>@Future</td><td>限制日期为当前时间之后</td></tr><tr><td>@FutureOrPresent</td><td>限制日期为当前时间或之后</td></tr><tr><td>@Past</td><td>限制日期为当前时间之前</td></tr><tr><td>@PastOrPresent</td><td>限制日期为当前时间或之前</td></tr></tbody></table><h3 id="数值约束" tabindex="-1"><a class="header-anchor" href="#数值约束" aria-hidden="true">#</a> 数值约束</h3><table><thead><tr><th>约束</th><th>说明</th></tr></thead><tbody><tr><td>@Max(Value)</td><td>限制必须为一个不大于指定值的数字</td></tr><tr><td>@Min（Value）</td><td>限制必须为一个不小于指定值的数字</td></tr><tr><td>@DecimalMin(value)</td><td>限制必须为一个不小于指定值的数字</td></tr><tr><td>@DecimalMax(value)</td><td>限制必须为一个不小于指定值的数字</td></tr><tr><td>@Digits(integer,fraction)</td><td>限制必须为小数，且整数部分的位数不能超过Integer，小数部分的位数不能超过fraction</td></tr><tr><td>@Negative</td><td>限制必须为负整数</td></tr><tr><td>@NegativeOrZero(value)</td><td>限制必须为负整数或零</td></tr><tr><td>@Positive(value)</td><td>限制必须为正整数</td></tr><tr><td>@PositiveOrZero(value)</td><td>限制必须为正整数或零</td></tr></tbody></table><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><table><thead><tr><th>约束</th><th>说明</th></tr></thead><tbody><tr><td>@Pattern(Value)</td><td>限制必须符合指定的正则表达式</td></tr><tr><td>@Email</td><td>限制必须为email格式</td></tr><tr><td>@Valid</td><td>级联验证</td></tr></tbody></table><h2 id="java项目使用❤️" tabindex="-1"><a class="header-anchor" href="#java项目使用❤️" aria-hidden="true">#</a> Java项目使用❤️</h2>',14),D={href:"https://docs.jboss.org/hibernate/validator/6.2/reference/en-US/html_single/",target:"_blank",rel:"noopener noreferrer"},B=(0,p.Lk)("p",null,"依赖",-1),M={href:"https://github.com/Q10Viking/learncode/tree/main/validation/hibernate-use/src/main/java/org/hzz/basic",target:"_blank",rel:"noopener noreferrer"},R=(0,p.Fv)('<p>hiberate validator需要<code>jakarta.el</code>依赖是因为，message在定义的时候，可能会使用到表达式，如<code>必须小于${inclusive == true ? &#39;或等于&#39; : &#39;&#39;}{value}</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>\n    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>validator<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>\n    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>hibernate<span class="token operator">-</span>validator<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>\n    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">6.2</span><span class="token number">.5</span><span class="token punctuation">.</span>Final<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>\n    \n<span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>\n    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>glassfish<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>\n    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>jakarta<span class="token punctuation">.</span>el<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>\n    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.0</span><span class="token number">.3</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>定义一个User Java Bean对象</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@NotNull</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;用户ID不能为空&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@NotNull</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>测试</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ValidatorUserDemo</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// 验证器</span>\n    <span class="token keyword">private</span> <span class="token class-name">Validator</span> validator<span class="token punctuation">;</span>\n    <span class="token comment">// 待验证的对象</span>\n    <span class="token keyword">private</span> <span class="token class-name">User</span> user<span class="token punctuation">;</span>\n    <span class="token comment">// 验证结果</span>\n    <span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConstraintViolation</span><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result<span class="token punctuation">;</span>\n\n\n    <span class="token annotation punctuation">@BeforeEach</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;init&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        validator <span class="token operator">=</span> <span class="token class-name">Validation</span><span class="token punctuation">.</span><span class="token function">buildDefaultValidatorFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token comment">// 验证</span>\n       result <span class="token operator">=</span> validator<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@AfterEach</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        result<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        result<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>r<span class="token operator">-&gt;</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * ConstraintViolationImpl<span class="token punctuation">{</span>interpolatedMessage=&#39;用户ID不能为空&#39;, propertyPath=userId, rootBeanClass=class org.hzz.basic.User, messageTemplate=&#39;用户ID不能为空&#39;<span class="token punctuation">}</span>\n * ConstraintViolationImpl<span class="token punctuation">{</span>interpolatedMessage=&#39;不能为null&#39;, propertyPath=userName, rootBeanClass=class org.hzz.basic.User, messageTemplate=&#39;<span class="token punctuation">{</span>javax.validation.constraints.NotNull.message<span class="token punctuation">}</span>&#39;<span class="token punctuation">}</span>\n * -------------------------\n * 用户ID不能为空\n * 不能为null\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h2 id="国际化" tabindex="-1"><a class="header-anchor" href="#国际化" aria-hidden="true">#</a> 国际化</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 这样指定只能是中文</span>\n<span class="token annotation punctuation">@NotNull</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;用户ID不能为空&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>\n<span class="token comment">//-------------------------------------------------------</span>\n<span class="token annotation punctuation">@NotNull</span>  <span class="token comment">// message默认的值是&quot;{javax.validation.constraints.NotNull.message}&quot;</span>\n<span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>上面的代码这样第一个只能写定为中文了，而第二我们不指定，默认会使用<code>{}</code>包裹的hibernate validation提供的国际化.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ValidationMessages.properties\nValidationMessages_ar.properties\nValidationMessages_cs.properties\nValidationMessages_da.properties\nValidationMessages_de.properties\nValidationMessages_en.properties\nValidationMessages_es.properties\nValidationMessages_fa.properties\nValidationMessages_fr.properties\nValidationMessages_hu.properties\nValidationMessages_it.properties\nValidationMessages_ja.properties\nValidationMessages_ko.properties\nValidationMessages_mn_MN.properties\nValidationMessages_nl.properties\nValidationMessages_pl.properties\nValidationMessages_pt_BR.properties\nValidationMessages_ro.properties\nValidationMessages_ru.properties\nValidationMessages_sk.properties\nValidationMessages_tr.properties\nValidationMessages_uk.properties\nValidationMessages_zh.properties\nValidationMessages_zh_CN.properties\nValidationMessages_zh_TW.properties\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><blockquote><p>但是我们要实现我们自定义的国际化内容。</p></blockquote><h3 id="实现自定国际化与hibernate-validator兼容👍" tabindex="-1"><a class="header-anchor" href="#实现自定国际化与hibernate-validator兼容👍" aria-hidden="true">#</a> 实现自定国际化与hibernate validator兼容👍</h3>',12),E={href:"https://github.com/Q10Viking/learncode/tree/main/validation/hibernate-use/src/main/java/org/hzz/i18n",target:"_blank",rel:"noopener noreferrer"},_=(0,p.Fv)('<blockquote><p>创建</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 继承它ResourceBundleMessageInterpolator\n * 是为了使用hirbernate validator提供的默认的国际化,因为他们的文件是ValidationMessages_zh.properties\n * 不像我们自己的文件是user_zh.properties\n * 也就是说我们既能使用我们自己国际化，又能使用hibernate validator提供的默认的国际化\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMessageInterpolator</span> <span class="token keyword">extends</span> <span class="token class-name">ResourceBundleMessageInterpolator</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token string">&quot;i18n/user&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">// hibernate validator的写法</span>\n<span class="token comment">//    private static final String path = &quot;i18n.user&quot;;</span>\n    <span class="token keyword">public</span> <span class="token class-name">MyMessageInterpolator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token comment">// 指定ResourceBundleLocator</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PlatformResourceBundleLocator</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token class-name">String</span> messageTemplate<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span>messageTemplate<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token class-name">String</span> messageTemplate<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Locale</span> locale<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 这个方法没用到</span>\n        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><blockquote><p>User</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@NotNull</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;{user.id.notnull}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@NotNull</span>\n    <span class="token comment">// 未指定,使用hibernate validator提供的默认的国际化</span>\n    <span class="token comment">// &quot;{javax.validation.constraints.NotNull.message}&quot;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>测试</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ValidatorUserDemo</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// 验证器</span>\n    <span class="token keyword">private</span> <span class="token class-name">Validator</span> validator<span class="token punctuation">;</span>\n    <span class="token comment">// 待验证的对象</span>\n    <span class="token keyword">private</span> <span class="token class-name">User</span> user<span class="token punctuation">;</span>\n    <span class="token comment">// 验证结果</span>\n    <span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConstraintViolation</span><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result<span class="token punctuation">;</span>\n\n\n    <span class="token annotation punctuation">@BeforeEach</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token comment">// 设置默认的locale</span>\n        <span class="token comment">// 因为Hibernator的ResourceBundleMessageInterpolator默认使用的是Locale.getDefault()</span>\n<span class="token comment">//        Locale.setDefault(Locale.JAPAN);</span>\n<span class="token comment">//        Locale.setDefault(Locale.ENGLISH);</span>\n        <span class="token class-name">Locale</span><span class="token punctuation">.</span><span class="token function">setDefault</span><span class="token punctuation">(</span><span class="token class-name">Locale</span><span class="token punctuation">.</span><span class="token constant">CHINESE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        validator <span class="token operator">=</span> <span class="token class-name">Validation</span><span class="token punctuation">.</span><span class="token function">byDefaultProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">messageInterpolator</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyMessageInterpolator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">buildValidatorFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">getValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token comment">// 验证</span>\n       result <span class="token operator">=</span> validator<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@AfterEach</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        result<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        result<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>r<span class="token operator">-&gt;</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * ConstraintViolationImpl<span class="token punctuation">{</span>interpolatedMessage=&#39;不得为 null&#39;, propertyPath=userName, rootBeanClass=class org.hzz.i18n.User, messageTemplate=&#39;<span class="token punctuation">{</span>javax.validation.constraints.NotNull.message<span class="token punctuation">}</span>&#39;<span class="token punctuation">}</span>\n * ConstraintViolationImpl<span class="token punctuation">{</span>interpolatedMessage=&#39;userID不能为null&#39;, propertyPath=userId, rootBeanClass=class org.hzz.i18n.User, messageTemplate=&#39;<span class="token punctuation">{</span>user.id.notnull<span class="token punctuation">}</span>&#39;<span class="token punctuation">}</span>\n * -------------------------\n * 不得为 null\n * userID不能为null\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h3 id="能够兼容的原理" tabindex="-1"><a class="header-anchor" href="#能够兼容的原理" aria-hidden="true">#</a> 能够兼容的原理</h3><p>我们的类继承了ResourceBundleMessageInterpolator，在继承类中我们指定了user ResourceBundle的位置。而hibernate validator默认也有个位置，所以就有了两个位置</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>userResourceBundleLocator<span class="token operator">--</span><span class="token operator">-&gt;</span>  i18n<span class="token punctuation">.</span>user\ndefaultResourceBundleLocator<span class="token operator">--</span><span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>validator<span class="token punctuation">.</span></span>ValidationMessages</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>先从用户的指定的ResourceBundle获取，获取不到再从default的获取</p><h3 id="idea操作resouce-bundle" tabindex="-1"><a class="header-anchor" href="#idea操作resouce-bundle" aria-hidden="true">#</a> IDEA操作Resouce Bundle</h3>',11),O={href:"https://www.jetbrains.com/help/idea/resource-bundle.html",target:"_blank",rel:"noopener noreferrer"},T=(0,p.Fv)('<p><img src="/images/java/image-20230514165634260.png" alt="image-20230514165634260"></p><p>效果</p><p><img src="/images/java/image-20230514165702356.png" alt="image-20230514165702356"></p><p>安装一个<code>Resource Bundle Editor</code>，方便我们快速编辑</p><p><img src="/images/java/image-20230514165953524.png" alt="image-20230514165953524"></p><blockquote><p>效果: 没有语言的为默认的</p></blockquote><p><img src="/images/java/image-20230514170103501.png" alt="image-20230514170103501"></p><p><img src="/images/java/image-20230514170615440.png" alt="image-20230514170615440"></p><h3 id="中文iso-8859-1idea显示" tabindex="-1"><a class="header-anchor" href="#中文iso-8859-1idea显示" aria-hidden="true">#</a> 中文ISO-8859-1idea显示</h3>',9),F={href:"https://blog.csdn.net/weixin_41685100/article/details/79292785",target:"_blank",rel:"noopener noreferrer"},C=(0,p.Fv)('<p><img src="/images/java/image-20230514190555571.png" alt="image-20230514190555571"></p><h2 id="值替换研究👍" tabindex="-1"><a class="header-anchor" href="#值替换研究👍" aria-hidden="true">#</a> 值替换研究👍</h2><p>研究参数是如何设置进去的</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>@Size<span class="token punctuation">(</span>min <span class="token operator">=</span> <span class="token number">1</span>, max <span class="token operator">=</span> <span class="token number">5</span>, message <span class="token operator">=</span> <span class="token string">&quot;用户密码长度必须在{min}和{max}之间&quot;</span><span class="token punctuation">)</span>\nprivate String somv <span class="token operator">=</span> <span class="token string">&quot;123456789&quot;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>为什么最终能够输出：<code>用户密码长度必须在1和5之间</code>,为什么能够替换</p><p>底层原理是在解析Size这个注解的时候，会存储一个map,里面的值是<code>&lt;min,1&gt;</code>，<code>&lt;max,5&gt;</code>,在解析message的时候会进行替换。</p><hr><h2 id="级联验证❤️" tabindex="-1"><a class="header-anchor" href="#级联验证❤️" aria-hidden="true">#</a> 级联验证❤️</h2>',8),P={href:"https://github.com/Q10Viking/learncode/tree/main/validation/hibernate-use/src/main/java/org/hzz/cascade",target:"_blank",rel:"noopener noreferrer"},J=(0,p.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@NotNull</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;用户ID不能为空&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>\n   <span class="token comment">// -------------级联验证---------------------------</span>\n<span class="token comment">//    @Valid</span>\n<span class="token comment">//    private Address address;</span>\n\n<span class="token comment">//    @Valid</span>\n<span class="token comment">//    private List&lt;Address&gt; addressList;</span>\n    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token operator">&lt;</span> <span class="token annotation punctuation">@Valid</span> <span class="token class-name">Address</span><span class="token operator">&gt;</span> addressList<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Address</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;省份不能为空&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> province<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;城市不能为空&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> city<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>城市不能为空\n省份不能为空\n用户<span class="token constant">ID</span>不能为空\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="分组验证❤️" tabindex="-1"><a class="header-anchor" href="#分组验证❤️" aria-hidden="true">#</a> 分组验证❤️</h2>',3),A={href:"https://github.com/Q10Viking/learncode/tree/main/validation/hibernate-use/src/main/java/org/hzz/group",target:"_blank",rel:"noopener noreferrer"},z=(0,p.Fv)('<p>比如在User中，</p><ul><li>用户登录的时候是需要userId的，并不需要email.</li><li>用户注册的时候需要email，而并不需要userId</li></ul><p>那么这时候，就使用到了分组验证</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">LoginGroup</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RegisterGroup</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@NotNull</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;用户ID不能为空&quot;</span><span class="token punctuation">,</span> groups <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">LoginGroup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>\n\n    <span class="token comment">// 需要验证</span>\n    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;用户名不能为空&quot;</span><span class="token punctuation">,</span>groups <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">LoginGroup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">RegisterGroup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">// 不能写成 因为如果写成下面这样，属于默认组Default.class</span>\n    <span class="token comment">//@NotBlank(message = &quot;用户名不能为空&quot;) </span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;邮箱不能为空&quot;</span><span class="token punctuation">,</span> groups <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RegisterGroup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><blockquote><p>测试</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**\n         * 邮箱不能为空\n         * 用户名不能为空\n         */</span>\n    <span class="token comment">//result = validator.validate(user, User.RegisterGroup.class);</span>\n\n    <span class="token doc-comment comment">/**\n         * 用户ID不能为空\n         * 用户名不能为空\n         */</span>\n    result <span class="token operator">=</span> validator<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token class-name">User<span class="token punctuation">.</span>LoginGroup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="组序列❤️" tabindex="-1"><a class="header-anchor" href="#组序列❤️" aria-hidden="true">#</a> 组序列❤️</h2>',7),W={href:"https://github.com/Q10Viking/learncode/tree/main/validation/hibernate-use/src/main/java/org/hzz/order",target:"_blank",rel:"noopener noreferrer"},G=(0,p.Fv)('<blockquote><p>有一个默认组Hibernate validation提供的</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">GroupSequence</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">NotBlank</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">NotNull</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>groups<span class="token punctuation">.</span></span><span class="token class-name">Default</span></span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">LoginGroup</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RegisterGroup</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n    <span class="token comment">// 组排序,先验证Default.class,再验证LoginGroup.class,最后验证RegisterGroup.class</span>\n    <span class="token comment">// 如果前面的验证失败,后面的验证不会执行</span>\n    <span class="token annotation punctuation">@GroupSequence</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token class-name">Default</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n            <span class="token class-name">LoginGroup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n            <span class="token class-name">RegisterGroup</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Group</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@NotNull</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;用户ID不能为空&quot;</span><span class="token punctuation">,</span> groups <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">LoginGroup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>\n\n    <span class="token comment">// 需要验证 属于默认组</span>\n    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;用户名不能为空&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;邮箱不能为空&quot;</span><span class="token punctuation">,</span> groups <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RegisterGroup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="方法参数校验💕" tabindex="-1"><a class="header-anchor" href="#方法参数校验💕" aria-hidden="true">#</a> 方法参数校验💕</h2>',3),H={href:"https://github.com/Q10Viking/learncode/tree/main/validation/hibernate-use/src/main/java/org/hzz/complex",target:"_blank",rel:"noopener noreferrer"},Q=(0,p.Fv)('<blockquote><p>在方法参数前面加上@Valid</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IUserService</span> <span class="token punctuation">{</span>\n    <span class="token keyword">void</span> <span class="token function">saveUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token keyword">implements</span> <span class="token class-name">IUserService</span><span class="token punctuation">{</span>\n    <span class="token comment">// 直接在方法里面加@Valid也是可以的，这里主要</span>\n    <span class="token comment">// 这里主要是想试一下如果在接口中加了，还会不会生效</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>测试</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">validateMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Method</span> method <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;saveUser&quot;</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 验证</span>\n    result  <span class="token operator">=</span> validator<span class="token punctuation">.</span><span class="token function">forExecutables</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">validateParameters</span><span class="token punctuation">(</span>userService<span class="token punctuation">,</span> method<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**output\n     * 用户ID不能为空\n     * 用户名不能为空\n     */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="构造方法参数校验" tabindex="-1"><a class="header-anchor" href="#构造方法参数校验" aria-hidden="true">#</a> 构造方法参数校验</h2>',5),Y={href:"https://github.com/Q10Viking/learncode/tree/main/validation/hibernate-use/src/main/java/org/hzz/complex",target:"_blank",rel:"noopener noreferrer"},Z=(0,p.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>测试</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">validateConstructorParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserService</span><span class="token punctuation">&gt;</span></span> method <span class="token operator">=</span> <span class="token class-name">UserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//        User user = new User();</span>\n    <span class="token comment">//        user.setUserId(&quot;001&quot;);</span>\n    <span class="token comment">//        user.setUserName(&quot;hzz&quot;);</span>\n    <span class="token comment">// 验证</span>\n    result  <span class="token operator">=</span> validator<span class="token punctuation">.</span><span class="token function">forExecutables</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">validateConstructorParameters</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**output\n     * 用户ID不能为空\n     * 用户名不能为空\n     */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="返回值校验" tabindex="-1"><a class="header-anchor" href="#返回值校验" aria-hidden="true">#</a> 返回值校验</h2>',4),K={href:"https://github.com/Q10Viking/learncode/tree/main/validation/hibernate-use/src/main/java/org/hzz/complex",target:"_blank",rel:"noopener noreferrer"},X=(0,p.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IUserService</span> <span class="token punctuation">{</span>\n    <span class="token keyword">void</span> <span class="token function">saveUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Valid</span> <span class="token class-name">User</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token keyword">implements</span> <span class="token class-name">IUserService</span><span class="token punctuation">{</span>\n\n    <span class="token comment">// 直接在方法上加@Valid也是可以的，这里主要</span>\n    <span class="token comment">// 这里主要是想试一下如果在接口中加了，还会不会生效</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        user<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token string">&quot;Q10Viking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> user<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><blockquote><p>测试</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">validateMethodReturnValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Method</span> method <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getUser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 验证</span>\n    result  <span class="token operator">=</span> validator<span class="token punctuation">.</span><span class="token function">forExecutables</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">validateReturnValue</span><span class="token punctuation">(</span>userService<span class="token punctuation">,</span> method<span class="token punctuation">,</span> userService<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**output\n     * 用户ID不能为空\n     */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="自定义验证😘" tabindex="-1"><a class="header-anchor" href="#自定义验证😘" aria-hidden="true">#</a> 自定义验证😘</h2>',4),$={href:"https://github.com/Q10Viking/learncode/tree/main/validation/hibernate-use/src/main/java/org/hzz/phone",target:"_blank",rel:"noopener noreferrer"},nn=(0,p.Fv)('<blockquote><p>定义</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token constant">FIELD</span><span class="token punctuation">,</span> <span class="token constant">ANNOTATION_TYPE</span><span class="token punctuation">,</span> <span class="token constant">CONSTRUCTOR</span><span class="token punctuation">,</span> <span class="token constant">PARAMETER</span><span class="token punctuation">,</span> <span class="token constant">TYPE_USE</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Documented</span>\n<span class="token annotation punctuation">@Constraint</span><span class="token punctuation">(</span>validatedBy <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token class-name">PhoneConstraintValidator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">MyPhone</span> <span class="token punctuation">{</span>\n    <span class="token class-name">String</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;手机必须以178开头&quot;</span><span class="token punctuation">;</span>\n\n    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">groups</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Payload</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PhoneConstraintValidator</span> <span class="token keyword">implements</span> <span class="token class-name">ConstraintValidator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyPhone</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token class-name">String</span> value<span class="token punctuation">,</span> <span class="token class-name">ConstraintValidatorContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 空值处理</span>\n        <span class="token class-name">String</span> phoneValue <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;178\\\\d{8}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;phoneValue = &quot;</span> <span class="token operator">+</span> phoneValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>phoneValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><blockquote><p>使用</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@MyPhone</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> phonenumber<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>测试</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ValidatePhone</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 验证器</span>\n    <span class="token keyword">private</span> <span class="token class-name">Validator</span> validator<span class="token punctuation">;</span>\n    <span class="token comment">// 待验证的对象</span>\n    <span class="token keyword">private</span> <span class="token class-name">User</span> user<span class="token punctuation">;</span>\n    <span class="token comment">// 验证结果</span>\n    <span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConstraintViolation</span><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@BeforeEach</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        validator <span class="token operator">=</span> <span class="token class-name">Validation</span><span class="token punctuation">.</span><span class="token function">buildDefaultValidatorFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        user<span class="token punctuation">.</span><span class="token function">setPhonenumber</span><span class="token punctuation">(</span><span class="token string">&quot;13618881234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@AfterEach</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        result<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>r <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        result <span class="token operator">=</span> validator<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * phoneValue = 13618881234\n     * 手机必须以178开头\n     */</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="getter起作用" tabindex="-1"><a class="header-anchor" href="#getter起作用" aria-hidden="true">#</a> getter起作用</h2><blockquote><p>一般我们都会这样定义</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmailQueryDTO</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Email</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;邮箱格式不正确&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmailQueryDTO</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token annotation punctuation">@Email</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;getter邮箱不正确&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> <span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> email<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Email</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;setter邮箱不正确&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> email<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>通过测试，起作用的是getter方法</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;Current Timestamp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-05-24 14:34:47&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;Status&quot;</span><span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;Errors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&quot;email:getter邮箱不正确&quot;</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="springboot集成" tabindex="-1"><a class="header-anchor" href="#springboot集成" aria-hidden="true">#</a> SpringBoot集成</h2>',13),sn={href:"https://github.com/Q10Viking/learncode/tree/main/ddd/multi-layers",target:"_blank",rel:"noopener noreferrer"},an={href:"https://stackoverflow.com/questions/36173332/difference-between-valid-and-validated-in-spring",target:"_blank",rel:"noopener noreferrer"},pn=(0,p.Fv)('<div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-validation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="/images/springboot/image-20230521205346332.png" alt="image-20230521205346332"></p><blockquote><p><code>@Validated</code> annotation is a class-level annotation that we can use to tell <code>Spring</code> to validate parameters that are passed into a method of the annotated class.</p></blockquote><p>and</p><blockquote><p><code>@Valid</code> annotation on method parameters and fields to tell <code>Spring</code> that we want a method parameter or field to be validated.</p></blockquote><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><h4 id="参数直接加-notnull之类" tabindex="-1"><a class="header-anchor" href="#参数直接加-notnull之类" aria-hidden="true">#</a> 参数直接加@NotNull之类</h4><p><img src="/images/springboot/image-20230522185910101.png" alt="image-20230522185910101"></p><blockquote><p>检验生效</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Validated</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;查询用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;根据用户id查询用户信息&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/queryById&quot;</span><span class="token punctuation">)</span>\n    <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token annotation punctuation">@NotNull</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;userid&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>检验生效</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Validated</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;查询用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;根据用户id查询用户信息&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/queryById&quot;</span><span class="token punctuation">)</span>\n    <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;userid&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>检验未生效</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;查询用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;根据用户id查询用户信息&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/queryById&quot;</span><span class="token punctuation">)</span>\n    <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;userid&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>检验未生效</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;查询用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;根据用户id查询用户信息&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/queryById&quot;</span><span class="token punctuation">)</span>\n    <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token annotation punctuation">@NotNull</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;userid&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>检验未生效</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;查询用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;根据用户id查询用户信息&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/queryById&quot;</span><span class="token punctuation">)</span>\n    <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Validated</span> <span class="token annotation punctuation">@NotNull</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;userid&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="参数为pojo" tabindex="-1"><a class="header-anchor" href="#参数为pojo" aria-hidden="true">#</a> 参数为pojo</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token annotation punctuation">@NoArgsConstructor</span>\n<span class="token annotation punctuation">@AllArgsConstructor</span>\n<span class="token annotation punctuation">@Builder</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDTO</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;用户名不能为空&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@NotNull</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;邮箱不能为空&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Date</span> created<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><img src="/images/springboot/image-20230522191525069.png" alt="image-20230522191525069"></p><blockquote><p>检验生效</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Validated</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;保存用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;保存用户信息到数据库&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/save&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span> <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span> <span class="token annotation punctuation">@Valid</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserDTO</span> userDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token string">&quot;接口未实现&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>校验生效</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;保存用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;保存用户信息到数据库&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/save&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span> <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span> <span class="token annotation punctuation">@Valid</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserDTO</span> userDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token string">&quot;接口未实现&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>校验未生效</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Validated</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;保存用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;保存用户信息到数据库&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/save&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span> <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserDTO</span> userDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token string">&quot;接口未实现&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>检验生效</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Validated</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;保存用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;保存用户信息到数据库&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/save&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span> <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Validated</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserDTO</span> userDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token string">&quot;接口未实现&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>检验生效</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;保存用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;保存用户信息到数据库&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/save&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span> <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Validated</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserDTO</span> userDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token string">&quot;接口未实现&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="小结👍" tabindex="-1"><a class="header-anchor" href="#小结👍" aria-hidden="true">#</a> 小结👍</h3><p>@valid有级联效果</p><p>@validated是告诉spring，对@NotNull和@NotBlank等进行校验。</p><blockquote><p>对于Pojo，正常使用检验规则就好</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token annotation punctuation">@NoArgsConstructor</span>\n<span class="token annotation punctuation">@AllArgsConstructor</span>\n<span class="token annotation punctuation">@Builder</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDTO</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;用户名不能为空&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@NotNull</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;邮箱不能为空&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Date</span> created<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>对于Controller,建议在类上加上@Validated，告诉spring要检验方法中的@NotNull等，对于方法统一加上@Valid，来统一方法参数的POJO与当个使用校验规则@NotNull等</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Validated</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">Valid</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">NotNull</span></span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;用户管理&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;用户管理(增删改查)&quot;</span><span class="token punctuation">,</span>\n        externalDocs <span class="token operator">=</span> <span class="token annotation punctuation">@ExternalDocumentation</span><span class="token punctuation">(</span>url <span class="token operator">=</span> <span class="token string">&quot;https://q10viking.github.io&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;我的博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Validated</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;查询用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;根据用户id查询用户信息&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/queryById&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserVO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryById</span><span class="token punctuation">(</span>\n            <span class="token annotation punctuation">@Valid</span> <span class="token annotation punctuation">@NotNull</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;userid&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>\n            <span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token string">&quot;接口未实现&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;保存用户信息&quot;</span><span class="token punctuation">,</span>description <span class="token operator">=</span> <span class="token string">&quot;保存用户信息到数据库&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/save&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span> <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserDTO</span> userDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotImplementedException</span><span class="token punctuation">(</span><span class="token string">&quot;接口未实现&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',39),tn={href:"https://jcp.org/en/jsr/detail?id=380",target:"_blank",rel:"noopener noreferrer"},en={href:"https://www.baeldung.com/javax-validation",target:"_blank",rel:"noopener noreferrer"},on={href:"https://www.baeldung.com/javax-validation-method-constraints",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://developer.aliyun.com/article/972246",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://www.cnblogs.com/yourbatman/p/11285677.html",target:"_blank",rel:"noopener noreferrer"},un={},rn=(0,a(66262).A)(un,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[t,(0,p.Lk)("p",null,[(0,p.Lk)("a",e,[(0,p.eW)("Hibernate Validator 8.0.0.Final - Jakarta Bean Validation Reference Implementation: Reference Guide (jboss.org)"),(0,p.bF)(a)])]),o,l,c,u,(0,p.Lk)("p",null,[(0,p.Lk)("a",r,[(0,p.eW)("The Java Community Process(SM) Program - JSRs: Java Specification Requests - detail JSR# 380 (jcp.org)"),(0,p.bF)(a)])]),i,(0,p.Lk)("table",null,[(0,p.Lk)("thead",null,[(0,p.Lk)("tr",null,[(0,p.Lk)("th",null,[(0,p.Lk)("a",k,[(0,p.eW)("Java"),(0,p.bF)(a)])]),b])]),(0,p.Lk)("tbody",null,[(0,p.Lk)("tr",null,[(0,p.Lk)("td",null,[(0,p.Lk)("a",m,[(0,p.eW)("Jakarta Bean Validation"),(0,p.bF)(a)])]),d]),(0,p.Lk)("tr",null,[(0,p.Lk)("td",null,[(0,p.Lk)("a",g,[(0,p.eW)("Jakarta EE"),(0,p.bF)(a)])]),v])])]),(0,p.Lk)("blockquote",null,[(0,p.Lk)("p",null,[(0,p.eW)("由于我机器上是Java8 ，我们采用Hibernate6.2的版本，进行学习，参考版本："),(0,p.Lk)("a",h,[(0,p.eW)("6.2 series - Hibernate Validator"),(0,p.bF)(a)])])]),(0,p.Lk)("table",null,[(0,p.Lk)("thead",null,[(0,p.Lk)("tr",null,[(0,p.Lk)("th",null,[(0,p.Lk)("a",q,[(0,p.eW)("Java"),(0,p.bF)(a)])]),y])]),(0,p.Lk)("tbody",null,[(0,p.Lk)("tr",null,[(0,p.Lk)("td",null,[(0,p.Lk)("a",w,[(0,p.eW)("Jakarta Bean Validation"),(0,p.bF)(a)])]),f]),(0,p.Lk)("tr",null,[(0,p.Lk)("td",null,[(0,p.Lk)("a",j,[(0,p.eW)("Java EE"),(0,p.bF)(a)])]),x]),(0,p.Lk)("tr",null,[(0,p.Lk)("td",null,[(0,p.Lk)("a",V,[(0,p.eW)("Jakarta EE"),(0,p.bF)(a)])]),S])])]),L,N,(0,p.Lk)("p",null,[(0,p.Lk)("a",I,[(0,p.eW)("Java Bean Validation :: Spring Framework"),(0,p.bF)(a)])]),U,(0,p.Lk)("p",null,[(0,p.Lk)("a",D,[(0,p.eW)("hibernate validator 6.2官网文档"),(0,p.bF)(a)])]),B,(0,p.Lk)("p",null,[(0,p.Lk)("a",M,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),R,(0,p.Lk)("p",null,[(0,p.Lk)("a",E,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),_,(0,p.Lk)("p",null,[(0,p.Lk)("a",O,[(0,p.eW)("Resource bundles | IntelliJ IDEA Documentation (jetbrains.com)"),(0,p.bF)(a)])]),T,(0,p.Lk)("p",null,[(0,p.Lk)("a",F,[(0,p.eW)("IDEA中properties配置文件的创建及中文乱码问题"),(0,p.bF)(a)])]),C,(0,p.Lk)("p",null,[(0,p.Lk)("a",P,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),J,(0,p.Lk)("p",null,[(0,p.Lk)("a",A,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),z,(0,p.Lk)("p",null,[(0,p.Lk)("a",W,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),G,(0,p.Lk)("p",null,[(0,p.Lk)("a",H,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),Q,(0,p.Lk)("p",null,[(0,p.Lk)("a",Y,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),Z,(0,p.Lk)("p",null,[(0,p.Lk)("a",K,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),X,(0,p.Lk)("p",null,[(0,p.Lk)("a",$,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),nn,(0,p.Lk)("p",null,[(0,p.Lk)("a",sn,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",an,[(0,p.eW)("java - Difference between @Valid and @Validated in Spring - Stack Overflow"),(0,p.bF)(a)])]),pn,(0,p.Lk)("p",null,[(0,p.Lk)("a",tn,[(0,p.eW)("The Java Community Process(SM) Program - JSRs: Java Specification Requests - detail JSR# 380 (jcp.org)"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",en,[(0,p.eW)("Java Bean Validation Basics | Baeldung"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",on,[(0,p.eW)("Method Constraints with Bean Validation 2.0 | Baeldung"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",ln,[(0,p.eW)("这可能是你见过hibernate-validator最全国际化方案（下）-阿里云开发者社区 (aliyun.com)"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",cn,[(0,p.eW)("Bean Validation完结篇：你必须关注的边边角角（约束级联、自定义约束、自定义校验器、国际化失败消息...） - YourBatman - 博客园 (cnblogs.com)"),(0,p.bF)(a)])])],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);