"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[84577],{98867:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-7dcdbd36",path:"/java/21%20System-property.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/java/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"临时目录",slug:"临时目录",children:[]},{level:2,title:"其他参数",slug:"其他参数",children:[]},{level:2,title:"Rocket中的环境变量",slug:"rocket中的环境变量",children:[]}],filePathRelative:"java/21 System-property.md"}},24722:(a,n,s)=>{s.r(n),s.d(n,{default:()=>e});const t=(0,s(20641).Fv)('<h2 id="临时目录" tabindex="-1"><a class="header-anchor" href="#临时目录" aria-hidden="true">#</a> 临时目录</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;java.io.tmpdir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// C:\\Users\\11930\\AppData\\Local\\Temp\\</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>springboot在配置日志文件的时候，可以通过el表达式，设置文件的路径</p></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- el表达式，System.getProperty(&quot;java.io.tmpdir&quot;)    --&gt;</span>\n<span class="token comment">&lt;!-- 默认是/tmp --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOG_FILE_PATH<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/logs}<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token comment">&lt;!--应用名称--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>APP_NAME<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mall-order<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token comment">&lt;!--每天记录日志到文件appender--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>${LOG_FILE_PATH}/${APP_NAME}-%d{yyyy-MM-dd}.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxHistory</span><span class="token punctuation">&gt;</span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxHistory</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.encoder.LayoutWrappingEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd HH:mm:ss.SSS} [%tid] [%thread] %-5level %logger{36}: %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pattern</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="其他参数" tabindex="-1"><a class="header-anchor" href="#其他参数" aria-hidden="true">#</a> 其他参数</h2><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>java.version</td><td>Java运行时环境版本</td></tr><tr><td>java.vendor</td><td>Java运行时环境供应商</td></tr><tr><td>java.vendor.url</td><td>Java供应商的 URL</td></tr><tr><td>java.home</td><td>Java安装目录</td></tr><tr><td>java.vm.specification.version</td><td>Java虚拟机规范版本</td></tr><tr><td>java.vm.specification.vendor</td><td>Java虚拟机规范供应商</td></tr><tr><td>java.vm.specification.name</td><td>Java虚拟机规范名称</td></tr><tr><td>java.vm.version</td><td>Java虚拟机实现版本</td></tr><tr><td>java.vm.vendor</td><td>Java虚拟机实现供应商</td></tr><tr><td>java.vm.name</td><td>Java虚拟机实现名称</td></tr><tr><td>java.specification.version</td><td>Java运行时环境规范版本</td></tr><tr><td>java.specification.vendor</td><td>Java运行时环境规范供应商</td></tr><tr><td>java.specification.name</td><td>Java运行时环境规范名称</td></tr><tr><td>java.class.version</td><td>Java类格式版本号</td></tr><tr><td>java.class.path</td><td>Java类路径</td></tr><tr><td>java.library.path</td><td>加载库时搜索的路径列表</td></tr><tr><td>java.io.tmpdir</td><td>默认的临时文件路径</td></tr><tr><td>java.compiler</td><td>要使用的 JIT 编译器的名称</td></tr><tr><td>java.ext.dirs</td><td>一个或多个扩展目录的路径</td></tr><tr><td>os.name</td><td>操作系统的名称</td></tr><tr><td>os.arch</td><td>操作系统的架构</td></tr><tr><td>os.version</td><td>操作系统的版本</td></tr><tr><td>file.separator</td><td>文件分隔符（在 UNIX 系统中是“/”）</td></tr><tr><td>path.separator</td><td>路径分隔符（在 UNIX 系统中是“:”）</td></tr><tr><td>line.separator</td><td>行分隔符（在 UNIX 系统中是“/n”）</td></tr><tr><td>user.name</td><td>用户的账户名称</td></tr><tr><td>user.home</td><td>用户的主目录</td></tr><tr><td>user.dir</td><td>用户的当前工作目录</td></tr></tbody></table><h2 id="rocket中的环境变量" tabindex="-1"><a class="header-anchor" href="#rocket中的环境变量" aria-hidden="true">#</a> Rocket中的环境变量</h2><p>NamesrvConfig这个类在初始化没有获得相应的配置</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// MixAll.ROCKETMQ_HOME_PROPERTY = &quot;rocketmq.home.dir&quot;</span>\n<span class="token comment">// MixAll.ROCKETMQ_HOME_ENV = &quot;ROCKETMQ_HOME&quot;</span>\n<span class="token keyword">private</span> <span class="token class-name">String</span> rocketmqHome <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token class-name">MixAll</span><span class="token punctuation">.</span><span class="token constant">ROCKETMQ_HOME_PROPERTY</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token class-name">MixAll</span><span class="token punctuation">.</span><span class="token constant">ROCKETMQ_HOME_ENV</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>当没有配置该环境时退出程序<code>System.exit(-2)</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> namesrvConfig<span class="token punctuation">.</span><span class="token function">getRocketmqHome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Please set the %s variable in your environment to match the location of the RocketMQ installation%n&quot;</span><span class="token punctuation">,</span> <span class="token class-name">MixAll</span><span class="token punctuation">.</span><span class="token constant">ROCKETMQ_HOME_ENV</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Process finished with exit code -2</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',11),p={},e=(0,s(66262).A)(p,[["render",function(a,n){return t}]])},66262:(a,n)=>{n.A=(a,n)=>{const s=a.__vccOpts||a;for(const[a,t]of n)s[a]=t;return s}}}]);