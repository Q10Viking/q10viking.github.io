"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[90839],{85572:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-58514518",path:"/javascript/04%20%E6%95%B0%E7%BB%84.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/javascript/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"1 数组的特点",slug:"_1-数组的特点",children:[{level:3,title:"1.1 length操作",slug:"_1-1-length操作",children:[]},{level:3,title:"1.2 数组元素可以是任意值",slug:"_1-2-数组元素可以是任意值",children:[]}]},{level:2,title:"2 数组操作",slug:"_2-数组操作",children:[{level:3,title:"2.1 push 添加末尾元素",slug:"_2-1-push-添加末尾元素",children:[]},{level:3,title:"2.2  pop 删除末尾元素",slug:"_2-2-pop-删除末尾元素",children:[]},{level:3,title:"2.4 unshift 添加头部元素",slug:"_2-4-unshift-添加头部元素",children:[]},{level:3,title:"2.5 shift 删除数组第一个元素",slug:"_2-5-shift-删除数组第一个元素",children:[]},{level:3,title:"2.6 splice",slug:"_2-6-splice",children:[]},{level:3,title:"2.7 slice 截取数组",slug:"_2-7-slice-截取数组",children:[]},{level:3,title:"2.8 join 连接成字符串",slug:"_2-8-join-连接成字符串",children:[]},{level:3,title:"2.9 concat 连接数组",slug:"_2-9-concat-连接数组",children:[]},{level:3,title:"2.10 reverse 逆序",slug:"_2-10-reverse-逆序",children:[]},{level:3,title:"2.11 indexOf",slug:"_2-11-indexof",children:[]},{level:3,title:"2.12 fill 填充元素",slug:"_2-12-fill-填充元素",children:[]},{level:3,title:"2.13 sort",slug:"_2-13-sort",children:[]}]},{level:2,title:"3 数组高级操作",slug:"_3-数组高级操作",children:[{level:3,title:"3.1  forEach",slug:"_3-1-foreach",children:[]},{level:3,title:"3.2 filter  过滤出一个新数组",slug:"_3-2-filter-过滤出一个新数组",children:[]},{level:3,title:"3.3 map 映射出一个新数组",slug:"_3-3-map-映射出一个新数组",children:[]},{level:3,title:"3.5 reduce",slug:"_3-5-reduce",children:[]},{level:3,title:"3.6  find",slug:"_3-6-find",children:[]},{level:3,title:"3.7 findIndex",slug:"_3-7-findindex",children:[]},{level:3,title:"3.8  some",slug:"_3-8-some",children:[]},{level:3,title:"3.9 every",slug:"_3-9-every",children:[]}]},{level:2,title:"4 Array提供的方法",slug:"_4-array提供的方法",children:[{level:3,title:"4.1 from 类数组转数组",slug:"_4-1-from-类数组转数组",children:[]},{level:3,title:"4.2 of",slug:"_4-2-of",children:[]},{level:3,title:"4.3 isArray判断是否是数组",slug:"_4-3-isarray判断是否是数组",children:[]}]},{level:2,title:"5 数组遍历",slug:"_5-数组遍历",children:[{level:3,title:"5.1 key in",slug:"_5-1-key-in",children:[]},{level:3,title:"5.2 forEach",slug:"_5-2-foreach",children:[]}]}],filePathRelative:"javascript/04 数组.md"}},73400:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(20641).Fv)('<h2 id="_1-数组的特点" tabindex="-1"><a class="header-anchor" href="#_1-数组的特点" aria-hidden="true">#</a> 1 数组的特点</h2><h3 id="_1-1-length操作" tabindex="-1"><a class="header-anchor" href="#_1-1-length操作" aria-hidden="true">#</a> 1.1 length操作</h3><h4 id="_1-1-1-删除末尾元素" tabindex="-1"><a class="header-anchor" href="#_1-1-1-删除末尾元素" aria-hidden="true">#</a> 1.1.1 删除末尾元素</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\narr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// arr = [2]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_1-1-2-分配空间" tabindex="-1"><a class="header-anchor" href="#_1-1-2-分配空间" aria-hidden="true">#</a> 1.1.2 分配空间</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\narr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// [empty × 3]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-2-数组元素可以是任意值" tabindex="-1"><a class="header-anchor" href="#_1-2-数组元素可以是任意值" aria-hidden="true">#</a> 1.2 数组元素可以是任意值</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_2-数组操作" tabindex="-1"><a class="header-anchor" href="#_2-数组操作" aria-hidden="true">#</a> 2 数组操作</h2><h3 id="_2-1-push-添加末尾元素" tabindex="-1"><a class="header-anchor" href="#_2-1-push-添加末尾元素" aria-hidden="true">#</a> 2.1 push 添加末尾元素</h3><ol><li>添加一个元素</li><li>添加多个元素</li><li>返回数组长度</li></ol><h3 id="_2-2-pop-删除末尾元素" tabindex="-1"><a class="header-anchor" href="#_2-2-pop-删除末尾元素" aria-hidden="true">#</a> 2.2 pop 删除末尾元素</h3><h3 id="_2-4-unshift-添加头部元素" tabindex="-1"><a class="header-anchor" href="#_2-4-unshift-添加头部元素" aria-hidden="true">#</a> 2.4 unshift 添加头部元素</h3><ol><li>添加一个元素</li><li>添加多个元素</li><li>返回数组长度</li></ol><h3 id="_2-5-shift-删除数组第一个元素" tabindex="-1"><a class="header-anchor" href="#_2-5-shift-删除数组第一个元素" aria-hidden="true">#</a> 2.5 shift 删除数组第一个元素</h3><h3 id="_2-6-splice" tabindex="-1"><a class="header-anchor" href="#_2-6-splice" aria-hidden="true">#</a> 2.6 splice</h3><h4 id="_2-6-1-splice-位置-数量-删除元素" tabindex="-1"><a class="header-anchor" href="#_2-6-1-splice-位置-数量-删除元素" aria-hidden="true">#</a> 2.6.1 splice(位置，数量) 删除元素</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 删除位置1的元素一个</span>\narr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token comment">// 删除位置1的元素两个</span>\narr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-6-2-splice-位置-零-元素-插入元素" tabindex="-1"><a class="header-anchor" href="#_2-6-2-splice-位置-零-元素-插入元素" aria-hidden="true">#</a> 2.6.2 splice(位置,零，元素)插入元素</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 在位置1，添加元素2</span>\narr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="_1-删除数组中的某个元素" tabindex="-1"><a class="header-anchor" href="#_1-删除数组中的某个元素" aria-hidden="true">#</a> 1 删除数组中的某个元素</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Remove from LS</span>\n<span class="token keyword">function</span> <span class="token function">removeTaskFromLocalStorage</span><span class="token punctuation">(</span><span class="token parameter">taskItem</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> tasks<span class="token punctuation">;</span>\n  <span class="token keyword">if</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;tasks&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    tasks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    tasks <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;tasks&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">//\t删除某个元素</span>\n  tasks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">task<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>taskItem<span class="token punctuation">.</span>textContent <span class="token operator">===</span> task<span class="token punctuation">)</span><span class="token punctuation">{</span>\n      tasks<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;tasks&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>也可以通过filter函数进行删除</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>tasks <span class="token operator">=</span> tasks<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">task</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> task <span class="token operator">!==</span> taskItem<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_2-6-3-splice-位置-1-元素-替换更新元素" tabindex="-1"><a class="header-anchor" href="#_2-6-3-splice-位置-1-元素-替换更新元素" aria-hidden="true">#</a> 2.6.3 splice(位置,1,元素)替换更新元素</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arrs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;two&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span>\narrs<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;twoNew&quot;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arrs<span class="token punctuation">)</span> <span class="token comment">//  [&quot;one&quot;,&quot;twoNew&quot;,&quot;three&quot;]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_2-7-slice-截取数组" tabindex="-1"><a class="header-anchor" href="#_2-7-slice-截取数组" aria-hidden="true">#</a> 2.7 slice 截取数组</h3><h4 id="_2-7-1-slice-开始位置-结束位置" tabindex="-1"><a class="header-anchor" href="#_2-7-1-slice-开始位置-结束位置" aria-hidden="true">#</a> 2.7.1 slice(开始位置，[结束位置])</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;v&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;t&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// [&#39;t&#39;]</span>\narr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>\n<span class="token comment">// []</span>\narr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_2-8-join-连接成字符串" tabindex="-1"><a class="header-anchor" href="#_2-8-join-连接成字符串" aria-hidden="true">#</a> 2.8 join 连接成字符串</h3><h4 id="_2-8-1-指定分隔符join" tabindex="-1"><a class="header-anchor" href="#_2-8-1-指定分隔符join" aria-hidden="true">#</a> 2.8.1 指定分隔符join(&quot;-&quot;)</h4><h3 id="_2-9-concat-连接数组" tabindex="-1"><a class="header-anchor" href="#_2-9-concat-连接数组" aria-hidden="true">#</a> 2.9 concat 连接数组</h3><ol><li>连接一个数组</li><li>连接多个数组</li><li>返回新数组</li><li><strong>元素数组内容并不发生改变</strong></li></ol><h4 id="_2-9-4-展开运算符替换concat" tabindex="-1"><a class="header-anchor" href="#_2-9-4-展开运算符替换concat" aria-hidden="true">#</a> 2.9.4 展开运算符替换concat</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Q10Viking&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Javascript&quot;</span><span class="token punctuation">]</span>\n<span class="token comment">// [&quot;Q10Viking&quot;, &quot;Javascript&quot;]</span>\n<span class="token keyword">let</span> result <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span>\n\n<span class="token comment">// 展开运算符替换 [&quot;Q10Viking&quot;, &quot;Javascript&quot;]</span>\n<span class="token keyword">let</span> result2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">]</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_2-10-reverse-逆序" tabindex="-1"><a class="header-anchor" href="#_2-10-reverse-逆序" aria-hidden="true">#</a> 2.10 reverse 逆序</h3><ol><li><strong>会改变原来数组内容</strong></li></ol><h3 id="_2-11-indexof" tabindex="-1"><a class="header-anchor" href="#_2-11-indexof" aria-hidden="true">#</a> 2.11 indexOf</h3><h4 id="_2-11-1-判断元素是否存在" tabindex="-1"><a class="header-anchor" href="#_2-11-1-判断元素是否存在" aria-hidden="true">#</a> 2.11.1 判断元素是否存在</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment">// -1 代表不存在</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_2-12-fill-填充元素" tabindex="-1"><a class="header-anchor" href="#_2-12-fill-填充元素" aria-hidden="true">#</a> 2.12 fill 填充元素</h3><h4 id="_2-12-1-array-n-fill-e" tabindex="-1"><a class="header-anchor" href="#_2-12-1-array-n-fill-e" aria-hidden="true">#</a> 2.12.1 Array(n).fill(e)</h4><h4 id="_2-12-2-fill-元素-起始位置-结束位置" tabindex="-1"><a class="header-anchor" href="#_2-12-2-fill-元素-起始位置-结束位置" aria-hidden="true">#</a> 2.12.2 fill(元素，起始位置，结束位置)</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span>  <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>\n<span class="token comment">// [0, 0, 0, 0, 0, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;]</span>\narr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&quot;H&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><hr><h3 id="_2-13-sort" tabindex="-1"><a class="header-anchor" href="#_2-13-sort" aria-hidden="true">#</a> 2.13 sort</h3><h2 id="_3-数组高级操作" tabindex="-1"><a class="header-anchor" href="#_3-数组高级操作" aria-hidden="true">#</a> 3 数组高级操作</h2><h3 id="_3-1-foreach" tabindex="-1"><a class="header-anchor" href="#_3-1-foreach" aria-hidden="true">#</a> 3.1 forEach</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n   <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3-2-filter-过滤出一个新数组" tabindex="-1"><a class="header-anchor" href="#_3-2-filter-过滤出一个新数组" aria-hidden="true">#</a> 3.2 filter 过滤出一个新数组</h3><ol><li>过滤出一个新数组</li><li>不影响原数组</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n   <span class="token comment">// ...</span>\n   <span class="token comment">// return true or false;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="_1-移除购物车中的某件商品" tabindex="-1"><a class="header-anchor" href="#_1-移除购物车中的某件商品" aria-hidden="true">#</a> 1 移除购物车中的某件商品</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>state<span class="token punctuation">,</span>\n    <span class="token literal-property property">cartItems</span><span class="token operator">:</span> state<span class="token punctuation">.</span>cartItems<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>id <span class="token operator">!==</span> action<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>id<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_3-3-map-映射出一个新数组" tabindex="-1"><a class="header-anchor" href="#_3-3-map-映射出一个新数组" aria-hidden="true">#</a> 3.3 map 映射出一个新数组</h3><ol><li>映射出一个新数组</li><li>不影响元素数组</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n   <span class="token comment">// ...</span>\n   <span class="token comment">// return value after map operation</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_3-3-1-减少购物车中商品的数量" tabindex="-1"><a class="header-anchor" href="#_3-3-1-减少购物车中商品的数量" aria-hidden="true">#</a> 3.3.1 减少购物车中商品的数量</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\t1. 减少购物车中商品的数量</span>\n<span class="token comment">//\t2. 如果购物车该商品数量为1，则直接移除</span>\n<span class="token keyword">const</span> <span class="token function-variable function">removeItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cartItems<span class="token punctuation">,</span>cartItemToRemove</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> exsitingItem <span class="token operator">=</span> cartItems<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">cartItem</span> <span class="token operator">=&gt;</span> cartItem<span class="token punctuation">.</span>id <span class="token operator">===</span> cartItemToRemove<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>exsitingItem<span class="token punctuation">.</span>quantity <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> cartItems<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">cartItem</span> <span class="token operator">=&gt;</span> cartItem<span class="token punctuation">.</span>id <span class="token operator">!==</span> cartItemToRemove<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> cartItems<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span> \n            <span class="token parameter">cartItem</span> <span class="token operator">=&gt;</span> \n            cartItem<span class="token punctuation">.</span>id <span class="token operator">===</span> cartItemToRemove<span class="token punctuation">.</span>id <span class="token operator">?</span> <span class="token punctuation">{</span><span class="token operator">...</span>cartItem<span class="token punctuation">,</span><span class="token literal-property property">quantity</span><span class="token operator">:</span> cartItem<span class="token punctuation">.</span>quantity<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span> <span class="token operator">:</span> cartItem\n        <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><hr><h3 id="_3-5-reduce" tabindex="-1"><a class="header-anchor" href="#_3-5-reduce" aria-hidden="true">#</a> 3.5 reduce</h3><h4 id="_3-5-1-不传第二个参数" tabindex="-1"><a class="header-anchor" href="#_3-5-1-不传第二个参数" aria-hidden="true">#</a> 3.5.1 不传第二个参数</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// reduce不传第二个参数pre第一默认为数组第一个元素</span>\narr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span>next<span class="token punctuation">,</span>currentIndex<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token comment">// return value to pre</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_3-5-2-传入第二个参数" tabindex="-1"><a class="header-anchor" href="#_3-5-2-传入第二个参数" aria-hidden="true">#</a> 3.5.2 传入第二个参数</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// reduce传第二个参数pre第一默为该参数</span>\narr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span>next<span class="token punctuation">,</span>currentIndex<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token comment">// return value to pre</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="_1-数组求和" tabindex="-1"><a class="header-anchor" href="#_1-数组求和" aria-hidden="true">#</a> 1 数组求和</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 15</span>\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">accumulator<span class="token punctuation">,</span>currentElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> accumulator<span class="token operator">+</span>currentElement<span class="token punctuation">)</span>\n<span class="token comment">// 25</span>\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">accumulator<span class="token punctuation">,</span>currentElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> accumulator<span class="token operator">+</span>currentElement<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="_2-玩法解析参数" tabindex="-1"><a class="header-anchor" href="#_2-玩法解析参数" aria-hidden="true">#</a> 2 玩法解析参数</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;--port&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;8080&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--help&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;something&quot;</span><span class="token punctuation">]</span>\n\n<span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> current<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;--&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        obj<span class="token punctuation">[</span>current<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// { port: &#39;8080&#39;, help: &#39;something&#39; }</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h5 id="_3-计算购物车中商品数量" tabindex="-1"><a class="header-anchor" href="#_3-计算购物车中商品数量" aria-hidden="true">#</a> 3 计算购物车中商品数量</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// redux</span>\n<span class="token keyword">const</span> <span class="token function-variable function">mapStateToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token literal-property property">cart</span><span class="token operator">:</span> <span class="token punctuation">{</span>cartItems<span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> itemCount <span class="token operator">=</span> cartItems<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">accumulatorQuantity<span class="token punctuation">,</span>currentCartItem</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n        accumulatorQuantity <span class="token operator">+</span> currentCartItem<span class="token punctuation">.</span>quantity\n    <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>itemCount<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="/images/javascript/image-20201210102527169.png" alt=""></p><hr><h3 id="_3-6-find" tabindex="-1"><a class="header-anchor" href="#_3-6-find" aria-hidden="true">#</a> 3.6 find</h3><ol><li>返回满足条件的第一个元素</li><li>不满足条件，则返回<code>undefined</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Q101&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Q102&quot;</span><span class="token punctuation">]</span>\n<span class="token comment">//  &quot;Q101&quot;</span>\n<span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;Q10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3-7-findindex" tabindex="-1"><a class="header-anchor" href="#_3-7-findindex" aria-hidden="true">#</a> 3.7 findIndex</h3><ol><li>返回满足条件的第一个元素的索引</li><li>不满足条件，则返回-1</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Q101&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Q102&quot;</span><span class="token punctuation">]</span>\n<span class="token comment">// 0</span>\n<span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;Q10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3-8-some" tabindex="-1"><a class="header-anchor" href="#_3-8-some" aria-hidden="true">#</a> 3.8 some</h3><ol><li><p>有一个满足则返回true</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">]</span>\n<span class="token comment">//  true</span>\n<span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>短路操作</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 操作完目标对象后，就不再进行循环了</span>\nstudents<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">stu</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n\t<span class="token keyword">if</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>id <span class="token operator">===</span> targetId<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t<span class="token comment">// 业务操作</span>\n\t\tstu<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n\t\tstu<span class="token punctuation">.</span>school <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>school<span class="token punctuation">;</span>\n\t\t<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ol><h3 id="_3-9-every" tabindex="-1"><a class="header-anchor" href="#_3-9-every" aria-hidden="true">#</a> 3.9 every</h3><ol><li>所有都满足条件才返回true</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">]</span>\n<span class="token comment">//  false</span>\n<span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_4-array提供的方法" tabindex="-1"><a class="header-anchor" href="#_4-array提供的方法" aria-hidden="true">#</a> 4 Array提供的方法</h2><h3 id="_4-1-from-类数组转数组" tabindex="-1"><a class="header-anchor" href="#_4-1-from-类数组转数组" aria-hidden="true">#</a> 4.1 from 类数组转数组</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr <span class="token operator">=</span> arguments<span class="token punctuation">;</span>\n    <span class="token comment">// false</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 类数组转化为数组</span>\n    arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// true</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="_4-1-1-生成1-n数组" tabindex="-1"><a class="header-anchor" href="#_4-1-1-生成1-n数组" aria-hidden="true">#</a> 4.1.1 生成1-N数组</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n<span class="token comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span>\n<span class="token punctuation">[</span><span class="token operator">...</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token operator">=&gt;</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token operator">=&gt;</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_4-2-of" tabindex="-1"><a class="header-anchor" href="#_4-2-of" aria-hidden="true">#</a> 4.2 of</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// [empty × 3]  长度为3的空数组</span>\n<span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// [3] 3为元素</span>\n<span class="token keyword">let</span> arr2 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_4-3-isarray判断是否是数组" tabindex="-1"><a class="header-anchor" href="#_4-3-isarray判断是否是数组" aria-hidden="true">#</a> 4.3 isArray判断是否是数组</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_5-数组遍历" tabindex="-1"><a class="header-anchor" href="#_5-数组遍历" aria-hidden="true">#</a> 5 数组遍历</h2><h3 id="_5-1-key-in" tabindex="-1"><a class="header-anchor" href="#_5-1-key-in" aria-hidden="true">#</a> 5.1 key in</h3><h4 id="_5-1-1-在深度拷贝中与对象遍历能够融合" tabindex="-1"><a class="header-anchor" href="#_5-1-1-在深度拷贝中与对象遍历能够融合" aria-hidden="true">#</a> 5.1.1 在深度拷贝中与对象遍历能够融合</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> arr<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_5-2-foreach" tabindex="-1"><a class="header-anchor" href="#_5-2-foreach" aria-hidden="true">#</a> 5.2 forEach</h3>',98),e={},t=(0,a(66262).A)(e,[["render",function(n,s){return p}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);