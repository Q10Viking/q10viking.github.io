"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[56491],{23346:(s,n,e)=>{e.r(n),e.d(n,{data:()=>a});const a={key:"v-407de3b8",path:"/Redis/01%20%E5%AE%89%E8%A3%85Redis.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Redis/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Redis官网下载",slug:"redis官网下载",children:[]},{level:2,title:"GCC环境准备",slug:"gcc环境准备",children:[]},{level:2,title:"Redis安装",slug:"redis安装",children:[]},{level:2,title:"修改配置文件",slug:"修改配置文件",children:[]},{level:2,title:"防火墙设置",slug:"防火墙设置",children:[]},{level:2,title:"启动redis-server⭐",slug:"启动redis-server⭐",children:[]},{level:2,title:"开启redis-cli",slug:"开启redis-cli",children:[]},{level:2,title:"检查Redis是否启动成功",slug:"检查redis是否启动成功",children:[]},{level:2,title:"结束redis-server",slug:"结束redis-server",children:[]}],filePathRelative:"Redis/01 安装Redis.md"}},65856:(s,n,e)=>{e.r(n),e.d(n,{default:()=>o});var a=e(20641);const r=(0,a.Lk)("h2",{id:"redis官网下载",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#redis官网下载","aria-hidden":"true"},"#"),(0,a.eW)(" Redis官网下载")],-1),l=(0,a.Lk)("p",null,"下载：https://redis.io/download",-1),i={href:"https://redis.io/topics/quickstart#installing-redis",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Lk)("h2",{id:"gcc环境准备",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#gcc环境准备","aria-hidden":"true"},"#"),(0,a.eW)(" GCC环境准备")],-1),p={href:"https://redis.io/topics/quickstart#installing-redis",target:"_blank",rel:"noopener noreferrer"},t=(0,a.Fv)('<p>在编译redis5.0.3版本的时候，gcc version 4.8.5就可以了</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 下载gcc 默认下载的是gcc version 4.8.5</span>\nyum <span class="token function">install</span> gcc\ngcc <span class="token parameter variable">-v</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>但是编译Redis6.2.6 需要升级gcc版本</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> centos-release-scl\nyum <span class="token parameter variable">-y</span> <span class="token function">install</span> devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils\nscl <span class="token builtin class-name">enable</span> devtoolset-9 <span class="token function">bash</span>\n\n<span class="token comment"># 查看版本</span>\ngcc <span class="token parameter variable">-v</span>\ngcc version <span class="token number">9.3</span>.1 <span class="token number">20200408</span> <span class="token punctuation">(</span>Red Hat <span class="token number">9.3</span>.1-2<span class="token punctuation">)</span> <span class="token punctuation">(</span>GCC<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>scl 命令启用只是临时的，新开的会话默认还是原 gcc 版本（我们只使用一次来编译Redis,所以使用临时的就好）</strong> 如果要长期使用 gcc 9.1 的话执行下面的命令即可：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>echo -e &quot;\\nsource /opt/rh/devtoolset-9/enable&quot; &gt;&gt;/etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="redis安装" tabindex="-1"><a class="header-anchor" href="#redis安装" aria-hidden="true">#</a> Redis安装</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 设置一个位置</span>\n<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/redis\n<span class="token builtin class-name">cd</span> /usr/redis\n<span class="token comment"># 下载redis</span>\n<span class="token function">wget</span> https://download.redis.io/releases/redis-6.2.6.tar.gz\n<span class="token comment"># 解压</span>\n<span class="token function">tar</span> xvzf redis-6.2.6.tar.gz\n<span class="token comment"># 进入目录并编译</span>\n<span class="token builtin class-name">cd</span> redis-6.2.6\n<span class="token function">make</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="修改配置文件" tabindex="-1"><a class="header-anchor" href="#修改配置文件" aria-hidden="true">#</a> 修改配置文件</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 修改配置</span>\ndaemonize <span class="token function">yes</span>  <span class="token comment">#redis-server后台启动</span>\nprotected-mode no  <span class="token comment">#关闭保护模式，方便其他机器连接;开启的话，只有本机才可以访问redis</span>\n\n<span class="token comment"># 需要注释掉bind  这样就默认允许来自所有机器连接</span>\n<span class="token comment">#bind 127.0.0.1（bind绑定的是自己机器网卡的ip，如果有多块网卡可以配多个ip，代表允许客户端通过机器的哪些网卡ip去访问，内网一般可以不配置bind，注释掉即可）</span>\n\n<span class="token comment">#在关闭保护模式的情况下，如果只允许指定的机器访问该redis,</span>\n<span class="token comment">#如 bind 192.168.1.100 10.0.0.1     # listens on two specific IPv4 addresses</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在关闭了保护保护模式和注释了bind之后，我们就可以在windows上通过客户端工具进行连接了</p><h2 id="防火墙设置" tabindex="-1"><a class="header-anchor" href="#防火墙设置" aria-hidden="true">#</a> 防火墙设置</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 查询端口是否开放</span>\nfirewall-cmd --query-port<span class="token operator">=</span><span class="token number">6379</span>/tcp\n<span class="token comment">#\t开放某个端口（这里开放了3306端口）</span>\nfirewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">6379</span>/tcp <span class="token parameter variable">--permanent</span>\n<span class="token comment"># 重新加载防火墙</span>\nfirewall-cmd <span class="token parameter variable">--reload</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="启动redis-server⭐" tabindex="-1"><a class="header-anchor" href="#启动redis-server⭐" aria-hidden="true">#</a> 启动redis-server⭐</h2><blockquote><p>redis-server 指定不同的配置文件，可以在一台机器上启动多个实例</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/redis/redis-6.2.6\n<span class="token comment"># 启动服务</span>\nsrc/redis-server redis.conf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="开启redis-cli" tabindex="-1"><a class="header-anchor" href="#开启redis-cli" aria-hidden="true">#</a> 开启redis-cli</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>src/redis-cli\nsrc/redis-cli  <span class="token parameter variable">-p</span> <span class="token number">6379</span>  <span class="token comment"># 或者指定端口</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="检查redis是否启动成功" tabindex="-1"><a class="header-anchor" href="#检查redis是否启动成功" aria-hidden="true">#</a> 检查Redis是否启动成功</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost redis-6.2.6<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep redis</span>\nroot       <span class="token number">6984</span>      <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">15</span>:15 ?        00:00:00 src/redis-server *:6379\nroot       <span class="token number">6990</span>   <span class="token number">2124</span>  <span class="token number">0</span> <span class="token number">15</span>:15 pts/0    00:00:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto redis\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="结束redis-server" tabindex="-1"><a class="header-anchor" href="#结束redis-server" aria-hidden="true">#</a> 结束redis-server</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">pkill</span> redis-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',22),d={},o=(0,e(66262).A)(d,[["render",function(s,n){const e=(0,a.g2)("OutboundLink");return(0,a.uX)(),(0,a.CE)(a.FK,null,[r,l,(0,a.Lk)("p",null,[(0,a.eW)("安装介绍："),(0,a.Lk)("a",i,[(0,a.eW)("Redis Quick Start – Redis"),(0,a.bF)(e)])]),c,(0,a.Lk)("blockquote",null,[(0,a.Lk)("p",null,[(0,a.eW)("安装Redis，根据官网"),(0,a.Lk)("a",p,[(0,a.eW)("Redis Quick Start – Redis"),(0,a.bF)(e)]),(0,a.eW)("，建议是从源码编译，因为它不需要而外的依赖，只需要GCC编译器和libc")])]),t],64)}]])},66262:(s,n)=>{n.A=(s,n)=>{const e=s.__vccOpts||s;for(const[s,a]of n)e[s]=a;return e}}}]);