"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[21742],{64965:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-e5c2026c",path:"/typescript/08%20interface.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/typescript/"}},excerpt:"",headers:[{level:2,title:"interface",slug:"interface",children:[]},{level:2,title:"class 实现 interface",slug:"class-实现-interface",children:[]},{level:2,title:"Interface as Function Type⭐",slug:"interface-as-function-type",children:[]},{level:2,title:"optional properties and paramter ⭐",slug:"optional-properties-and-paramter",children:[]}],filePathRelative:"typescript/08 interface.md"}},21799:(n,s,a)=>{a.r(s),a.d(s,{default:()=>m});var e=a(20641);const t=(0,e.Lk)("h2",{id:"interface",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#interface","aria-hidden":"true"},"#"),(0,e.eW)(" interface")],-1),p=(0,e.Lk)("div",{class:"custom-container tip"},[(0,e.Lk)("p",{class:"custom-container-title"},"TIP"),(0,e.Lk)("p",null,"接口定义规范结构")],-1),l=(0,e.Lk)("div",{class:"language-typescript ext-ts line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"interface"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"Person"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n  name"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n  score"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"number"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token function"},"greet"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("phrase"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"void"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br")])],-1),c=(0,e.Lk)("div",{class:"language-typescript ext-ts line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"let"),(0,e.eW)(" user1"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(" Person "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n  name"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"静默"'),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  score"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"100"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token function"},"greet"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("phrase"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token builtin"},"console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"Greet: "'),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"+"),(0,e.eW)(" phrase"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br")])],-1),o=(0,e.Lk)("h2",{id:"class-实现-interface",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#class-实现-interface","aria-hidden":"true"},"#"),(0,e.eW)(" class 实现 interface")],-1),k=(0,e.Lk)("div",{class:"custom-container tip"},[(0,e.Lk)("p",{class:"custom-container-title"},"TIP"),(0,e.Lk)("p",null,"接口中可以使用readonly修饰")],-1),r=(0,e.Lk)("div",{class:"language-typescript ext-ts line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"interface"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"Greetable"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"readonly"),(0,e.eW)(" name"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token function"},"greet"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("phrase"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"void"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"highlight-lines"},[(0,e.Lk)("br"),(0,e.Lk)("div",{class:"highlight-line"}," "),(0,e.Lk)("br"),(0,e.Lk)("br")]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br")])],-1),i=(0,e.Lk)("div",{class:"language-typescript ext-ts line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"class"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"Person"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"implements"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"Greetable"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n  name"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n  score"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"number"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"100"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n  "),(0,e.Lk)("span",{class:"token function"},"constructor"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("n"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("name "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" n"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n\n  "),(0,e.Lk)("span",{class:"token function"},"greet"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("phrase"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n      "),(0,e.Lk)("span",{class:"token builtin"},"console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("phrase"),(0,e.Lk)("span",{class:"token operator"},"+"),(0,e.Lk)("span",{class:"token keyword"},"this"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("name"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n      \n  "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br")])],-1),u=(0,e.Lk)("div",{class:"language-typescript ext-ts line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-typescript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"let"),(0,e.eW)(" user1"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(" Greetable "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"new"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"Person"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"静默"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\nuser1"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"greet"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},"'Hi there,I\\'m '"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"highlight-lines"},[(0,e.Lk)("div",{class:"highlight-line"}," "),(0,e.Lk)("br")]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br")])],-1),b=(0,e.Fv)('<hr><h2 id="interface-as-function-type" tabindex="-1"><a class="header-anchor" href="#interface-as-function-type" aria-hidden="true">#</a> Interface as Function Type⭐</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// type AddFn = (number1:number,number2:number)=&gt;number;</span>\n<span class="token keyword">interface</span> <span class="token class-name">AddFn</span><span class="token punctuation">{</span>\n    <span class="token punctuation">(</span>number1<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span>number2<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> add<span class="token operator">:</span>AddFn<span class="token punctuation">;</span>\n<span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span>number1<span class="token punctuation">,</span>number2<span class="token punctuation">)</span><span class="token operator">=&gt;</span>number1<span class="token operator">+</span>number2<span class="token punctuation">;</span>\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="optional-properties-and-paramter" tabindex="-1"><a class="header-anchor" href="#optional-properties-and-paramter" aria-hidden="true">#</a> optional properties and paramter ⭐</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Greetable</span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  <span class="token function">greet</span><span class="token punctuation">(</span>phrase<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name">Greetable</span> <span class="token punctuation">{</span>\n  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>n<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> n<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">greet</span><span class="token punctuation">(</span>phrase<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>phrase<span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hi!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> user1<span class="token operator">:</span> Greetable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nuser1<span class="token punctuation">.</span><span class="token function">greet</span><span class="token punctuation">(</span><span class="token string">&#39;Hi there,I\\&#39;m &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出： Hi!</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>',5),L={},m=(0,a(66262).A)(L,[["render",function(n,s){const a=(0,e.g2)("CodeGroupItem"),L=(0,e.g2)("CodeGroup");return(0,e.uX)(),(0,e.CE)(e.FK,null,[t,p,(0,e.bF)(L,null,{default:(0,e.k6)((()=>[(0,e.bF)(a,{title:"接口规范"},{default:(0,e.k6)((()=>[l])),_:1}),(0,e.bF)(a,{title:"实现"},{default:(0,e.k6)((()=>[c])),_:1})])),_:1}),o,k,(0,e.bF)(L,null,{default:(0,e.k6)((()=>[(0,e.bF)(a,{title:"接口规范"},{default:(0,e.k6)((()=>[r])),_:1}),(0,e.bF)(a,{title:"实现"},{default:(0,e.k6)((()=>[i])),_:1}),(0,e.bF)(a,{title:"使用"},{default:(0,e.k6)((()=>[u])),_:1})])),_:1}),b],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);