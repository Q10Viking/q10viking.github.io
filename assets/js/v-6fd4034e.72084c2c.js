"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[78546],{57039:(e,t,i)=>{i.r(t),i.d(t,{data:()=>l});const l={key:"v-6fd4034e",path:"/JVM/17%20%E9%80%89%E6%8B%A9%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/JVM/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"如何选择垃圾收集器",slug:"如何选择垃圾收集器",children:[]},{level:2,title:"安全点与安全区域",slug:"安全点与安全区域",children:[{level:3,title:"安全区域又是什么？",slug:"安全区域又是什么",children:[]}]}],filePathRelative:"JVM/17 选择垃圾收集器.md"}},99648:(e,t,i)=>{i.r(t),i.d(t,{default:()=>a});const l=(0,i(20641).Fv)('<h2 id="如何选择垃圾收集器" tabindex="-1"><a class="header-anchor" href="#如何选择垃圾收集器" aria-hidden="true">#</a> <strong>如何选择垃圾收集器</strong></h2><ol><li>优先调整堆的大小让服务器自己来选择</li><li>如果内存小于100M，使用串行收集器</li><li>如果是单核，并且没有停顿时间的要求，串行或JVM自己选择</li><li>如果允许停顿时间超过1秒，选择并行或者JVM自己选</li><li>如果响应时间最重要，并且不能超过1秒，使用并发收集器</li><li><strong>4G以下可以用parallel，4-8G可以用ParNew+CMS，8G以上可以用G1，几百G以上用ZGC</strong></li></ol><p><img src="/images/jvm/95765.png" alt="img"></p><p><strong>JDK 1.8默认使用 Parallel(年轻代和老年代都是)</strong></p><p><strong>JDK 1.9默认使用 G1</strong></p><h2 id="安全点与安全区域" tabindex="-1"><a class="header-anchor" href="#安全点与安全区域" aria-hidden="true">#</a> <strong>安全点与安全区域</strong></h2><p><strong>安全点</strong>就是指代码中一些特定的位置,当线程运行到这些位置时它的状态是确定的,这样JVM就可以安全的进行一些操作,比如GC等，所以GC不是想什么时候做就立即触发的，是需要等待所有线程运行到安全点后才能触发。</p><p>这些特定的安全点位置主要有以下几种:</p><ol><li>方法返回之前</li><li>调用某个方法之后</li><li>抛出异常的位置</li><li>循环的末尾</li></ol><p>大体实现思想是<strong>当垃圾收集需要中断线程的时候， 不直接对线程操作， 仅仅简单地设置一个标志位， 各个线程执行过程时会不停地主动去轮询这个标志</strong>， 一旦发现中断标志为真时就自己在最近的安全点上主动中断挂起。 轮询标志的地方和安全点是重合的。</p><h3 id="安全区域又是什么" tabindex="-1"><a class="header-anchor" href="#安全区域又是什么" aria-hidden="true">#</a> <strong>安全区域又是什么？</strong></h3><p>Safe Point 是对正在执行的线程设定的。</p><p>如果一个线程处于 Sleep 或中断状态，它就不能响应 JVM 的中断请求，再运行到 Safe Point 上。</p><p>因此 JVM 引入了 Safe Region。</p><p>Safe Region 是指在一段代码片段中，<strong>引用关系不会发生变化</strong>。在这个区域内的任意地方开始 GC 都是安全的。</p>',15),r={},a=(0,i(66262).A)(r,[["render",function(e,t){return l}]])},66262:(e,t)=>{t.A=(e,t)=>{const i=e.__vccOpts||e;for(const[e,l]of t)i[e]=l;return i}}}]);