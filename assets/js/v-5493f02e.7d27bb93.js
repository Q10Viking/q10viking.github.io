"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[9942],{98101:(i,e,t)=>{t.r(e),t.d(e,{data:()=>n});const n={key:"v-5493f02e",path:"/Nginx/",title:"",lang:"zh-CN",frontmatter:{prev:{text:"Back To 目录",link:"/topicNav/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Nginx",slug:"nginx",children:[]},{level:2,title:"正向代理",slug:"正向代理",children:[]},{level:2,title:"反向代理",slug:"反向代理",children:[]}],filePathRelative:"Nginx/README.md"}},92100:(i,e,t)=>{t.r(e),t.d(e,{default:()=>c});var n=t(20641);const a={class:"custom-container tip"},l=(0,n.Lk)("p",{class:"custom-container-title"},"TIP",-1),r={href:"https://gitee.com/q10viking/Books/blob/master/NGINX_Cookbook-final_CN.pdf",target:"_blank",rel:"noopener noreferrer"},o=(0,n.Fv)('<h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h2><ol><li>主要功能反向代理</li><li>通过配置文件可以实现集群和负载均衡</li><li>静态资源虚拟化</li></ol><h2 id="正向代理" tabindex="-1"><a class="header-anchor" href="#正向代理" aria-hidden="true">#</a> 正向代理</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>客户端请求目标服务器之间的一个代理服务器</li><li>请求会先经过代理服务器，然后再转发请求到目标服务器，获得内容后最后响应给客户端</li></ul></div><p><img src="/images/nginx/image-20210313111057159.png" alt=""></p><h2 id="反向代理" tabindex="-1"><a class="header-anchor" href="#反向代理" aria-hidden="true">#</a> 反向代理</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>用户请求目标服务器，由代理服务器决定访问哪个IP</p></div><p><img src="/images/nginx/image-20210313113900253.png" alt=""></p>',8),s={},c=(0,t(66262).A)(s,[["render",function(i,e){const t=(0,n.g2)("OutboundLink");return(0,n.uX)(),(0,n.CE)(n.FK,null,[(0,n.Lk)("div",a,[l,(0,n.Lk)("p",null,[(0,n.Lk)("a",r,[(0,n.eW)("Nginx Cookbook.pdf"),(0,n.bF)(t)])])]),o],64)}]])},66262:(i,e)=>{e.A=(i,e)=>{const t=i.__vccOpts||i;for(const[i,n]of e)t[i]=n;return t}}}]);