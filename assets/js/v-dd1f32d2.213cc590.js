"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[16204],{35073:(a,s,e)=>{e.r(s),e.d(s,{data:()=>n});const n={key:"v-dd1f32d2",path:"/kafka/03%20%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/kafka/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"创建主题",slug:"创建主题",children:[{level:3,title:"命令行查看主题",slug:"命令行查看主题",children:[]}]},{level:2,title:"发送消息",slug:"发送消息",children:[]},{level:2,title:"消费消息",slug:"消费消息",children:[{level:3,title:"查看消费组",slug:"查看消费组",children:[]},{level:3,title:"查看消费组详情",slug:"查看消费组详情",children:[]}]},{level:2,title:"删除主题",slug:"删除主题",children:[]}],filePathRelative:"kafka/03 基本使用.md"}},53263:(a,s,e)=>{e.r(s),e.d(s,{default:()=>l});const n=(0,e(20641).Fv)('<h2 id="创建主题" tabindex="-1"><a class="header-anchor" href="#创建主题" aria-hidden="true">#</a> 创建主题</h2><blockquote><p>创建一个名字为“test”的Topic，这个topic只有一个partition，并且备份因子也设置为1：</p><p>居然是向zk发送的</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code> bin/kafka-topics.sh <span class="token parameter variable">--create</span> <span class="token parameter variable">--zookeeper</span> <span class="token number">172.29</span>.96.105:2181 --replication-factor <span class="token number">1</span> <span class="token parameter variable">--partitions</span> <span class="token number">1</span> <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="/images/kafka/image-20230422130723654.png" alt="image-20230422130723654"></p><h3 id="命令行查看主题" tabindex="-1"><a class="header-anchor" href="#命令行查看主题" aria-hidden="true">#</a> 命令行查看主题</h3><blockquote><p>命令行查看主题</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>bin/kafka-topics.sh --list --zookeeper 172.29.96.105:2181\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>q10viking@LAPTOP-PJLAUUSP:~/software/kafka_2.12-2.5.0$ bin/kafka-topics.sh <span class="token parameter variable">--list</span> <span class="token parameter variable">--zookeeper</span> <span class="token number">172.29</span>.96.105:2181\n__consumer_offsets\n<span class="token builtin class-name">test</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>除了我们通过手工的方式创建Topic，当producer发布一个消息到某个指定的Topic，这个Topic如果不存在，就自动创建。</p></blockquote><h2 id="发送消息" tabindex="-1"><a class="header-anchor" href="#发送消息" aria-hidden="true">#</a> <strong>发送消息</strong></h2><p>kafka自带了一个producer命令客户端，可以从本地文件中读取内容，或者我们也可以以命令行中直接输入内容，并将这些内容以消息的形式发送到kafka集群中。在默认情况下，每一个行会被当做成一个独立的消息。</p><p>首先我们要运行发布消息的脚本，然后在命令中输入要发送的消息的内容：</p><blockquote><p>和创建主题不同，是向broker直接发送</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>   bin/kafka-console-producer.sh --broker-list <span class="token number">172.29</span>.96.105:9092 <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span>  \n   <span class="token operator">&gt;</span>this is a msg \n   <span class="token operator">&gt;</span>this is a another msg       \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>​</p><h2 id="消费消息" tabindex="-1"><a class="header-anchor" href="#消费消息" aria-hidden="true">#</a> <strong>消费消息</strong></h2><blockquote><p>命令行工具，它会随机创建一个消费组，然后进行消费</p></blockquote><p>对于consumer，kafka同样也携带了一个命令行客户端，会将获取到内容在命令中进行输出，<strong>默认是消费最新的消息</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>  bin/kafka-console-consumer.sh --bootstrap-server <span class="token number">172.29</span>.96.105:9092 <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>​</p><p>如果想要消费之前的消息可以通过--from-beginning参数指定，如下命令：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code> bin/kafka-console-consumer.sh --bootstrap-server <span class="token number">172.29</span>.96.105:9092 --from-beginning <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span>        \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>如果你是通过不同的终端窗口来运行以上的命令，你将会看到在producer终端输入的内容，很快就会在consumer的终端窗口上显示出来。</p><blockquote><p>运行上面两条命令：第一个会接收该消费者启动之后发送到kafka的消息，第二个会接收到之前发送的消息。然后都阻塞等待新消息</p><p>停止，重新执行第二条命令，它又会重新消费所有发送到kafka的消息</p></blockquote><h3 id="查看消费组" tabindex="-1"><a class="header-anchor" href="#查看消费组" aria-hidden="true">#</a> 查看消费组</h3><blockquote><p>查看消费者组</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/kafka-consumer-groups.sh --bootstrap-server <span class="token number">172.29</span>.96.105:9092 <span class="token parameter variable">--list</span>\nconsole-consumer-62409\nconsole-consumer-30157\nconsole-consumer-39742\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="查看消费组详情" tabindex="-1"><a class="header-anchor" href="#查看消费组详情" aria-hidden="true">#</a> 查看消费组详情</h3><blockquote><p>查看消费情况,用<code>describe参数+ 指定消费者组</code>,消费者组可以用上面的方法查</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/kafka-consumer-groups.sh --bootstrap-server <span class="token number">172.29</span>.96.105:9092 <span class="token parameter variable">--describe</span> <span class="token parameter variable">--group</span> console-consumer-39742\n\nGROUP                 TOPIC           PARTITION  CURRENT-OFFSET  LOG-END-OFFSET  LAG             CONSUMER-ID                                                           HOST            CLIENT-ID\nconsole-consumer-7833 <span class="token builtin class-name">test</span>            <span class="token number">0</span>          -               <span class="token number">8</span>               -               consumer-console-consumer-7833-1-af2bb035-e273-43a3-999a-65c7e63b3dc1 /172.29.96.105  consumer-console-consumer-7833-1\nq10viking@LAPTOP-PJLAUUSP:~/software/kafka_2.12-2.5.0$\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>在命令行中看到消费者停止，过段时间，消费者组也被删除了</p><h2 id="删除主题" tabindex="-1"><a class="header-anchor" href="#删除主题" aria-hidden="true">#</a> <strong>删除主题</strong></h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/kafka-topics.sh <span class="token parameter variable">--delete</span> <span class="token parameter variable">--topic</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">--zookeeper</span> <span class="token number">172.29</span>.96.105:2181\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/kafka-consumer-groups.sh --bootstrap-server <span class="token number">172.29</span>.96.105:9092 <span class="token parameter variable">--delete</span> <span class="token parameter variable">--group</span> hzz-group\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',34),r={},l=(0,e(66262).A)(r,[["render",function(a,s){return n}]])},66262:(a,s)=>{s.A=(a,s)=>{const e=a.__vccOpts||a;for(const[a,n]of s)e[a]=n;return e}}}]);