"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[46109],{41740:(s,a,n)=>{n.r(a),n.d(a,{data:()=>e});const e={key:"v-52e6fab0",path:"/vuepress/17%20vuepress%E5%9B%BE%E7%89%87%E8%AE%BE%E7%BD%AE.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/vuepress/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"在专题文件夹下存放图片",slug:"在专题文件夹下存放图片",children:[]},{level:2,title:"在vuepress的图片目录下创建图片文件夹",slug:"在vuepress的图片目录下创建图片文件夹",children:[{level:3,title:"重新设定typora路径目录⭐⭐",slug:"重新设定typora路径目录⭐⭐",children:[]}]},{level:2,title:"CDN加速",slug:"cdn加速",children:[{level:3,title:"github存放cdn加速的图片仓库",slug:"github存放cdn加速的图片仓库",children:[]}]},{level:2,title:"最终方案⭐⭐",slug:"最终方案⭐⭐",children:[]}],filePathRelative:"vuepress/17 vuepress图片设置.md"}},46721:(s,a,n)=>{n.r(a),n.d(a,{default:()=>p});const e=(0,n(20641).Fv)('<h2 id="在专题文件夹下存放图片" tabindex="-1"><a class="header-anchor" href="#在专题文件夹下存放图片" aria-hidden="true">#</a> 在专题文件夹下存放图片</h2><p><img src="/images/vuepress/image-20220606163112059.png" alt="image-20220606163112059"></p><p>最终生成的图片路径会成为这样。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/image-20220606163112059.png<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-20220606163112059<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>medium-zoom-image<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>而vuepress部署上线正确访问的图片路径是</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>http://localhost:8080/images/vuepress/image-20211126054031455.png\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>所以这种方案不可取</strong></p><h2 id="在vuepress的图片目录下创建图片文件夹" tabindex="-1"><a class="header-anchor" href="#在vuepress的图片目录下创建图片文件夹" aria-hidden="true">#</a> 在vuepress的图片目录下创建图片文件夹</h2><blockquote><p>根据vuepress访问图片目录的规定，必须在docs.vuepress\\public目录下。但是为了兼容typora，需要重新设定路径。</p></blockquote><p><img src="/images/vuepress/image-20220606164204901.png" alt="image-20220606164204901"></p><p>但是如果这样设置的话，也还是不行</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>typora-root-url: ..\\.vuepress\\public\\images\\vuepress\n<span class="token url"><span class="token operator">!</span>[<span class="token content">image-20220606164204901</span>](<span class="token url">/image-20220606164204901.png</span>)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>因为vuepress生成页面之后，链接成如下模式</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/image-20220606163112059.png<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-20220606163112059<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>medium-zoom-image<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>而我们的图片并不在public根目录下，访问不到。而是在public/images/vuepress目录下。</p><h3 id="重新设定typora路径目录⭐⭐" tabindex="-1"><a class="header-anchor" href="#重新设定typora路径目录⭐⭐" aria-hidden="true">#</a> 重新设定typora路径目录⭐⭐</h3><p><img src="/images/vuepress/image-20220606165233814.png" alt="image-20220606165233814"></p><p>而此时markdown复制图片的指定到我们分好类的文件夹中，typora会自动生成路径，成如下模式。</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">image-20220606165233814</span>](<span class="token url">/images/vuepress/image-20220606165233814.png</span>)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>这样就解决了typora和vuepress访问路径的问题</strong></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/images/vuepress/image-20220606165233814.png<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-20220606165233814<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>medium-zoom-image<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="cdn加速" tabindex="-1"><a class="header-anchor" href="#cdn加速" aria-hidden="true">#</a> CDN加速</h2><p>由于图片是放在github上的（因为我们的博客是放在github上的），图片的访问速度可能会有些慢。可以考虑一下CDN加速。</p><blockquote><p>以下图片都使用了jsdelivr进行，加速。如果能看到图片，说明jsdelivr正常访问。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Q10Viking/jsDelivrImagesTests/202206061642731.png" alt="image-20220606164204901"></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>https://cdn.jsdelivr.net/gh/Q10Viking/jsDelivrImagesTests/202206061642731.png\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://cdn.jsdelivr.net/gh/Q10Viking/jsDelivrImagesTests/202206061702744.png" alt="image-20220606165917227"></p><h3 id="github存放cdn加速的图片仓库" tabindex="-1"><a class="header-anchor" href="#github存放cdn加速的图片仓库" aria-hidden="true">#</a> github存放cdn加速的图片仓库</h3><p>我在github上又开辟了一个仓库专门用来CDN加速的。当在typora编辑文档的时候，可以考虑使用PicGo上传图片到这个仓库。然后再typora中就会生成图片CDN的链接。</p><h2 id="最终方案⭐⭐" tabindex="-1"><a class="header-anchor" href="#最终方案⭐⭐" aria-hidden="true">#</a> 最终方案⭐⭐</h2><ol><li>（必须）在docs/public存放图片。为了区分专题图片，在docs/public/images目录下分别建立专题的文件夹</li><li>（必须）在typora中编辑文档的时候，设置图片路径为.vuepress\\public,当拷问图片到文档后，就拷贝图片到指定的专题文件夹下。markdown图片路径在typora中会自动生成。</li><li>（可选）图片加速方案 <ol><li>在复制到文档中，先使用Squoosh工具将图片进行压缩</li><li>CDN jsdelivr加速。为了防止jsdelivr访问失效。需要做好备份。先将图片复制vuepress指定的专题文件夹下。再通过PicGo上传到github仓库jsDelivrImagesTests中。这样如果以后jsdelivr不能访问，可以及时再typora文档中修改路径为docs/public专题目录下的路径。因为原始文件一直在这个目录中。只不过是修改了一下文件路径而已。</li></ol></li></ol>',31),t={},p=(0,n(66262).A)(t,[["render",function(s,a){return e}]])},66262:(s,a)=>{a.A=(s,a)=>{const n=s.__vccOpts||s;for(const[s,e]of a)n[s]=e;return n}}}]);