"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[14624],{90160:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-ad5c01aa",path:"/springboot/22%20springboot-Jms.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/springboot/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"JMS",slug:"jms",children:[]},{level:2,title:"SpringBoot内嵌activemq",slug:"springboot内嵌activemq",children:[]},{level:2,title:"依赖",slug:"依赖",children:[{level:3,title:"配置JMS",slug:"配置jms",children:[]},{level:3,title:"收消息配置",slug:"收消息配置",children:[]},{level:3,title:"测试",slug:"测试",children:[]}]},{level:2,title:"JmsTemplate",slug:"jmstemplate",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"springboot/22 springboot-Jms.md"}},31532:(n,s,a)=>{a.r(s),a.d(s,{default:()=>j});var p=a(20641);const t=(0,p.Lk)("h2",{id:"jms",tabindex:"-1"},[(0,p.Lk)("a",{class:"header-anchor",href:"#jms","aria-hidden":"true"},"#"),(0,p.eW)(" JMS")],-1),e=(0,p.Lk)("p",null,"JMS(Java Message Service）是一套规范",-1),o=(0,p.Lk)("p",null,"ActiveMQ实现了JMS 1.1 with full client implementation including JNDI",-1),c={href:"https://www.openlogic.com/blog/what-apache-activemq#difference",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Lk)("h2",{id:"springboot内嵌activemq",tabindex:"-1"},[(0,p.Lk)("a",{class:"header-anchor",href:"#springboot内嵌activemq","aria-hidden":"true"},"#"),(0,p.eW)(" SpringBoot内嵌activemq")],-1),i={href:"https://activemq.apache.org/spring-support",target:"_blank",rel:"noopener noreferrer"},u={href:"https://activemq.apache.org/components/classic/",target:"_blank",rel:"noopener noreferrer"},r={href:"https://docs.spring.io/spring-boot/docs/2.7.12/reference/html/messaging.html#messaging.jms.activemq",target:"_blank",rel:"noopener noreferrer"},k={href:"https://activemq.apache.org/",target:"_blank",rel:"noopener noreferrer"},m=(0,p.Lk)("code",null,"ConnectionFactory",-1),b=(0,p.Lk)("p",null,[(0,p.eW)("If you use "),(0,p.Lk)("code",null,"spring-boot-starter-activemq"),(0,p.eW)(", the necessary dependencies to connect or embed an ActiveMQ instance are provided, as is the Spring infrastructure to integrate with JMS.")],-1),g=(0,p.Fv)('<p><img src="/images/springboot/image-20230605125318039.png" alt="image-20230605125318039"></p><p>如以下情况会禁止内嵌的activemq的创建</p><ol><li><p>直接禁止</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">activemq</span><span class="token punctuation">:</span>\n    <span class="token key atrule">in-memory</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="/images/springboot/image-20230605125551139.png" alt="image-20230605125551139"></p></li><li><p>提供了额外的url</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">activemq</span><span class="token punctuation">:</span>\n    <span class="token key atrule">broker-url</span><span class="token punctuation">:</span> <span class="token string">&quot;tcp://192.168.1.210:9876&quot;</span>\n    <span class="token key atrule">user</span><span class="token punctuation">:</span> <span class="token string">&quot;admin&quot;</span>\n    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">&quot;secret&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ol><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>本项目主要是体验jms,所以不打算而外安装ActiveMQ，所以采用内嵌的方式演示.</p><p>内嵌的方式它默认使用url是：<code>vm://localhost</code></p></div><h2 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖" aria-hidden="true">#</a> 依赖</h2>',5),d={href:"https://github.com/Q10Viking/learncode/tree/main/springboot/springboot-jms-activemq",target:"_blank",rel:"noopener noreferrer"},v=(0,p.Fv)('<div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-activemq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="配置jms" tabindex="-1"><a class="header-anchor" href="#配置jms" aria-hidden="true">#</a> 配置JMS</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">EnableJms</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>support<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span><span class="token class-name">MappingJackson2MessageConverter</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>support<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span><span class="token class-name">MessageConverter</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>support<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span><span class="token class-name">MessageType</span></span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@EnableJms</span> <span class="token comment">// 启动JMS listener</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JmsConfig</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// 用于发送java对象</span>\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">MessageConverter</span> <span class="token function">jacksonJmsMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MappingJackson2MessageConverter</span> converter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MappingJackson2MessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        converter<span class="token punctuation">.</span><span class="token function">setTargetType</span><span class="token punctuation">(</span><span class="token class-name">MessageType</span><span class="token punctuation">.</span><span class="token constant">TEXT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        converter<span class="token punctuation">.</span><span class="token function">setTypeIdPropertyName</span><span class="token punctuation">(</span><span class="token string">&quot;_type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> converter<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="收消息配置" tabindex="-1"><a class="header-anchor" href="#收消息配置" aria-hidden="true">#</a> 收消息配置</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JmsListener</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@Component</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Receiver</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@JmsListener</span><span class="token punctuation">(</span>destination <span class="token operator">=</span> <span class="token string">&quot;str.queue&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receiveMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received &lt;&quot;</span> <span class="token operator">+</span> message <span class="token operator">+</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@JmsListener</span><span class="token punctuation">(</span>destination <span class="token operator">=</span> <span class="token string">&quot;entity.queue&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receiveMessage</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>Email</span> email<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received &lt;&quot;</span> <span class="token operator">+</span> email <span class="token operator">+</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringbootJmsActivemqApplication</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">JmsTemplate</span> jmsTemplate<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SpringbootJmsActivemqApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">CommandLineRunner</span> <span class="token function">testStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> args <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n            jmsTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;str.queue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello jms activemq&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">CommandLineRunner</span> <span class="token function">testEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> args <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n            jmsTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;entity.queue&quot;</span>\n                    <span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Email</span><span class="token punctuation">(</span><span class="token string">&quot;q10viking&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello jms activemq&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p><img src="/images/springboot/image-20230605140823691.png" alt="image-20230605140823691"></p><h2 id="jmstemplate" tabindex="-1"><a class="header-anchor" href="#jmstemplate" aria-hidden="true">#</a> JmsTemplate</h2><blockquote><p>自动配置类<code>JmsAutoConfiguration</code>配置了模板</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>\n<span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">JmsOperations</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ConditionalOnSingleCandidate</span><span class="token punctuation">(</span><span class="token class-name">ConnectionFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">JmsTemplate</span> <span class="token function">jmsTemplate</span><span class="token punctuation">(</span><span class="token class-name">ConnectionFactory</span> connectionFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">PropertyMapper</span> map <span class="token operator">=</span> <span class="token class-name">PropertyMapper</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">JmsTemplate</span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JmsTemplate</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    template<span class="token punctuation">.</span><span class="token function">setPubSubDomain</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span><span class="token function">isPubSubDomain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    map<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>destinationResolver<span class="token operator">::</span><span class="token function">getIfUnique</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whenNonNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span>template<span class="token operator">::</span><span class="token function">setDestinationResolver</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    map<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageConverter<span class="token operator">::</span><span class="token function">getIfUnique</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whenNonNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span>template<span class="token operator">::</span><span class="token function">setMessageConverter</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">mapTemplateProperties</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span><span class="token function">getTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> template<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> template<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',12),h={href:"https://lankydan.dev/2017/06/18/using-jms-in-spring-boot",target:"_blank",rel:"noopener noreferrer"},f={href:"https://docs.spring.io/spring-boot/docs/2.7.12/reference/html/messaging.html#messaging.jms.activemq",target:"_blank",rel:"noopener noreferrer"},y={href:"https://spring.io/guides/gs/messaging-jms/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://activemq.apache.org/components/classic/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://activemq.apache.org/vm-transport-reference.html",target:"_blank",rel:"noopener noreferrer"},L={},j=(0,a(66262).A)(L,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[t,e,o,(0,p.Lk)("p",null,[(0,p.Lk)("a",c,[(0,p.eW)("what-apache-activemq"),(0,p.bF)(a)])]),l,(0,p.Lk)("blockquote",null,[(0,p.Lk)("p",null,[(0,p.Lk)("a",i,[(0,p.eW)("Spring Support"),(0,p.bF)(a)]),(0,p.eW)(" so that ActiveMQ can be easily embedded into Spring applications and configured using Spring’s XML configuration mechanism")]),(0,p.Lk)("p",null,[(0,p.eW)("--- from "),(0,p.Lk)("a",u,[(0,p.eW)("ActiveMQ (apache.org)"),(0,p.bF)(a)])])]),(0,p.Lk)("p",null,[(0,p.eW)("根据"),(0,p.Lk)("a",r,[(0,p.eW)("Springboot官网 对 Activemq 的支持"),(0,p.bF)(a)]),(0,p.eW)("的描述，只要classpath存在ActiveMQ，那么springboot会默认启动内嵌的activemq。前提条件是没有在配置文件没有提供url连接配置并且没有禁用。")]),(0,p.Lk)("blockquote",null,[(0,p.Lk)("p",null,[(0,p.eW)("When "),(0,p.Lk)("a",k,[(0,p.eW)("ActiveMQ"),(0,p.bF)(a)]),(0,p.eW)(" is available on the classpath, Spring Boot can also configure a "),m,(0,p.eW)(". If the broker is present, an embedded broker is automatically started and configured (provided no broker URL is specified through configuration and the embedded broker is not disabled in the configuration).")]),b]),g,(0,p.Lk)("p",null,[(0,p.Lk)("a",d,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),v,(0,p.Lk)("p",null,[(0,p.Lk)("a",h,[(0,p.eW)("Using JMS in Spring Boot | Lanky Dan Blog"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",f,[(0,p.eW)("Springboot官网 对 Activemq 的支持"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",y,[(0,p.eW)("Getting Started | Messaging with JMS (spring.io)"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",q,[(0,p.eW)("ActiveMQ (apache.org)"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",w,[(0,p.eW)("ActiveMQ vm transport"),(0,p.bF)(a)])])],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);