"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[67251],{42680:(a,e,n)=>{n.r(e),n.d(e,{data:()=>s});const s={key:"v-591e8ab0",path:"/javascript/10%20DOM%20API%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/javascript/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"1 元素的标准属性",slug:"_1-元素的标准属性",children:[{level:3,title:"1.1 innerHTML",slug:"_1-1-innerhtml",children:[]},{level:3,title:"1.2(1) innerText",slug:"_1-2-1-innertext",children:[]},{level:3,title:"1.2(2) textContent",slug:"_1-2-2-textcontent",children:[]},{level:3,title:"1.3 表单的属性",slug:"_1-3-表单的属性",children:[]},{level:3,title:"1.4 src",slug:"_1-4-src",children:[]}]},{level:2,title:"2 元素的非标准属性(自定义）",slug:"_2-元素的非标准属性-自定义",children:[{level:3,title:"2.1 getAttribute",slug:"_2-1-getattribute",children:[]},{level:3,title:"2.2 setAttribute",slug:"_2-2-setattribute",children:[]},{level:3,title:"2.3  显示添加属性和动态添加属性",slug:"_2-3-显示添加属性和动态添加属性",children:[]}]},{level:2,title:"2 操作元素样式",slug:"_2-操作元素样式",children:[{level:3,title:"2.1 style",slug:"_2-1-style",children:[]},{level:3,title:"2.2 className",slug:"_2-2-classname",children:[]}]}],filePathRelative:"javascript/10 DOM API基础知识.md"}},32981:(a,e,n)=>{n.r(e),n.d(e,{default:()=>i});const s=(0,n(20641).Fv)('<h2 id="_1-元素的标准属性" tabindex="-1"><a class="header-anchor" href="#_1-元素的标准属性" aria-hidden="true">#</a> 1 元素的标准属性</h2><h3 id="_1-1-innerhtml" tabindex="-1"><a class="header-anchor" href="#_1-1-innerhtml" aria-hidden="true">#</a> 1.1 innerHTML</h3><h3 id="_1-2-1-innertext" tabindex="-1"><a class="header-anchor" href="#_1-2-1-innertext" aria-hidden="true">#</a> 1.2(1) innerText</h3><p>一般用于设置值</p><h3 id="_1-2-2-textcontent" tabindex="-1"><a class="header-anchor" href="#_1-2-2-textcontent" aria-hidden="true">#</a> 1.2(2) textContent</h3><p>一般用于获取</p><h3 id="_1-3-表单的属性" tabindex="-1"><a class="header-anchor" href="#_1-3-表单的属性" aria-hidden="true">#</a> 1.3 表单的属性</h3><h4 id="_1-3-1-checkbox属性checked" tabindex="-1"><a class="header-anchor" href="#_1-3-1-checkbox属性checked" aria-hidden="true">#</a> 1.3.1 checkbox属性checked</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>checkbox<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span> or <span class="token boolean">false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_1-3-2-value" tabindex="-1"><a class="header-anchor" href="#_1-3-2-value" aria-hidden="true">#</a> 1.3.2 value</h4><h4 id="_1-3-3-disabled" tabindex="-1"><a class="header-anchor" href="#_1-3-3-disabled" aria-hidden="true">#</a> 1.3.3 disabled</h4><h4 id="_1-3-4-type" tabindex="-1"><a class="header-anchor" href="#_1-3-4-type" aria-hidden="true">#</a> 1.3.4 type</h4><h3 id="_1-4-src" tabindex="-1"><a class="header-anchor" href="#_1-4-src" aria-hidden="true">#</a> 1.4 src</h3><h4 id="_1-4-1-img图片的src" tabindex="-1"><a class="header-anchor" href="#_1-4-1-img图片的src" aria-hidden="true">#</a> 1.4.1 img图片的src</h4><h2 id="_2-元素的非标准属性-自定义" tabindex="-1"><a class="header-anchor" href="#_2-元素的非标准属性-自定义" aria-hidden="true">#</a> 2 元素的非标准属性(自定义）</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_2-1-getattribute" tabindex="-1"><a class="header-anchor" href="#_2-1-getattribute" aria-hidden="true">#</a> 2.1 getAttribute</h3><h3 id="_2-2-setattribute" tabindex="-1"><a class="header-anchor" href="#_2-2-setattribute" aria-hidden="true">#</a> 2.2 setAttribute</h3><h3 id="_2-3-显示添加属性和动态添加属性" tabindex="-1"><a class="header-anchor" href="#_2-3-显示添加属性和动态添加属性" aria-hidden="true">#</a> 2.3 显示添加属性和动态添加属性</h3><h4 id="_2-3-1-setattribute添加" tabindex="-1"><a class="header-anchor" href="#_2-3-1-setattribute添加" aria-hidden="true">#</a> 2.3.1 setAttribute添加</h4><ol><li>会出现在html文档显示中</li><li>只能通过getAttribute获取值</li></ol><h4 id="_2-3-2-this-属性" tabindex="-1"><a class="header-anchor" href="#_2-3-2-this-属性" aria-hidden="true">#</a> 2.3.2 this.属性</h4><ol><li>不会出现在html文档显示中</li><li>只能通过this.属性获取值</li></ol><h4 id="_2-3-3-推荐使用setattribute操作⭐" tabindex="-1"><a class="header-anchor" href="#_2-3-3-推荐使用setattribute操作⭐" aria-hidden="true">#</a> 2.3.3 推荐使用setAttribute操作⭐</h4><h2 id="_2-操作元素样式" tabindex="-1"><a class="header-anchor" href="#_2-操作元素样式" aria-hidden="true">#</a> 2 操作元素样式</h2><h3 id="_2-1-style" tabindex="-1"><a class="header-anchor" href="#_2-1-style" aria-hidden="true">#</a> 2.1 style</h3><ol><li>可以设置所有css属性值，包括定位等</li></ol><h4 id="_2-1-2-with表达式" tabindex="-1"><a class="header-anchor" href="#_2-1-2-with表达式" aria-hidden="true">#</a> 2.1.2 with表达式</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> 30px<span class="token punctuation">;</span>\nel<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> 30px<span class="token punctuation">;</span>\nel<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> red<span class="token punctuation">;</span>\n\n<span class="token comment">// 用with表达式简写</span>\n<span class="token keyword">with</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>style<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\twidth <span class="token operator">=</span> 30px<span class="token punctuation">;</span>\n\theight <span class="token operator">=</span> 30px<span class="token punctuation">;</span>\n\tbackgroundColor<span class="token operator">=</span>red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_2-2-classname" tabindex="-1"><a class="header-anchor" href="#_2-2-classname" aria-hidden="true">#</a> 2.2 className</h3><h4 id="_2-2-1-直接覆盖元素样式" tabindex="-1"><a class="header-anchor" href="#_2-2-1-直接覆盖元素样式" aria-hidden="true">#</a> 2.2.1 直接覆盖元素样式</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>el<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&quot;className&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',32),t={},i=(0,n(66262).A)(t,[["render",function(a,e){return s}]])},66262:(a,e)=>{e.A=(a,e)=>{const n=a.__vccOpts||a;for(const[a,s]of e)n[a]=s;return n}}}]);