"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[2150],{53567:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-657077f8",path:"/MySQL/42%20%E7%B4%A2%E5%BC%95%E5%A4%B1%E6%95%88%E7%9A%84%E6%83%85%E5%86%B5%E6%9C%89%E5%93%AA%E4%BA%9B.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/MySQL/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[],filePathRelative:"MySQL/42 索引失效的情况有哪些.md"}},62486:(s,n,a)=>{a.r(n),a.d(n,{default:()=>o});var e=a(20641);const p=[(0,e.Fv)('<li><p><strong>不满足索引列顺序</strong>：如果查询条件中的列顺序与索引列的顺序不一致，索引可能无法被使用。例如，一个联合索引（A, B），如果查询条件只包含了B列而没有A列，那么这个索引就无法被利用。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">=</span> <span class="token number">25</span> <span class="token comment">#如果age列没有被索引，索引就不会被使用。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p><strong>使用函数或表达式</strong>：当查询条件中对索引列应用了函数、数学运算、类型转换等操作时，索引可能无法被使用。因为索引的创建是基于原始列值的，无法直接使用函数计算后的结果进行索引匹配。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span>birth_date<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1990</span> <span class="token comment"># 即使birth_date被索引，使用YEAR()函数也会使索引失效。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p><strong>字符串比较问题</strong>：对于字符串类型的索引列，使用了不符合索引规则的比较方式。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;%Smith&#39;</span><span class="token punctuation">;</span> <span class="token comment"># 但LIKE &#39;Smith%&#39;可以使用索引。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p><strong>数据类型不匹配</strong>：当查询条件的数据类型与索引列的数据类型不匹配时，索引可能无法被使用。尤其是在<strong>进行隐式数据类型转换</strong>、不同字符集的比较或编码问题时，需要特别留意。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> string_column <span class="token operator">=</span> <span class="token number">123</span> <span class="token comment"># 即使string_column被索引，但由于隐式将数字转换为字符串，索引可能失效</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p><strong>数据量过小</strong>：当表中的数据量较小时，MySQL可能会选择全表扫描而非使用索引，因为全表扫描的成本较低。这种情况下，索引可能无法发挥作用。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 例如，在一个大多数用户都来自同一城市的用户表中，对城市进行索引可能不会提高查询效率</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p><strong>使用了NOT、&lt;&gt;、OR等非优化的逻辑操作符</strong>：这些逻辑操作符在查询条件中的使用会导致索引失效，因为它们无法充分利用索引的特性。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> last_name <span class="token operator">=</span> <span class="token string">&#39;Smith&#39;</span> <span class="token operator">OR</span> age <span class="token operator">=</span> <span class="token number">30</span> <span class="token comment"># 如果last_name被索引而age没有，整个索引可能不会被使用。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>',6)],l={},o=(0,a(66262).A)(l,[["render",function(s,n){return(0,e.uX)(),(0,e.CE)("ol",null,p)}]])},66262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);