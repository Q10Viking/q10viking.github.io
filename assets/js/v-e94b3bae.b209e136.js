"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[47369],{68803:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-e94b3bae",path:"/kafka/02%20%E5%AE%89%E8%A3%85.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/kafka/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"环境准备",slug:"环境准备",children:[{level:3,title:"配置",slug:"配置",children:[]},{level:3,title:"启动",slug:"启动",children:[]}]},{level:2,title:"CMAK界面管理工具",slug:"cmak界面管理工具",children:[{level:3,title:"配置",slug:"配置-1",children:[]},{level:3,title:"启动",slug:"启动-1",children:[]},{level:3,title:"cmak的docker版",slug:"cmak的docker版",children:[]}]},{level:2,title:"启动归总",slug:"启动归总",children:[]}],filePathRelative:"kafka/02 安装.md"}},42910:(n,s,a)=>{a.r(s),a.d(s,{default:()=>A});var e=a(20641);const p=(0,e.Lk)("h2",{id:"环境准备",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#环境准备","aria-hidden":"true"},"#"),(0,e.eW)(" 环境准备")],-1),r=(0,e.Lk)("p",null,"需要zk的支持，java环境",-1),l={href:"https://kafka.apache.org/downloads",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Lk)("code",null,"kafka_2.12-2.5.0.tgz",-1),t=(0,e.Fv)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> kafka_2.12-2.5.0.tgz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">listeners</span><span class="token punctuation">=</span><span class="token value attr-value">PLAINTEXT://172.29.96.105:9092</span>\n<span class="token key attr-name">log.dirs</span><span class="token punctuation">=</span><span class="token value attr-value">/home/q10viking/software/kafka_2.12-2.5.0/kafka-logs</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code> bin/kafka-server-start.sh config/server.properties\n <span class="token comment"># 启动kafka，运行日志在logs目录的server.log文件里</span>\nbin/kafka-server-start.sh <span class="token parameter variable">-daemon</span> config/server.properties   <span class="token comment">#后台启动，不会打印日志到控制台</span>\n<span class="token comment">#或者用</span>\nbin/kafka-server-start.sh config/server.properties <span class="token operator">&amp;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="cmak界面管理工具" tabindex="-1"><a class="header-anchor" href="#cmak界面管理工具" aria-hidden="true">#</a> CMAK界面管理工具</h2>',6),c={href:"http://kafka.apache.org/",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Lk)("em",null,"See below for details about the name change.",-1),k={href:"https://github.com/yahoo/CMAK/releases",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Lk)("code",null,"cmak-3.0.0.6",-1),b=(0,e.Fv)('<blockquote><p>需要java11,我在机器上测试时候使用的是java17但是，cmak不会正常运行，改为java11一切顺利</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>使用的zk为3.7.1\nkafka为2.5.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="配置-1" tabindex="-1"><a class="header-anchor" href="#配置-1" aria-hidden="true">#</a> 配置</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>kafka-manager.zkhosts=&quot;172.29.96.105:2181&quot;\nkafka-manager.zkhosts=${?ZK_HOSTS}\ncmak.zkhosts=&quot;172.29.96.105:2181&quot;\ncmak.zkhosts=${?ZK_HOSTS}\n\nbasicAuthentication.username=&quot;admin&quot;\nbasicAuthentication.username=${?KAFKA_MANAGER_USERNAME}\nbasicAuthentication.password=&quot;password&quot;\nbasicAuthentication.password=${?KAFKA_MANAGER_PASSWORD}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="启动-1" tabindex="-1"><a class="header-anchor" href="#启动-1" aria-hidden="true">#</a> 启动</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/cmak\n<span class="token function">nohup</span> bin/cmak <span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>nohup.out <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span> \n<span class="token comment"># 指定端口，默认是9000</span>\n<span class="token function">nohup</span> bin/cmak <span class="token parameter variable">-Dhttp.port</span><span class="token operator">=</span><span class="token number">10010</span> <span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>nohup.out <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',6),m={href:"http://localhost:9000/",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Fv)('<p>添加集群信息，会配置到zk上</p><p><img src="/images/kafka/image-20230422113338711.png" alt="image-20230422113338711"></p><hr><h3 id="cmak的docker版" tabindex="-1"><a class="header-anchor" href="#cmak的docker版" aria-hidden="true">#</a> cmak的docker版</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>因为cmak版本3.0.0.6需要java11,而我的Linux系统上安装的是java8,所以采用docker部署cmak</p></div><ol><li><p>将下载下来的cmak压缩包解压到一个位置</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>q10viking@LAPTOP-PJLAUUSP:~/learndocker/cmak/cmak-3.0.0.6$ <span class="token builtin class-name">pwd</span>\n/home/q10viking/learndocker/cmak/cmak-3.0.0.6\nq10viking@LAPTOP-PJLAUUSP:~/learndocker/cmak/cmak-3.0.0.6$ ll\ntotal <span class="token number">60</span>\ndrwxr-xr-x <span class="token number">8</span> q10viking q10viking  <span class="token number">4096</span> Apr <span class="token number">23</span> <span class="token number">21</span>:26 ./\ndrwxr-xr-x <span class="token number">3</span> q10viking q10viking  <span class="token number">4096</span> Apr <span class="token number">23</span> <span class="token number">21</span>:26 <span class="token punctuation">..</span>/\n-rw-r--r-- <span class="token number">1</span> q10viking q10viking   <span class="token number">184</span> Apr <span class="token number">23</span> <span class="token number">21</span>:26 Dockerfile\n-rw-r--r-- <span class="token number">1</span> q10viking q10viking  <span class="token number">9927</span> Apr <span class="token number">23</span> <span class="token number">21</span>:20 README.md\ndrwxr-xr-x <span class="token number">3</span> q10viking q10viking  <span class="token number">4096</span> Apr <span class="token number">23</span> <span class="token number">21</span>:20 application.home_IS_UNDEFINED/\ndrwxr-xr-x <span class="token number">2</span> q10viking q10viking  <span class="token number">4096</span> Apr <span class="token number">23</span> <span class="token number">21</span>:20 bin/\ndrwxr-xr-x <span class="token number">2</span> q10viking q10viking  <span class="token number">4096</span> Apr <span class="token number">23</span> <span class="token number">21</span>:20 conf/\ndrwxr-xr-x <span class="token number">2</span> q10viking q10viking <span class="token number">12288</span> Apr <span class="token number">23</span> <span class="token number">21</span>:20 lib/\ndrwxr-xr-x <span class="token number">2</span> q10viking q10viking  <span class="token number">4096</span> Apr <span class="token number">23</span> <span class="token number">21</span>:20 logs/\n-rw-r--r-- <span class="token number">1</span> q10viking q10viking   <span class="token number">126</span> Apr <span class="token number">23</span> <span class="token number">21</span>:20 nohup.out\ndrwxr-xr-x <span class="token number">3</span> q10viking q10viking  <span class="token number">4096</span> Apr <span class="token number">23</span> <span class="token number">21</span>:20 share/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></li><li><p>更改配置<code>conf/application.conf</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>kafka-manager.zkhosts<span class="token operator">=</span><span class="token string">&quot;172.29.96.105:2181&quot;</span>\nkafka-manager.zkhosts<span class="token operator">=</span><span class="token variable">${?ZK_HOSTS}</span>\n<span class="token assign-left variable">cmak.zkhosts</span><span class="token operator">=</span><span class="token string">&quot;172.29.96.105:2181&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>在当前目录下创建一个Dockerfile</p><div class="language-docker ext-docker line-numbers-mode"><pre class="language-docker"><code><span class="token comment"># 基于哪个镜像</span>\n<span class="token instruction"><span class="token keyword">From</span> openjdk:11</span>\n<span class="token comment"># docker下的工作目录</span>\n<span class="token instruction"><span class="token keyword">WORKDIR</span> /cmak</span>\n<span class="token comment"># 复制文件到容器的当前工作目录</span>\n<span class="token instruction"><span class="token keyword">copy</span> . .</span>\n<span class="token comment"># 声明需要暴露的端口</span>\n<span class="token instruction"><span class="token keyword">EXPOSE</span> 9000</span>\n<span class="token comment"># 配置容器启动后执行的命令</span>\n<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> bin/cmak</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li><li><p>开始构建</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>q10viking@LAPTOP-PJLAUUSP:~/learndocker/cmak/cmak-3.0.0.6$ <span class="token function">docker</span> build <span class="token parameter variable">-t</span> cmak:3.0.0.6 <span class="token builtin class-name">.</span>\n<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Building <span class="token number">9</span>.7s <span class="token punctuation">(</span><span class="token number">8</span>/8<span class="token punctuation">)</span> FINISHED\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>internal<span class="token punctuation">]</span> load build definition from Dockerfile                                                                                                   <span class="token number">0</span>.5s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> transferring dockerfile: 38B                                                                                                                    <span class="token number">0</span>.0s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>internal<span class="token punctuation">]</span> load .dockerignore                                                                                                                      <span class="token number">0</span>.7s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> transferring context: 2B                                                                                                                        <span class="token number">0</span>.0s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>internal<span class="token punctuation">]</span> load metadata <span class="token keyword">for</span> docker.io/library/openjdk:11                                                                                          <span class="token number">0</span>.0s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span>/3<span class="token punctuation">]</span> FROM docker.io/library/openjdk:11                                                                                                            <span class="token number">0</span>.0s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>internal<span class="token punctuation">]</span> load build context                                                                                                                      <span class="token number">0</span>.4s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> transferring context: <span class="token number">70</span>.24kB                                                                                                                   <span class="token number">0</span>.0s\n <span class="token operator">=</span><span class="token operator">&gt;</span> CACHED <span class="token punctuation">[</span><span class="token number">2</span>/3<span class="token punctuation">]</span> WORKDIR /cmak                                                                                                                         <span class="token number">0</span>.0s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">3</span>/3<span class="token punctuation">]</span> COPY <span class="token builtin class-name">.</span> <span class="token builtin class-name">.</span>                                                                                                                                     <span class="token number">6</span>.0s\n <span class="token operator">=</span><span class="token operator">&gt;</span> exporting to image                                                                                                                                 <span class="token number">2</span>.0s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> exporting layers                                                                                                                                <span class="token number">1</span>.4s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> writing image sha256:e88cbd0dfa2dc1286753799ad74d73fb6c2f5f85d1d1befa62cfec142afd6e2f                                                           <span class="token number">0</span>.1s\n <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> naming to docker.io/library/cmak:3.0.0.6\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li><li><p>启动容器</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 cmak:3.0.0.6\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li></ol><p><img src="/images/Docker/image-20230423214847820.png" alt="image-20230423214847820"></p>',7),g={start:"6"},h=(0,e.Fv)('<li><p>查看docker容器里面的内容</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>q10viking@LAPTOP-PJLAUUSP:~/learndocker/cmak/cmak-3.0.0.6$ <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> 96229aa6f378 /bin/bash\n \nroot@96229aa6f378:/<span class="token comment"># ls</span>\nbin  boot  cmak  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\nroot@96229aa6f378:/<span class="token comment"># ls /cmak/</span>\nDockerfile  README.md  RUNNING_PID  application.home_IS_UNDEFINED  bin  conf  lib  logs  nohup.out  share\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>',1),v={href:"https://hub.docker.com/r/q10viking/cmak/tags",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Lk)("code",null,"/cmak/conf/application.conf",-1),x=(0,e.Fv)('<h2 id="启动归总" tabindex="-1"><a class="header-anchor" href="#启动归总" aria-hidden="true">#</a> 启动归总</h2><blockquote><p>windows子系统ubuntu</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#zk</span>\nbin/zkServer.sh start conf/zoo.cfg\n<span class="token comment">#kafka</span>\nbin/kafka-server-start.sh <span class="token parameter variable">-daemon</span> config/server.properties\n<span class="token comment">#cmak</span>\n<span class="token function">nohup</span> bin/cmak <span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>nohup.out <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',3),q={},A=(0,a(66262).A)(q,[["render",function(n,s){const a=(0,e.g2)("OutboundLink");return(0,e.uX)(),(0,e.CE)(e.FK,null,[p,r,(0,e.Lk)("p",null,[(0,e.Lk)("a",l,[(0,e.eW)("Apache Kafka dowload"),(0,e.bF)(a)]),(0,e.eW)("下载安装包使用"),o]),t,(0,e.Lk)("blockquote",null,[(0,e.Lk)("p",null,[(0,e.eW)("CMAK (previously known as Kafka Manager) is a tool for managing "),(0,e.Lk)("a",c,[(0,e.eW)("Apache Kafka"),(0,e.bF)(a)]),(0,e.eW)(" clusters. "),i])]),(0,e.Lk)("p",null,[(0,e.Lk)("a",k,[(0,e.eW)("Releases · yahoo/CMAK (github.com)"),(0,e.bF)(a)]),(0,e.eW)("下载的版本是"),u]),b,(0,e.Lk)("p",null,[(0,e.Lk)("a",m,[(0,e.eW)("http://localhost:9000/"),(0,e.bF)(a)])]),d,(0,e.Lk)("ol",g,[h,(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",v,[(0,e.eW)("q10viking/cmak Tags | Docker Hub"),(0,e.bF)(a)]),(0,e.eW)(" 我已经提交到了docker hub,以后就可以下载这个docker,运行起来，然后进去修改"),f,(0,e.eW)("的配置就好（主要是更改zkhost的配置）。")])])]),x],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);