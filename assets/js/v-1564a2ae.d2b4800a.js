"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[4151],{41441:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-1564a2ae",path:"/java/22%20%E5%BC%82%E5%B8%B8%E4%BD%93%E7%B3%BB.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/java/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"程序中异常产生后，是如何处理的",slug:"程序中异常产生后-是如何处理的",children:[]},{level:2,title:"异常体系",slug:"异常体系",children:[]},{level:2,title:"JVM默认处理异常的方式",slug:"jvm默认处理异常的方式",children:[]}],filePathRelative:"java/22 异常体系.md"}},63993:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(20641).Fv)('<h2 id="程序中异常产生后-是如何处理的" tabindex="-1"><a class="header-anchor" href="#程序中异常产生后-是如何处理的" aria-hidden="true">#</a> 程序中异常产生后，是如何处理的</h2><p>程序中一旦产生异常，首先会中断向下执行。如果没有处理，默认是将异常传递给本方法的调用者。不断往回传递，直到JVM收到该异常，此时程序终止执行。</p><h2 id="异常体系" tabindex="-1"><a class="header-anchor" href="#异常体系" aria-hidden="true">#</a> 异常体系</h2><p><img src="/images/springsecurity/image-20230315143427942.png" alt="image-20230315143427942"></p><ul><li>Error：严重问题，通过代码无法处理（比如内存溢出）</li><li>Exception：称为异常类，它表示程序本身可以处理的问题 <ul><li>RuntimeException及其子类：运行时异常。 (空指针异常，数组索引越界异常)</li><li>非RuntimeException及其子类：编译时异常 , 编译期必须处理的，否则程序不能通过编译。 (日期格式化异常)。</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span><span class="token punctuation">{</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;抛出一个Runtime异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main运行结束&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n     * 抛出一个Runtime异常\n     * main运行结束\n     */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="jvm默认处理异常的方式" tabindex="-1"><a class="header-anchor" href="#jvm默认处理异常的方式" aria-hidden="true">#</a> JVM默认处理异常的方式</h2><p>把异常的类型 , 原因 , 位置打印在控制台，程序停止执行</p><p><strong>注意 : 程序中出现了异常 , 会在当前位置创建此异常的对象 , 对象中包含了异常的信息 , 并把此异常交给本方法的调用者处理</strong></p>',9),e={},p=(0,a(66262).A)(e,[["render",function(n,s){return t}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);