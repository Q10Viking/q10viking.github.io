"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[89035],{86697:(e,a,t)=>{t.r(a),t.d(a,{data:()=>r});const r={key:"v-12485412",path:"/zk/05%20zk%E7%9B%91%E5%90%AC%E6%9C%BA%E5%88%B6.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/zk/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"zk事件监听",slug:"zk事件监听",children:[{level:3,title:"特性",slug:"特性",children:[]}]},{level:2,title:"监听节点",slug:"监听节点",children:[]},{level:2,title:"监听目录",slug:"监听目录",children:[]},{level:2,title:"Zookeeper事件类型",slug:"zookeeper事件类型",children:[]}],filePathRelative:"zk/05 zk监听机制.md"}},38075:(e,a,t)=>{t.r(a),t.d(a,{default:()=>i});const r=(0,t(20641).Fv)('<h2 id="zk事件监听" tabindex="-1"><a class="header-anchor" href="#zk事件监听" aria-hidden="true">#</a> zk事件监听</h2><p>客户端注册监听它关心的任意节点，或者目录节点及递归子目录节点</p><ol><li>如果注册的是对某个节点的监听，则当这个节点被删除，或者被修改时，对应的客户端将被通知</li><li>如果注册的是对某个目录的监听，则当这个目录有子节点被创建，或者有子节点被删除，对应的客户端将被通知</li><li>如果注册的是对某个目录的递归子节点进行监听，则当这个目录下面的任意子节点有目录结构的变化（有子节点被创建，或被删除）或者根节点有数据变化时，对应的客户端将被通知。</li></ol><p>注意：<strong>所有的通知都是一次性的</strong>，及无论是对节点还是对目录进行的监听，一旦触发，对应的监听即被移除。递归子节点，监听是对所有子节点的，所以，每个子节点下面的事件同样只会被触发一次。</p><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性</h3><table><thead><tr><th>特性</th><th>说明</th></tr></thead><tbody><tr><td>一次性触发</td><td>watcher是一次性的，一旦被触发就会移除，再次使用时需要重新注册</td></tr><tr><td>客户端顺序回调</td><td>watcher回调是顺序串行执行的，只有回调后客户端才能看到最新的数据状态。一个watcher回调逻辑不应该太多，以免影响别的watcher执行</td></tr><tr><td>轻量级</td><td>WatchEvent是最小的通信单位，结构上只包含通知状态、事件类型和节点路径，并不会告诉数据节点变化前后的具体内容</td></tr><tr><td>时效性</td><td>watcher只有在当前session彻底失效时才会无效，若在session有效期内快速重连成功，则watcher依然存在，仍可接收到通知；</td></tr></tbody></table><h2 id="监听节点" tabindex="-1"><a class="header-anchor" href="#监听节点" aria-hidden="true">#</a> 监听节点</h2><img src="/images/zk/image-20211118055024699.png" alt="image-20211118055024699"><h2 id="监听目录" tabindex="-1"><a class="header-anchor" href="#监听目录" aria-hidden="true">#</a> 监听目录</h2><img src="/images/zk/image-20211118055257990.png" alt="image-20211118055257990"><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 或者递归监听</span>\n<span class="token function">ls</span> <span class="token parameter variable">-R</span> <span class="token parameter variable">-w</span> /test\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="zookeeper事件类型" tabindex="-1"><a class="header-anchor" href="#zookeeper事件类型" aria-hidden="true">#</a> <strong>Zookeeper事件类型</strong></h2><ol><li><code>None</code>: 连接建立事件</li><li><code>NodeCreated</code>： 节点创建</li><li><code>NodeDeleted</code>： 节点删除</li><li><code>NodeDataChanged</code>：节点数据变化</li><li><code>NodeChildrenChanged</code>：子节点列表变化</li><li><code>DataWatchRemoved</code>：节点监听被移除</li><li><code>ChildWatchRemoved</code>：子节点监听被移除</li></ol>',13),d={},i=(0,t(66262).A)(d,[["render",function(e,a){return r}]])},66262:(e,a)=>{a.A=(e,a)=>{const t=e.__vccOpts||e;for(const[e,r]of a)t[e]=r;return t}}}]);