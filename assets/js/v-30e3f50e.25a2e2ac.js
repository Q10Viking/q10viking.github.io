"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[5571],{13342:(e,r,t)=>{t.r(r),t.d(r,{data:()=>l});const l={key:"v-30e3f50e",path:"/Algorithm/",title:"",lang:"zh-CN",frontmatter:{prev:{text:"Back To 目录",link:"/topicNav/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"算法",slug:"算法",children:[{level:3,title:"递归",slug:"递归",children:[]},{level:3,title:"动态规划",slug:"动态规划",children:[]},{level:3,title:"贪心算法",slug:"贪心算法",children:[]},{level:3,title:"滑动窗口",slug:"滑动窗口",children:[]},{level:3,title:"暴力解法",slug:"暴力解法",children:[]},{level:3,title:"双指针",slug:"双指针",children:[]},{level:3,title:"位运算",slug:"位运算",children:[]},{level:3,title:"回溯",slug:"回溯",children:[]},{level:3,title:"数学趣味题",slug:"数学趣味题",children:[]}]},{level:2,title:"数据结构",slug:"数据结构",children:[{level:3,title:"数组",slug:"数组",children:[]},{level:3,title:"链表",slug:"链表",children:[]},{level:3,title:"hash",slug:"hash",children:[]},{level:3,title:"栈",slug:"栈",children:[]},{level:3,title:"队列",slug:"队列",children:[]},{level:3,title:"字符串",slug:"字符串",children:[]},{level:3,title:"树",slug:"树",children:[]}]},{level:2,title:"二分法",slug:"二分法",children:[]},{level:2,title:"计数",slug:"计数",children:[]},{level:2,title:"哈希表",slug:"哈希表",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"Algorithm/README.md"}},17361:(e,r,t)=>{t.r(r),t.d(r,{default:()=>Rr});var l=t(20641);const n=(0,l.Lk)("p",null,"数据结构+算法，将思路落地代码",-1),E=(0,l.Lk)("hr",null,null,-1),i=(0,l.Lk)("thead",null,[(0,l.Lk)("tr",null,[(0,l.Lk)("th",{style:{"text-align":"center"}},"My Person Love ❤️❤️❤️❤️❤️"),(0,l.Lk)("th",null,"Reason")])],-1),h={style:{"text-align":"center"}},o={href:"https://q10viking.github.io/Algorithm/%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0.html",target:"_blank",rel:"noopener noreferrer"},a=(0,l.Lk)("td",null,"双指针+二分法找指定位置的数",-1),A={style:{"text-align":"center"}},k={href:"https://q10viking.github.io/Algorithm/LRU%E7%BC%93%E5%AD%98.html",target:"_blank",rel:"noopener noreferrer"},g=(0,l.Lk)("td",null,"缓存机制 Map+LinkedList",-1),B={style:{"text-align":"center"}},b={href:"https://q10viking.github.io/Algorithm/%E5%90%88%E5%B9%B6K%E4%B8%AA%E5%8D%87%E5%BA%8F%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},p=(0,l.Lk)("td",null,"分而治之 堆+LinkedList",-1),L={style:{"text-align":"center"}},u={href:"https://q10viking.github.io/Algorithm/%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"},f=(0,l.Lk)("td",null,"单调栈",-1),s={style:{"text-align":"center"}},m={href:"https://q10viking.github.io/Algorithm/%E6%9F%B1%E7%8A%B6%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2.html",target:"_blank",rel:"noopener noreferrer"},d=(0,l.Lk)("td",null,"暴力求解--\x3e单调栈优化",-1),F=(0,l.Lk)("tr",null,[(0,l.Lk)("td",{style:{"text-align":"center"}}),(0,l.Lk)("td")],-1),v=(0,l.Lk)("tr",null,[(0,l.Lk)("td",{style:{"text-align":"center"}}),(0,l.Lk)("td")],-1),W=(0,l.Lk)("tr",null,[(0,l.Lk)("td",{style:{"text-align":"center"}}),(0,l.Lk)("td")],-1),c=(0,l.Lk)("tr",null,[(0,l.Lk)("td",{style:{"text-align":"center"}}),(0,l.Lk)("td")],-1),C=(0,l.Lk)("h2",{id:"算法",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#算法","aria-hidden":"true"},"#"),(0,l.eW)(" 算法")],-1),_=(0,l.Lk)("h3",{id:"递归",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#递归","aria-hidden":"true"},"#"),(0,l.eW)(" 递归")],-1),q={href:"https://q10viking.github.io/Algorithm/70%20%E7%88%AC%E6%A5%BC%E6%A2%AF.html#%E9%80%92%E5%BD%92",target:"_blank",rel:"noopener noreferrer"},D={href:"https://q10viking.github.io/Algorithm/LCR%20126%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://q10viking.github.io/Algorithm/21%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},R={href:"https://q10viking.github.io/Algorithm/83%20%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://q10viking.github.io/Algorithm/206%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},I=(0,l.Lk)("p",null,"在树的遍历过程中，经常使用到递归",-1),w=(0,l.Lk)("h3",{id:"动态规划",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#动态规划","aria-hidden":"true"},"#"),(0,l.eW)(" 动态规划")],-1),z={href:"https://q10viking.github.io/Algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html",target:"_blank",rel:"noopener noreferrer"},K={href:"https://q10viking.github.io/Algorithm/5%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2.html#%E6%9A%B4%E5%8A%9B%E8%A7%A3%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},M={href:"https://q10viking.github.io/Algorithm/leetcode-300.html",target:"_blank",rel:"noopener noreferrer"},O={href:"https://q10viking.github.io/Algorithm/leetcode-416.html",target:"_blank",rel:"noopener noreferrer"},N={href:"https://q10viking.github.io/Algorithm/53%20%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"},P={href:"https://q10viking.github.io/Algorithm/121%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA.html",target:"_blank",rel:"noopener noreferrer"},S=(0,l.Lk)("h3",{id:"贪心算法",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#贪心算法","aria-hidden":"true"},"#"),(0,l.eW)(" 贪心算法")],-1),U={href:"https://q10viking.github.io/Algorithm/55%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F.html",target:"_blank",rel:"noopener noreferrer"},G={href:"https://q10viking.github.io/Algorithm/53%20%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"},H={href:"https://q10viking.github.io/Algorithm/406%20%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97.html",target:"_blank",rel:"noopener noreferrer"},T={href:"https://q10viking.github.io/Algorithm/621%20%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8.html",target:"_blank",rel:"noopener noreferrer"},V=(0,l.Lk)("h3",{id:"滑动窗口",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#滑动窗口","aria-hidden":"true"},"#"),(0,l.eW)(" 滑动窗口")],-1),X={href:"https://q10viking.github.io/Algorithm/3%20%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://q10viking.github.io/Algorithm/76%20%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2.html#%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"},J=(0,l.Lk)("h3",{id:"暴力解法",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#暴力解法","aria-hidden":"true"},"#"),(0,l.eW)(" 暴力解法")],-1),Q={href:"https://q10viking.github.io/Algorithm/28%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87.html",target:"_blank",rel:"noopener noreferrer"},Y=(0,l.Lk)("h3",{id:"双指针",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#双指针","aria-hidden":"true"},"#"),(0,l.eW)(" 双指针")],-1),Z={href:"https://q10viking.github.io/Algorithm/228%20%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4.html#%E5%8F%8C%E6%8C%87%E9%92%88%E8%BF%9B%E8%A1%8C%E6%A0%87%E8%AE%B0",target:"_blank",rel:"noopener noreferrer"},$={href:"https://q10viking.github.io/Algorithm/165%20%E6%AF%94%E8%BE%83%E7%89%88%E6%9C%AC%E5%8F%B7.html#%E5%8F%8C%E6%8C%87%E9%92%88%E5%A4%84%E7%90%86",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://q10viking.github.io/Algorithm/283%20%E7%A7%BB%E5%8A%A8%E9%9B%B6.html",target:"_blank",rel:"noopener noreferrer"},re={href:"https://q10viking.github.io/Algorithm/141%20%E7%8E%AF%E5%BD%A2%E5%88%97%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},te={href:"https://q10viking.github.io/Algorithm/160%20%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},le={href:"https://q10viking.github.io/Algorithm/876%20%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E7%BB%93%E7%82%B9.html",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://q10viking.github.io/Algorithm/LCR%2022%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%ACk%E4%B8%AA%E8%8A%82%E7%82%B9.html",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://q10viking.github.io/Algorithm/11%20%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8.html",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://q10viking.github.io/Algorithm/15%20%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"},he=(0,l.Lk)("h3",{id:"位运算",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#位运算","aria-hidden":"true"},"#"),(0,l.eW)(" 位运算")],-1),oe={href:"https://q10viking.github.io/Algorithm/136%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97.html",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://q10viking.github.io/Algorithm/338%20%E6%AF%94%E7%89%B9%E4%BD%8D%E8%AE%A1%E6%95%B0.html",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://q10viking.github.io/Algorithm/461%20%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB.html",target:"_blank",rel:"noopener noreferrer"},ke=(0,l.Lk)("h3",{id:"回溯",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#回溯","aria-hidden":"true"},"#"),(0,l.eW)(" 回溯")],-1),ge={href:"https://q10viking.github.io/Algorithm/46%20%E5%85%A8%E6%8E%92%E5%88%97%E4%B8%8E47%20%E5%85%A8%E6%8E%92%E5%88%972.html",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://q10viking.github.io/Algorithm/22%20%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90.html#%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},be={href:"https://q10viking.github.io/Algorithm/17%20%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88.html",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://q10viking.github.io/Algorithm/78%20%E5%AD%90%E9%9B%86%E5%90%88.html",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://q10viking.github.io/Algorithm/79%20%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D.html",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://q10viking.github.io/Algorithm/39%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://q10viking.github.io/Algorithm/1%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"},se=(0,l.Lk)("hr",null,null,-1),me=(0,l.Lk)("h3",{id:"数学趣味题",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#数学趣味题","aria-hidden":"true"},"#"),(0,l.eW)(" 数学趣味题")],-1),de={href:"https://q10viking.github.io/Algorithm/470%20%E7%94%A8%20Rand7()%20%E5%AE%9E%E7%8E%B0%20Rand10().html",target:"_blank",rel:"noopener noreferrer"},Fe=(0,l.Lk)("h2",{id:"数据结构",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#数据结构","aria-hidden":"true"},"#"),(0,l.eW)(" 数据结构")],-1),ve=(0,l.Lk)("h3",{id:"数组",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#数组","aria-hidden":"true"},"#"),(0,l.eW)(" 数组")],-1),We={href:"https://q10viking.github.io/Algorithm/66%20%E5%8A%A0%E4%B8%80.html#%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://q10viking.github.io/Algorithm/1%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://q10viking.github.io/Algorithm/88%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84.html",target:"_blank",rel:"noopener noreferrer"},_e={href:"https://q10viking.github.io/Algorithm/283%20%E7%A7%BB%E5%8A%A8%E9%9B%B6.html",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://q10viking.github.io/Algorithm/448%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%B6%88%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97.html",target:"_blank",rel:"noopener noreferrer"},De={href:"https://q10viking.github.io/Algorithm/LCR%20173%20%E7%82%B9%E5%90%8D.html#%E9%81%8D%E5%8E%86",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://q10viking.github.io/Algorithm/11%20%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8.html",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://q10viking.github.io/Algorithm/15%20%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://q10viking.github.io/Algorithm/31%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97.html",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://q10viking.github.io/Algorithm/48%20%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F.html",target:"_blank",rel:"noopener noreferrer"},we=(0,l.Lk)("h3",{id:"链表",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#链表","aria-hidden":"true"},"#"),(0,l.eW)(" 链表")],-1),ze={href:"https://q10viking.github.io/Algorithm/21%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://q10viking.github.io/Algorithm/83%20%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0.html",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://q10viking.github.io/Algorithm/141%20%E7%8E%AF%E5%BD%A2%E5%88%97%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://q10viking.github.io/Algorithm/142%20%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8%20II.html",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://q10viking.github.io/Algorithm/160%20%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://q10viking.github.io/Algorithm/206%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://q10viking.github.io/Algorithm/234%20%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://q10viking.github.io/Algorithm/876%20%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E7%BB%93%E7%82%B9.html",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://q10viking.github.io/Algorithm/LCR%2022%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%ACk%E4%B8%AA%E8%8A%82%E7%82%B9.html",target:"_blank",rel:"noopener noreferrer"},He=(0,l.Lk)("h3",{id:"hash",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#hash","aria-hidden":"true"},"#"),(0,l.eW)(" hash")],-1),Te={href:"https://q10viking.github.io/Algorithm/141%20%E7%8E%AF%E5%BD%A2%E5%88%97%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},Ve=(0,l.Lk)("h3",{id:"栈",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#栈","aria-hidden":"true"},"#"),(0,l.eW)(" 栈")],-1),Xe={href:"https://q10viking.github.io/Algorithm/151%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D.html#%E6%A0%88%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"},je={href:"https://q10viking.github.io/Algorithm/232%20%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97.html",target:"_blank",rel:"noopener noreferrer"},Je={href:"https://q10viking.github.io/Algorithm/394%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81.html",target:"_blank",rel:"noopener noreferrer"},Qe=(0,l.Lk)("h3",{id:"队列",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#队列","aria-hidden":"true"},"#"),(0,l.eW)(" 队列")],-1),Ye={href:"https://q10viking.github.io/Algorithm/101%20%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://q10viking.github.io/Algorithm/104%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"},$e=(0,l.Lk)("h3",{id:"字符串",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#字符串","aria-hidden":"true"},"#"),(0,l.eW)(" 字符串")],-1),er={href:"https://q10viking.github.io/Algorithm/58%20%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://q10viking.github.io/Algorithm/67%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%B1%82%E5%92%8C.html#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A4%84%E7%90%86",target:"_blank",rel:"noopener noreferrer"},tr={href:"https://q10viking.github.io/Algorithm/8%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0%20(atoi).html",target:"_blank",rel:"noopener noreferrer"},lr={href:"https://q10viking.github.io/Algorithm/394%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81.html",target:"_blank",rel:"noopener noreferrer"},nr={href:"https://q10viking.github.io/Algorithm/415%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0.html",target:"_blank",rel:"noopener noreferrer"},Er={href:"https://q10viking.github.io/Algorithm/20%20%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7.html",target:"_blank",rel:"noopener noreferrer"},ir=(0,l.Lk)("h3",{id:"树",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#树","aria-hidden":"true"},"#"),(0,l.eW)(" 树")],-1),hr={href:"https://q10viking.github.io/Algorithm/94%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html",target:"_blank",rel:"noopener noreferrer"},or={href:"https://q10viking.github.io/Algorithm/144%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86.html",target:"_blank",rel:"noopener noreferrer"},ar={href:"https://q10viking.github.io/Algorithm/145%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86.html",target:"_blank",rel:"noopener noreferrer"},Ar={href:"https://q10viking.github.io/Algorithm/101%20%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html",target:"_blank",rel:"noopener noreferrer"},kr={href:"https://q10viking.github.io/Algorithm/104%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"},gr={href:"https://q10viking.github.io/Algorithm/104%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"},Br={href:"https://q10viking.github.io/Algorithm/226%20%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91.html",target:"_blank",rel:"noopener noreferrer"},br=(0,l.Lk)("h2",{id:"二分法",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#二分法","aria-hidden":"true"},"#"),(0,l.eW)(" 二分法")],-1),pr={href:"https://q10viking.github.io/Algorithm/69%20x%20%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9.html#%E4%BA%8C%E5%88%86%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},Lr={href:"https://q10viking.github.io/Algorithm/33%20%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84.html#%E4%BA%8C%E5%88%86%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},ur={href:"https://q10viking.github.io/Algorithm/34%20%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE.html#%E4%BA%8C%E5%88%86%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},fr={href:"https://q10viking.github.io/Algorithm/153%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC.html#%E4%BA%8C%E5%88%86%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},sr={href:"https://q10viking.github.io/Algorithm/240%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%20II.html",target:"_blank",rel:"noopener noreferrer"},mr=(0,l.Lk)("h2",{id:"计数",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#计数","aria-hidden":"true"},"#"),(0,l.eW)(" 计数")],-1),dr={href:"https://q10viking.github.io/Algorithm/169%20%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0.html#%E6%9A%B4%E5%8A%9B%E8%A7%A3%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},Fr=(0,l.Lk)("h2",{id:"哈希表",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#哈希表","aria-hidden":"true"},"#"),(0,l.eW)(" 哈希表")],-1),vr={href:"https://q10viking.github.io/Algorithm/1%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"},Wr={href:"https://q10viking.github.io/Algorithm/76%20%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2.html#%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"},cr=(0,l.Lk)("h2",{id:"参考",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),(0,l.eW)(" 参考")],-1),Cr={href:"https://walkccc.me/LeetCode/",target:"_blank",rel:"noopener noreferrer"},_r={href:"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",target:"_blank",rel:"noopener noreferrer"},qr={href:"https://neetcode.io/roadmap",target:"_blank",rel:"noopener noreferrer"},Dr={href:"https://github.com/doocs/leetcode/",target:"_blank",rel:"noopener noreferrer"},xr={},Rr=(0,t(66262).A)(xr,[["render",function(e,r){const t=(0,l.g2)("OutboundLink");return(0,l.uX)(),(0,l.CE)(l.FK,null,[n,E,(0,l.Lk)("table",null,[i,(0,l.Lk)("tbody",null,[(0,l.Lk)("tr",null,[(0,l.Lk)("td",h,[(0,l.Lk)("a",o,[(0,l.eW)("寻找两正序数组的中位数"),(0,l.bF)(t)])]),a]),(0,l.Lk)("tr",null,[(0,l.Lk)("td",A,[(0,l.Lk)("a",k,[(0,l.eW)("LRU缓存机制"),(0,l.bF)(t)])]),g]),(0,l.Lk)("tr",null,[(0,l.Lk)("td",B,[(0,l.Lk)("a",b,[(0,l.eW)("合并K个升序链表"),(0,l.bF)(t)])]),p]),(0,l.Lk)("tr",null,[(0,l.Lk)("td",L,[(0,l.Lk)("a",u,[(0,l.eW)("每日温度"),(0,l.bF)(t)])]),f]),(0,l.Lk)("tr",null,[(0,l.Lk)("td",s,[(0,l.Lk)("a",m,[(0,l.eW)("柱状图中最大的矩形"),(0,l.bF)(t)])]),d]),F,v,W,c])]),C,_,(0,l.Lk)("p",null,[(0,l.Lk)("a",q,[(0,l.eW)("70 爬楼梯"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",D,[(0,l.eW)("LCR 126 斐波那契数"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",x,[(0,l.eW)("21 合并两个有序链表(❤ ω ❤)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",R,[(0,l.eW)("83 删除排序链表中的重复元素(❤ ω ❤)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",y,[(0,l.eW)("206 反转链表❤️"),(0,l.bF)(t)])]),I,w,(0,l.Lk)("ul",null,[(0,l.Lk)("li",null,[(0,l.Lk)("a",z,[(0,l.eW)("旅游规划"),(0,l.bF)(t)])]),(0,l.Lk)("li",null,[(0,l.Lk)("a",K,[(0,l.eW)("5 最长回文子串"),(0,l.bF)(t)])]),(0,l.Lk)("li",null,[(0,l.Lk)("a",M,[(0,l.eW)("leetcode-300"),(0,l.bF)(t)])]),(0,l.Lk)("li",null,[(0,l.Lk)("a",O,[(0,l.eW)("leetcode-416"),(0,l.bF)(t)])])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",N,[(0,l.eW)("53 最大子数组和❤"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",P,[(0,l.eW)("121 买卖股票的最佳时机❤"),(0,l.bF)(t)])]),S,(0,l.Lk)("p",null,[(0,l.Lk)("a",U,[(0,l.eW)("跳跃游戏"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",G,[(0,l.eW)("最大子数组和"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",H,[(0,l.eW)("根据身高重建队列"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",T,[(0,l.eW)("任务调度器"),(0,l.bF)(t)])]),V,(0,l.Lk)("p",null,[(0,l.Lk)("a",X,[(0,l.eW)("3 无重复字符的最长子串"),(0,l.bF)(t)]),(0,l.eW)(" (❤ ω ❤)")]),(0,l.Lk)("p",null,[(0,l.Lk)("a",j,[(0,l.eW)("76 最小覆盖子串 (❤ ω ❤)"),(0,l.bF)(t)])]),J,(0,l.Lk)("p",null,[(0,l.Lk)("a",Q,[(0,l.eW)("28 找出字符串中第一个匹配项的下标"),(0,l.bF)(t)])]),Y,(0,l.Lk)("p",null,[(0,l.Lk)("a",Z,[(0,l.eW)("228 汇总区间"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",$,[(0,l.eW)("165 比较版本号(❤ ω ❤)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",ee,[(0,l.eW)("283 移动零(❤ ω ❤)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",re,[(0,l.eW)("141 环形列表(快慢指针)(❤ ω ❤)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",te,[(0,l.eW)("160 相交链表(❤ ω ❤)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",le,[(0,l.eW)("876 链表的中间结点❤"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",ne,[(0,l.eW)("LCR 22 链表中倒数第k个节点❤"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Ee,[(0,l.eW)("11 盛最多水的容器❤"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",ie,[(0,l.eW)("15 三数之和 ❤"),(0,l.bF)(t)])]),he,(0,l.Lk)("p",null,[(0,l.Lk)("a",oe,[(0,l.eW)("136 只出现一次的数字"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",ae,[(0,l.eW)("338 比特位计数"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Ae,[(0,l.eW)("461 汉明距离"),(0,l.bF)(t)])]),ke,(0,l.Lk)("p",null,[(0,l.Lk)("a",ge,[(0,l.eW)("全排序"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Be,[(0,l.eW)("括号生成"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",be,[(0,l.eW)("电话号码组合"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",pe,[(0,l.eW)("子集"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Le,[(0,l.eW)("搜素单词"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",ue,[(0,l.eW)("组合总和"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",fe,[(0,l.eW)("1 两数之和"),(0,l.bF)(t)])]),se,me,(0,l.Lk)("p",null,[(0,l.Lk)("a",de,[(0,l.eW)("470 用 Rand7() 实现 Rand10()"),(0,l.bF)(t)])]),Fe,ve,(0,l.Lk)("p",null,[(0,l.Lk)("a",We,[(0,l.eW)("66 加一"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",ce,[(0,l.eW)("1 两数之和"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Ce,[(0,l.eW)("88 合并两个有序数组"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",_e,[(0,l.eW)("283 移动零(❤ ω ❤)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",qe,[(0,l.eW)("448 找到所有数组中消失的数字(❤ ω ❤)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",De,[(0,l.eW)("LCR 173 点名"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",xe,[(0,l.eW)("11 盛最多水的容器❤"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Re,[(0,l.eW)("15 三数之和 ❤"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",ye,[(0,l.eW)("31 下一个排列"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Ie,[(0,l.eW)("48 旋转图像"),(0,l.bF)(t)])]),we,(0,l.Lk)("p",null,[(0,l.Lk)("a",ze,[(0,l.eW)("21 合并两个有序链表"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Ke,[(0,l.eW)("83 删除排序链表中的重复元素"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Me,[(0,l.eW)("141 环形列表"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Oe,[(0,l.eW)("142 环形链表 II"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Ne,[(0,l.eW)("160 相交链表"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Pe,[(0,l.eW)("206 反转链表❤️"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Se,[(0,l.eW)("234 回文链表❤"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Ue,[(0,l.eW)("876 链表的中间结点"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Ge,[(0,l.eW)("LCR 22 链表中倒数第k个节点❤"),(0,l.bF)(t)])]),He,(0,l.Lk)("p",null,[(0,l.Lk)("a",Te,[(0,l.eW)("141 环形列表"),(0,l.bF)(t)])]),Ve,(0,l.Lk)("p",null,[(0,l.Lk)("a",Xe,[(0,l.eW)("151 反转字符串里的单词"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",je,[(0,l.eW)("232 用栈实现队列"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Je,[(0,l.eW)("394 字符串解码❤️"),(0,l.bF)(t)])]),Qe,(0,l.Lk)("p",null,[(0,l.Lk)("a",Ye,[(0,l.eW)("101 对称二叉树❤️"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Ze,[(0,l.eW)("104 二叉树的最大深度❤️"),(0,l.bF)(t)])]),$e,(0,l.Lk)("p",null,[(0,l.Lk)("a",er,[(0,l.eW)("58 最后一个单词的长度"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",rr,[(0,l.eW)("67 二进制求和"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",tr,[(0,l.eW)("8 字符串转换整数 (atoi)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",lr,[(0,l.eW)("394 字符串解码❤️"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",nr,[(0,l.eW)("415 字符串相加❤"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Er,[(0,l.eW)("20 有效括号"),(0,l.bF)(t)]),(0,l.eW)(" ❤")]),ir,(0,l.Lk)("p",null,[(0,l.Lk)("a",hr,[(0,l.eW)("94 二叉树的中序遍历"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",or,[(0,l.eW)("144 二叉树的前序遍历"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",ar,[(0,l.eW)("145 二叉树的后序遍历"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Ar,[(0,l.eW)("101 对称二叉树❤️"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",kr,[(0,l.eW)("104 二叉树的最大深度❤️"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",gr,[(0,l.eW)("110 平衡二叉树❤️"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Br,[(0,l.eW)("226 翻转二叉树❤️"),(0,l.bF)(t)])]),br,(0,l.Lk)("p",null,[(0,l.Lk)("a",pr,[(0,l.eW)("69 x的平方根"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Lr,[(0,l.eW)("33 搜索旋转排序数组"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",ur,[(0,l.eW)("34 在排序数组中查找元素的第一个和最后一个位置"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",fr,[(0,l.eW)("153 寻找旋转排序数组中的最小值"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",sr,[(0,l.eW)("240 搜索二维矩阵 II"),(0,l.bF)(t)])]),mr,(0,l.Lk)("p",null,[(0,l.Lk)("a",dr,[(0,l.eW)("169 多数元素"),(0,l.bF)(t)]),(0,l.eW)(" --\x3e 摩尔投票思路")]),Fr,(0,l.Lk)("p",null,[(0,l.Lk)("a",vr,[(0,l.eW)("1 两数之和"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Wr,[(0,l.eW)("76 最小覆盖子串 (❤ ω ❤)"),(0,l.bF)(t)])]),cr,(0,l.Lk)("p",null,[(0,l.Lk)("a",Cr,[(0,l.eW)("LeetCode Solutions (walkccc.me)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",_r,[(0,l.eW)("Data Structure Visualization (usfca.edu)"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",qr,[(0,l.eW)("Roadmap 刷题路线"),(0,l.bF)(t)])]),(0,l.Lk)("p",null,[(0,l.Lk)("a",Dr,[(0,l.eW)("GitHub - doocs/leetcode: 😏 LeetCode solutions in any programming language | 多种编程语言实现 LeetCode、《剑指 Offer（第 2 版）》、《程序员面试金典（第 6 版）》题解"),(0,l.bF)(t)])])],64)}]])},66262:(e,r)=>{r.A=(e,r)=>{const t=e.__vccOpts||e;for(const[e,l]of r)t[e]=l;return t}}}]);