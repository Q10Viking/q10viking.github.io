"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[13826],{9792:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-7105832b",path:"/netty/05%20Reactor%E6%A8%A1%E5%9E%8B.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/netty/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"单线程Reactor模式流程",slug:"单线程reactor模式流程",children:[]},{level:2,title:"单线程Reactor，工作者线程池",slug:"单线程reactor-工作者线程池",children:[]},{level:2,title:"多线程主从Reactor模式",slug:"多线程主从reactor模式",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"netty/05 Reactor模型.md"}},23880:(n,s,a)=>{a.r(s),a.d(s,{default:()=>y});var t=a(20641);const e={class:"custom-container tip"},p=(0,t.Lk)("p",{class:"custom-container-title"},"TIP",-1),c={href:"https://github.com/Q10Viking/learncode/tree/main/Netty/NIO/reactor/reactor/src/main/java/org/hzz/reactor",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Fv)('<h2 id="单线程reactor模式流程" tabindex="-1"><a class="header-anchor" href="#单线程reactor模式流程" aria-hidden="true">#</a> <strong>单线程Reactor模式流程</strong></h2><blockquote><p>Basic Reactor Design</p></blockquote><ul><li>服务器端的Reactor是一个线程对象，该线程会启动事件循环，并使用Selector(选择器)来实现IO的多路复用。注册一个Acceptor事件处理器到Reactor中，Acceptor事件处理器所关注的事件是ACCEPT事件，这样Reactor会监听客户端向服务器端发起的连接请求事件(ACCEPT事件)</li><li>客户端向服务器端发起一个连接请求，Reactor监听到了该ACCEPT事件的发生并将该ACCEPT事件派发给相应的Acceptor处理器来进行处理。Acceptor处理器通过accept()方法得到与这个客户端对应的连接(SocketChannel)，然后将该连接所关注的READ事件以及对应的READ事件处理器注册到Reactor中，这样一来Reactor就会监听该连接的READ事件了。</li><li>当Reactor监听到有读或者写事件发生时，将相关的事件派发给对应的处理器进行处理。比如，读处理器会通过SocketChannel的read()方法读取数据，此时read()操作可以直接读取到数据，而不会堵塞与等待可读的数据到来。</li><li>每当处理完所有就绪的感兴趣的I/O事件后，Reactor线程会再次执行select()阻塞等待新的事件就绪并将其分派给对应处理器进行处理</li></ul><blockquote><p>注意，Reactor的单线程模式的单线程主要是针对于I/O操作而言，也就是所有的I/O的accept()、read()、write()以及connect()操作都在一个线程上完成的</p></blockquote><p>但在目前的单线程Reactor模式中，不仅I/O操作在该Reactor线程上，连非I/O的业务操作也在该线程上进行处理了，这可能会大大延迟I/O请求的响应。所以我们应该将非I/O的业务逻辑操作从Reactor线程上卸载，以此来加速Reactor线程对I/O请求的响应</p><p><img src="/images/netty/10075.png" alt="https://note.youdao.com/yws/public/resource/8ef33654f746921ad769ad9fe91a4c8f/xmlnote/OFFICED5F6435B59444264B2E0B3F4A9FE3468/10075"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Reactor</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;Reactor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token constant">MAXIN</span> <span class="token operator">=</span> <span class="token number">65535</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token constant">MAXOUT</span> <span class="token operator">=</span> <span class="token number">65535</span><span class="token punctuation">;</span>\n    <span class="token keyword">final</span> <span class="token keyword">int</span> port<span class="token punctuation">;</span>\n    <span class="token keyword">final</span> <span class="token class-name">Selector</span> selector<span class="token punctuation">;</span>\n    <span class="token keyword">final</span> <span class="token class-name">ServerSocketChannel</span> serverSocketChannel<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Reactor</span><span class="token punctuation">(</span><span class="token keyword">int</span> port<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>port <span class="token operator">=</span> port<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>selector <span class="token operator">=</span> <span class="token class-name">Selector</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>serverSocketChannel <span class="token operator">=</span> <span class="token class-name">ServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>serverSocketChannel<span class="token punctuation">.</span><span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>serverSocketChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">SelectionKey</span> key <span class="token operator">=</span> serverSocketChannel<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        key<span class="token punctuation">.</span><span class="token function">interestOps</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span><span class="token punctuation">.</span><span class="token constant">OP_ACCEPT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        key<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Acceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Reactor started on port &quot;</span><span class="token operator">+</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// normally in a new Thread</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                selector<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">// ... deal with selected keys ...</span>\n                <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> selectionKeys <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">selectedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>selectionKeys<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;: selectionKeys is empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">continue</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;: selectionKeys size is &quot;</span><span class="token operator">+</span>selectionKeys<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> selectionKeys<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">while</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token function">dispatch</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token comment">//iterator.remove();</span>\n                <span class="token punctuation">}</span>\n                selectionKeys<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">void</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Runnable</span> r <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Runnable</span><span class="token punctuation">)</span> key<span class="token punctuation">.</span><span class="token function">attachment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Accept or Handler 都实现了Runnable接口</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            r<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">class</span> <span class="token class-name">Acceptor</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span>\n        <span class="token annotation punctuation">@Override</span>\n        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> serverSocketChannel<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>socketChannel <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;accept a new connection&quot;</span><span class="token operator">+</span>socketChannel<span class="token punctuation">.</span><span class="token function">getRemoteAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> socketChannel<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">/*...*/</span><span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Handler</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span>\n        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">READING</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">SENDING</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token constant">READING</span><span class="token punctuation">;</span>\n        <span class="token keyword">final</span> <span class="token class-name">SocketChannel</span> socketChannel<span class="token punctuation">;</span>\n        <span class="token keyword">final</span> <span class="token class-name">SelectionKey</span> selectionKey<span class="token punctuation">;</span>\n        <span class="token class-name">ByteBuffer</span> input <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token constant">MAXIN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ByteBuffer</span> output <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token constant">MAXOUT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token class-name">Selector</span> selector<span class="token punctuation">,</span> <span class="token class-name">SocketChannel</span> socketChannel<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>socketChannel <span class="token operator">=</span> socketChannel<span class="token punctuation">;</span>\n            socketChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            selectionKey <span class="token operator">=</span> socketChannel<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            selectionKey<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            selectionKey<span class="token punctuation">.</span><span class="token function">interestOps</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span><span class="token punctuation">.</span><span class="token constant">OP_READ</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            selector<span class="token punctuation">.</span><span class="token function">wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token annotation punctuation">@Override</span>\n        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token constant">READING</span><span class="token punctuation">)</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token constant">SENDING</span><span class="token punctuation">)</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n            <span class="token comment">// ... read data ...</span>\n            socketChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isInputComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                state <span class="token operator">=</span> <span class="token constant">SENDING</span><span class="token punctuation">;</span>\n                selectionKey<span class="token punctuation">.</span><span class="token function">interestOps</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span><span class="token punctuation">.</span><span class="token constant">OP_WRITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">void</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n            <span class="token comment">// ... send data ...</span>\n            output<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;hello client&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            output<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            socketChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            state <span class="token operator">=</span> <span class="token constant">READING</span><span class="token punctuation">;</span>\n            selectionKey<span class="token punctuation">.</span><span class="token function">interestOps</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span><span class="token punctuation">.</span><span class="token constant">OP_READ</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isOutputComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;关闭&quot;</span><span class="token operator">+</span>socketChannel<span class="token punctuation">.</span><span class="token function">getRemoteAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                selectionKey<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                socketChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">boolean</span> <span class="token function">isInputComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">boolean</span> <span class="token function">isOutputComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n            <span class="token comment">// ... process data ...</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                input<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>input<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n                input<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;: read data is &quot;</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                input<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br></div></div><blockquote><p>重构版</p></blockquote>',8),k=(0,t.Lk)("div",{class:"language-java ext-java line-numbers-mode"},[(0,t.Lk)("pre",{class:"language-java"},[(0,t.Lk)("code",null,[(0,t.Lk)("span",{class:"token doc-comment comment"},"/**\n * Basic Reactor Design\n */"),(0,t.eW)("\n"),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"BasicReactor"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"extends"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Reactor"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ServerSocketChannel"),(0,t.eW)(" serverSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"volatile"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"boolean"),(0,t.eW)(" started "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token boolean"},"false"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"BasicReactor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" port"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        serverSocketChannel "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ServerSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token keyword"},"open"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        serverSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"bind"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"InetSocketAddress"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("port"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        serverSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"configureBlocking"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token boolean"},"false"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        serverSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"register"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("selector"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"OP_ACCEPT"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token function"},"getAcceptor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        started "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token boolean"},"true"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        logger"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"Server started at port: "'),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.eW)("port"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Acceptor"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"getAcceptor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Acceptor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"main"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"String"),(0,t.Lk)("span",{class:"token punctuation"},"["),(0,t.Lk)("span",{class:"token punctuation"},"]"),(0,t.eW)(" args"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"BasicReactor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token number"},"8080"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Acceptor"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"implements"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Runnable"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"try"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token class-name"},"SocketChannel"),(0,t.eW)(" socketChannel "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" serverSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"accept"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                logger"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"客户端连接"'),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getRemoteAddress"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token function"},"getHandler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token keyword"},"catch"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(" e"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"getHandler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SocketChannel"),(0,t.eW)(" socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"implements"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Runnable"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"MAXIN"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"65535"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"MAXOUT"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"65535"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"READING"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"0"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"SENDING"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"1"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"SocketChannel"),(0,t.eW)(" socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.eW)(" selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token class-name"},"ByteBuffer"),(0,t.eW)(" input "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ByteBuffer"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"allocate"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"MAXIN"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token class-name"},"ByteBuffer"),(0,t.eW)(" output "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ByteBuffer"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"allocate"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"MAXOUT"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" state "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"READING"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SocketChannel"),(0,t.eW)(" socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("socketChannel "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"configureBlocking"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token boolean"},"false"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            selectionKey "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"register"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("selector"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"0"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token function"},"registerHandler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"registerHandler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"interestOps"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"OP_READ"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"attach"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            selector"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"wakeup"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"try"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("state "),(0,t.Lk)("span",{class:"token operator"},"=="),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"READING"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"read"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token keyword"},"else"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("state "),(0,t.Lk)("span",{class:"token operator"},"=="),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"SENDING"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"send"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token keyword"},"catch"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(" e"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"read"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"// ... read data ..."),(0,t.eW)("\n            socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"read"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("input"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token function"},"isInputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token function"},"process"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                state "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"SENDING"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"interestOps"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"OP_WRITE"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"send"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"// ... send data ..."),(0,t.eW)("\n            output"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"put"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"hello client"'),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getBytes"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"StandardCharsets"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"UTF_8"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            output"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"flip"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"write"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("output"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            state "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"READING"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"interestOps"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"OP_READ"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token function"},"isOutputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                logger"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"Thread"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"currentThread"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getName"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.Lk)("span",{class:"token string"},'"关闭"'),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getRemoteAddress"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                output"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"clear"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"cancel"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"close"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"boolean"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"isInputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token boolean"},"true"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"boolean"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"isOutputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token boolean"},"true"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"process"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"// ... process data ..."),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("input"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"position"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},">"),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"0"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                input"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"flip"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token keyword"},"byte"),(0,t.Lk)("span",{class:"token punctuation"},"["),(0,t.Lk)("span",{class:"token punctuation"},"]"),(0,t.eW)(" bytes "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"byte"),(0,t.Lk)("span",{class:"token punctuation"},"["),(0,t.eW)("input"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"limit"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"]"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                input"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"get"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("bytes"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                logger"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"Thread"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"currentThread"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getName"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.Lk)("span",{class:"token string"},'": read data is "'),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"String"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("bytes"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"StandardCharsets"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"UTF_8"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                input"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"clear"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n")])]),(0,t.Lk)("div",{class:"line-numbers"},[(0,t.Lk)("span",{class:"line-number"},"1"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"2"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"3"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"4"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"5"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"6"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"7"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"8"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"9"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"10"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"11"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"12"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"13"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"14"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"15"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"16"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"17"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"18"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"19"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"20"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"21"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"22"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"23"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"24"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"25"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"26"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"27"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"28"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"29"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"30"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"31"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"32"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"33"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"34"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"35"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"36"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"37"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"38"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"39"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"40"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"41"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"42"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"43"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"44"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"45"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"46"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"47"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"48"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"49"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"50"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"51"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"52"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"53"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"54"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"55"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"56"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"57"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"58"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"59"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"60"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"61"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"62"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"63"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"64"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"65"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"66"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"67"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"68"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"69"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"70"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"71"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"72"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"73"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"74"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"75"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"76"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"77"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"78"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"79"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"80"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"81"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"82"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"83"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"84"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"85"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"86"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"87"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"88"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"89"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"90"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"91"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"92"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"93"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"94"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"95"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"96"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"97"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"98"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"99"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"100"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"101"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"102"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"103"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"104"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"105"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"106"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"107"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"108"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"109"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"110"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"111"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"112"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"113"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"114"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"115"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"116"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"117"),(0,t.Lk)("br")])],-1),l=(0,t.Lk)("div",{class:"language-java ext-java line-numbers-mode"},[(0,t.Lk)("pre",{class:"language-java"},[(0,t.Lk)("code",null,[(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"abstract"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Reactor"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"implements"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Runnable"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Logger"),(0,t.eW)(" logger "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Logger"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getLogger"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"Reactor"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getName"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Selector"),(0,t.eW)(" selector"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Reactor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("selector "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Selector"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token keyword"},"open"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"try"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"while"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token operator"},"!"),(0,t.Lk)("span",{class:"token class-name"},"Thread"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"interrupted"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token function"},"doSelect"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token class-name"},"Iterator"),(0,t.Lk)("span",{class:"token generics"},[(0,t.Lk)("span",{class:"token punctuation"},"<"),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.Lk)("span",{class:"token punctuation"},">")]),(0,t.eW)(" iterator "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" selector"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"selectedKeys"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"iterator"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token keyword"},"while"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("iterator"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"hasNext"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                    "),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.eW)(" key "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" iterator"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"next"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                    iterator"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"remove"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                    "),(0,t.Lk)("span",{class:"token function"},"dispatch"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("key"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token keyword"},"catch"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(" e"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            e"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"printStackTrace"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"doSelect"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(" selector"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"select"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"dispatch"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.eW)(" key"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token class-name"},"Runnable"),(0,t.eW)(" task "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"Runnable"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(" key"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"attachment"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("task "),(0,t.Lk)("span",{class:"token operator"},"!="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"null"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(" task"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n")])]),(0,t.Lk)("div",{class:"line-numbers"},[(0,t.Lk)("span",{class:"line-number"},"1"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"2"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"3"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"4"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"5"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"6"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"7"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"8"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"9"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"10"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"11"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"12"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"13"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"14"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"15"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"16"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"17"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"18"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"19"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"20"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"21"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"22"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"23"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"24"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"25"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"26"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"27"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"28"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"29"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"30"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"31"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"32"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"33"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"34"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"35"),(0,t.Lk)("br")])],-1),u=(0,t.Fv)('<h2 id="单线程reactor-工作者线程池" tabindex="-1"><a class="header-anchor" href="#单线程reactor-工作者线程池" aria-hidden="true">#</a> <strong>单线程Reactor，工作者线程池</strong></h2><blockquote><p>WorkerThread Pools</p></blockquote><p>单线程Reactor模式不同的是，添加了一个工作者线程池，并将非I/O操作从Reactor线程中移出转交给工作者线程池来执行。这样能够提高Reactor线程的I/O响应，不至于因为一些耗时的业务逻辑而延迟对后面I/O请求的处理</p><p><img src="/images/netty/10076" alt="https://note.youdao.com/yws/public/resource/8ef33654f746921ad769ad9fe91a4c8f/xmlnote/OFFICE4A2F9D2C8A8F4220BB69B68DC0E3AFCD/10076"></p><blockquote><p>多线程应用的位置主要体现在读取完一个客户端的完整请求之后，将这个请求任务提交给线程池去处理</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Handler</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>\n    <span class="token comment">// uses util.concurrent thread pool</span>\n    <span class="token keyword">static</span> <span class="token class-name">PooledExecutor</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PooledExecutor</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">PROCESSING</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n    <span class="token comment">// ...</span>\n    <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// ...</span>\n        socket<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">inputIsComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            state <span class="token operator">=</span> <span class="token constant">PROCESSING</span><span class="token punctuation">;</span>\n            pool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Processer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">processAndHandOff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        state <span class="token operator">=</span> <span class="token constant">SENDING</span><span class="token punctuation">;</span> <span class="token comment">// or rebind attachment</span>\n        sk<span class="token punctuation">.</span><span class="token function">interest</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span><span class="token punctuation">.</span><span class="token constant">OP_WRITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">class</span> <span class="token class-name">Processer</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>\n        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">processAndHandOff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><blockquote><p>实现: 注意主线成在处理完读之后就回到了selector.select()的阻塞状态。当线程池处理完请求之后，在改变selectionkey的感兴趣的事件的时候，selector是不会响应的，需要wakeup</p></blockquote>',7),i=(0,t.Lk)("div",{class:"language-java ext-java line-numbers-mode"},[(0,t.Lk)("pre",{class:"language-java"},[(0,t.Lk)("code",null,[(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"WorkerThreadPoolRector"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"extends"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"BasicReactor"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ExecutorService"),(0,t.eW)(" threadPools "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Executors"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"newFixedThreadPool"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token class-name"},"Runtime"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getRuntime"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"availableProcessors"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"*"),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"4"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"WorkerThreadPoolRector"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" port"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"super"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("port"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Acceptor"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"getAcceptor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Acceptor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"main"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"String"),(0,t.Lk)("span",{class:"token punctuation"},"["),(0,t.Lk)("span",{class:"token punctuation"},"]"),(0,t.eW)(" args"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Thread"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"WorkerThreadPoolRector"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token number"},"8080"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"start"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Acceptor"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"extends"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},[(0,t.eW)("BasicReactor"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("Acceptor")]),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"getHandler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SocketChannel"),(0,t.eW)(" socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"extends"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},[(0,t.eW)("BasicReactor"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("Handler")]),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SocketChannel"),(0,t.eW)(" socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"super"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"synchronized"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"processAndHandOff"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"super"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"process"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token function"},"setState"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"SENDING"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"interestOps"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"OP_WRITE"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"// 唤醒selector,让其处理发送事件,不然的话，selector一直处于阻塞状态。上面的是select已经阻塞了"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"// 而线程池处理到这里的时候,才刚刚注册OP_WRITE,selector还是阻塞的，所以需要唤醒"),(0,t.eW)("\n            selector"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"wakeup"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"onInputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token function"},"setState"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"PROCESSING"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"// 读取完毕，交给线程池处理"),(0,t.eW)("\n            threadPools"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"execute"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Processer"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Processer"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"implements"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Runnable"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.Lk)("span",{class:"token function"},"processAndHandOff"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n")])]),(0,t.Lk)("div",{class:"line-numbers"},[(0,t.Lk)("span",{class:"line-number"},"1"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"2"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"3"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"4"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"5"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"6"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"7"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"8"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"9"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"10"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"11"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"12"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"13"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"14"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"15"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"16"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"17"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"18"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"19"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"20"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"21"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"22"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"23"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"24"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"25"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"26"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"27"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"28"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"29"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"30"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"31"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"32"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"33"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"34"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"35"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"36"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"37"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"38"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"39"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"40"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"41"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"42"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"43"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"44"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"45"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"46"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"47"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"48"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"49"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"50"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"51"),(0,t.Lk)("br")])],-1),r=(0,t.Lk)("div",{class:"language-java ext-java line-numbers-mode"},[(0,t.Lk)("pre",{class:"language-java"},[(0,t.Lk)("code",null,[(0,t.Lk)("span",{class:"token doc-comment comment"},"/**\n * Basic Reactor Design\n */"),(0,t.eW)("\n"),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"BasicReactor"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"extends"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Reactor"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ServerSocketChannel"),(0,t.eW)(" serverSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"volatile"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"boolean"),(0,t.eW)(" started "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token boolean"},"false"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"BasicReactor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" port"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        serverSocketChannel "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ServerSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token keyword"},"open"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        serverSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"bind"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"InetSocketAddress"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("port"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        serverSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"configureBlocking"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token boolean"},"false"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        serverSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"register"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("selector"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"OP_ACCEPT"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token function"},"getAcceptor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        started "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token boolean"},"true"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        logger"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"Server started at port: "'),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.eW)("port"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Acceptor"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"getAcceptor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Acceptor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"main"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"String"),(0,t.Lk)("span",{class:"token punctuation"},"["),(0,t.Lk)("span",{class:"token punctuation"},"]"),(0,t.eW)(" args"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"BasicReactor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token number"},"8080"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Acceptor"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"implements"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Runnable"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"try"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token class-name"},"SocketChannel"),(0,t.eW)(" socketChannel "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" serverSocketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"accept"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                logger"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"客户端连接"'),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getRemoteAddress"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token function"},"getHandler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token keyword"},"catch"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(" e"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"getHandler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SocketChannel"),(0,t.eW)(" socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"implements"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Runnable"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"MAXIN"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"65535"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"MAXOUT"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"65535"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"READING"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"0"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"SENDING"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"1"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"PROCESSING"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"2"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"SocketChannel"),(0,t.eW)(" socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"protected"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.eW)(" selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token class-name"},"ByteBuffer"),(0,t.eW)(" input "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ByteBuffer"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"allocate"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"MAXIN"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token class-name"},"ByteBuffer"),(0,t.eW)(" output "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ByteBuffer"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"allocate"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"MAXOUT"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"volatile"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" state "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"READING"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Handler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SocketChannel"),(0,t.eW)(" socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("socketChannel "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"configureBlocking"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token boolean"},"false"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            selectionKey "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"register"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("selector"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"0"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token function"},"registerHandler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"registerHandler"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"interestOps"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"OP_READ"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"attach"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            selector"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"wakeup"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"try"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("state "),(0,t.Lk)("span",{class:"token operator"},"=="),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"READING"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"read"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token keyword"},"else"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("state "),(0,t.Lk)("span",{class:"token operator"},"=="),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"SENDING"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"send"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token keyword"},"catch"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(" e"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"read"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"// ... read data ..."),(0,t.eW)("\n            socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"read"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("input"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token function"},"isInputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token function"},"onInputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"onInputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"// ... do something ..."),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token function"},"process"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token function"},"setState"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"SENDING"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"interestOps"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"OP_WRITE"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"send"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"throws"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"IOException"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"// ... send data ..."),(0,t.eW)("\n            output"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"put"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"hello client"'),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getBytes"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"StandardCharsets"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"UTF_8"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            output"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"flip"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"write"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("output"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token function"},"setState"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"READING"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"interestOps"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"SelectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"OP_READ"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token function"},"isOutputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                logger"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"Thread"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"currentThread"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getName"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.Lk)("span",{class:"token string"},'"关闭"'),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.eW)("socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getRemoteAddress"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                output"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"clear"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                selectionKey"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"cancel"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                socketChannel"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"close"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"boolean"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"isInputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token boolean"},"true"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"boolean"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"isOutputComplete"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token boolean"},"true"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"process"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"// ... process data ..."),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("input"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"position"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},">"),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"0"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                input"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"flip"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token keyword"},"byte"),(0,t.Lk)("span",{class:"token punctuation"},"["),(0,t.Lk)("span",{class:"token punctuation"},"]"),(0,t.eW)(" bytes "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"byte"),(0,t.Lk)("span",{class:"token punctuation"},"["),(0,t.eW)("input"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"limit"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"]"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                input"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"get"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("bytes"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                logger"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"Thread"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"currentThread"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getName"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.Lk)("span",{class:"token string"},'": read data is "'),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"String"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("bytes"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"StandardCharsets"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token constant"},"UTF_8"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                input"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"clear"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"setState"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" state"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("state "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" state"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n")])]),(0,t.Lk)("div",{class:"line-numbers"},[(0,t.Lk)("span",{class:"line-number"},"1"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"2"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"3"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"4"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"5"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"6"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"7"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"8"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"9"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"10"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"11"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"12"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"13"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"14"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"15"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"16"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"17"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"18"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"19"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"20"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"21"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"22"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"23"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"24"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"25"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"26"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"27"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"28"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"29"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"30"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"31"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"32"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"33"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"34"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"35"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"36"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"37"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"38"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"39"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"40"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"41"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"42"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"43"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"44"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"45"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"46"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"47"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"48"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"49"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"50"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"51"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"52"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"53"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"54"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"55"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"56"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"57"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"58"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"59"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"60"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"61"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"62"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"63"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"64"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"65"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"66"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"67"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"68"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"69"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"70"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"71"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"72"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"73"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"74"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"75"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"76"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"77"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"78"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"79"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"80"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"81"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"82"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"83"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"84"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"85"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"86"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"87"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"88"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"89"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"90"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"91"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"92"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"93"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"94"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"95"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"96"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"97"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"98"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"99"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"100"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"101"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"102"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"103"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"104"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"105"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"106"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"107"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"108"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"109"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"110"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"111"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"112"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"113"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"114"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"115"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"116"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"117"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"118"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"119"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"120"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"121"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"122"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"123"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"124"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"125"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"126"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"127"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"128"),(0,t.Lk)("br")])],-1),L=(0,t.Fv)('<blockquote><p>当NIO线程负载过重之后，处理速度将变慢，这会导致大量客户端连接超时，超时之后往往会进行重发，这更加重了NIO线程的负载，最终会导致大量消息积压和处理超时，成为系统的性能瓶颈</p></blockquote><h2 id="多线程主从reactor模式" tabindex="-1"><a class="header-anchor" href="#多线程主从reactor模式" aria-hidden="true">#</a> <strong>多线程主从Reactor模式</strong></h2><blockquote><p>Using Multiple Reactors</p></blockquote><blockquote><p>mainReactor可以只有一个，但subReactor一般会有多个。mainReactor线程主要负责接收客户端的连接请求，然后将接收到的SocketChannel传递给subReactor，由subReactor来完成和客户端的通信</p></blockquote><p><img src="/images/netty/10077.png" alt="https://note.youdao.com/yws/public/resource/8ef33654f746921ad769ad9fe91a4c8f/xmlnote/OFFICE051C61BA01BD49428FE89212C4FABA34/10077"></p><ol><li>注册一个Acceptor事件处理器到mainReactor中，Acceptor事件处理器所关注的事件是ACCEPT事件，这样mainReactor会监听客户端向服务器端发起的连接请求事件(ACCEPT事件)。启动mainReactor的事件循环</li><li>客户端向服务器端发起一个连接请求，mainReactor监听到了该ACCEPT事件并将该ACCEPT事件派发给Acceptor处理器来进行处理。Acceptor处理器通过accept()方法得到与这个客户端对应的连接(SocketChannel)，然后将这个SocketChannel传递给subReactor线程池。</li><li>subReactor线程池分配一个subReactor线程给这个SocketChannel，即，将SocketChannel关注的READ事件以及对应的READ事件处理器注册到subReactor线程中。当然你也注册WRITE事件以及WRITE事件处理器到subReactor线程中以完成I/O写操作。<strong>Reactor线程池中的每一Reactor线程都会有自己的Selector、线程和分发的循环逻辑</strong></li><li>当有I/O事件就绪时，相关的subReactor就将事件派发给响应的处理器处理。注意，这里subReactor线程只负责完成I/O的read()操作，在读取到数据后将业务逻辑的处理放入到线程池中完成，若完成业务逻辑后需要返回数据给客户端，则相关的I/O的write操作还是会被提交回subReactor线程来完成。</li></ol><blockquote><p>多Reactor线程模式将“接受客户端的连接请求”和“与该客户端的通信”分在了两个Reactor线程来完成。mainReactor完成接收客户端连接请求的操作，它不负责与客户端的通信，而是将建立好的连接转交给subReactor线程来完成与客户端的通信，这样一来就不会因为read()数据量太大而导致后面的客户端连接请求得不到即时处理的情况。并且多Reactor线程模式在海量的客户端并发请求的情况下，还可以通过实现subReactor线程池来将海量的连接分发给多个subReactor线程，在多核的操作系统中这能大大提升应用的负载和吞吐量</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Selector</span><span class="token punctuation">[</span><span class="token punctuation">]</span> selectors<span class="token punctuation">;</span> <span class="token comment">// also create threads</span>\n<span class="token keyword">int</span> next <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">Acceptor</span> <span class="token punctuation">{</span> <span class="token comment">// ...</span>\n    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n        <span class="token class-name">Socket</span> connection <span class="token operator">=</span> serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n         <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>\n            <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span>selectors<span class="token punctuation">[</span>next<span class="token punctuation">]</span><span class="token punctuation">,</span> connection<span class="token punctuation">)</span><span class="token punctuation">;</span>\n         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>next <span class="token operator">==</span> selectors<span class="token punctuation">.</span>length<span class="token punctuation">)</span> next <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>实现: 其实subReactor就是seletor</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MultipleReactor</span> <span class="token keyword">extends</span> <span class="token class-name">WorkerThreadPoolRector</span><span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Reactor</span><span class="token punctuation">[</span><span class="token punctuation">]</span> subReactors<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ExecutorService</span> reactorPool<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">MultipleReactor</span><span class="token punctuation">(</span><span class="token keyword">int</span> port<span class="token punctuation">,</span> <span class="token keyword">int</span> subReactorNum<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        reactorPool <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span>subReactorNum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        subReactors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Reactor</span><span class="token punctuation">[</span>subReactorNum<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> subReactorNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            subReactors<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubReactor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Reactor</span> subReactor <span class="token operator">:</span> subReactors<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            reactorPool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>subReactor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">// 主Reactor</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">Acceptor</span> <span class="token function">getAcceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Acceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Reactor</span> <span class="token function">robinSubReactor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">int</span> index <span class="token operator">=</span> next<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> subReactors<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;subReactor index: &quot;</span> <span class="token operator">+</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> subReactors<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MultipleReactor</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">class</span> <span class="token class-name">Acceptor</span> <span class="token keyword">extends</span> <span class="token class-name">WorkerThreadPoolRector<span class="token punctuation">.</span>Acceptor</span><span class="token punctuation">{</span>\n        <span class="token annotation punctuation">@Override</span>\n        <span class="token keyword">public</span> <span class="token class-name">Handler</span> <span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token class-name">SocketChannel</span> socketChannel<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 轮询获取subReactor</span>\n            <span class="token class-name">Reactor</span> subReactor <span class="token operator">=</span> <span class="token function">robinSubReactor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// 关键地方，将socketChannel注册到subReactor上</span>\n            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span>subReactor<span class="token punctuation">,</span>socketChannel<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">class</span> <span class="token class-name">Handler</span> <span class="token keyword">extends</span> <span class="token class-name">WorkerThreadPoolRector<span class="token punctuation">.</span>Handler</span><span class="token punctuation">{</span>\n        <span class="token keyword">public</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token class-name">Reactor</span> reactor<span class="token punctuation">,</span><span class="token class-name">SocketChannel</span> socketChannel<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n            <span class="token keyword">super</span><span class="token punctuation">(</span>reactor<span class="token punctuation">,</span> socketChannel<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token annotation punctuation">@Override</span>\n        <span class="token keyword">void</span> <span class="token function">registerHandler</span><span class="token punctuation">(</span><span class="token class-name">Reactor</span> reactor<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n            <span class="token class-name">SubReactor</span> subReactor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SubReactor</span><span class="token punctuation">)</span> reactor<span class="token punctuation">;</span>\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                subReactor<span class="token punctuation">.</span>lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                reactor<span class="token punctuation">.</span><span class="token function">getSelector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 唤醒selector,让selector释放持有的锁，方便注册</span>\n                <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">registerHandler</span><span class="token punctuation">(</span>reactor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>\n                subReactor<span class="token punctuation">.</span>lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">class</span> <span class="token class-name">SubReactor</span> <span class="token keyword">extends</span> <span class="token class-name">Reactor</span><span class="token punctuation">{</span>\n        <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">public</span> <span class="token class-name">SubReactor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token annotation punctuation">@Override</span>\n        <span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">doSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n            lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 注册的时候会加锁,所以想要selector需要确定没有注册的时候才能select</span>\n            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 立即释放是因为selector.select()会阻塞</span>\n            <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">doSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><blockquote><p>输出</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>四月 <span class="token number">11</span>, <span class="token number">2023</span> <span class="token number">12</span>:49:14 上午 org.hzz.reactor.BasicReactor<span class="token variable">$Acceptor</span> run\n信息: 客户端连接/127.0.0.1:9935\n四月 <span class="token number">11</span>, <span class="token number">2023</span> <span class="token number">12</span>:49:14 上午 org.hzz.reactor.MultipleReactor robinSubReactor\n信息: subReactor index: <span class="token number">0</span>\n四月 <span class="token number">11</span>, <span class="token number">2023</span> <span class="token number">12</span>:49:25 上午 org.hzz.reactor.BasicReactor<span class="token variable">$Acceptor</span> run\n信息: 客户端连接/127.0.0.1:9943\n四月 <span class="token number">11</span>, <span class="token number">2023</span> <span class="token number">12</span>:49:25 上午 org.hzz.reactor.MultipleReactor robinSubReactor\n信息: subReactor index: <span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',13),b={href:"http://www.heartthinkdo.com/?p=2241",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.shadowland.cn/java/2018/10/06/NIO-Multiple-Reactors/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://gee.cs.oswego.edu/dl/cpjslides/nio.pdf",target:"_blank",rel:"noopener noreferrer"},W={},y=(0,a(66262).A)(W,[["render",function(n,s){const a=(0,t.g2)("OutboundLink"),W=(0,t.g2)("CodeGroupItem"),y=(0,t.g2)("CodeGroup");return(0,t.uX)(),(0,t.CE)(t.FK,null,[(0,t.Lk)("div",e,[p,(0,t.Lk)("p",null,[(0,t.Lk)("a",c,[(0,t.eW)("Source Code"),(0,t.bF)(a)])])]),o,(0,t.bF)(y,null,{default:(0,t.k6)((()=>[(0,t.bF)(W,{title:"BasicReactor"},{default:(0,t.k6)((()=>[k])),_:1}),(0,t.bF)(W,{title:"Reactor"},{default:(0,t.k6)((()=>[l])),_:1})])),_:1}),u,(0,t.bF)(y,null,{default:(0,t.k6)((()=>[(0,t.bF)(W,{title:"WorkerThreadPoolRector"},{default:(0,t.k6)((()=>[i])),_:1}),(0,t.bF)(W,{title:"BasicReactor"},{default:(0,t.k6)((()=>[r])),_:1})])),_:1}),L,(0,t.Lk)("p",null,[(0,t.Lk)("a",b,[(0,t.eW)("Java NIO与Reactor – Heart.Think.Do (heartthinkdo.com)"),(0,t.bF)(a)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",m,[(0,t.eW)("NIO - Multiple Reactors 模型 | 多巴胺的小站 (shadowland.cn)"),(0,t.bF)(a)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",d,[(0,t.eW)("nio.pdf (oswego.edu)"),(0,t.bF)(a)])])],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);