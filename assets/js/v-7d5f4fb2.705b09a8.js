"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[5262],{84720:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-7d5f4fb2",path:"/springmvc/05%20%E8%8E%B7%E5%8F%96HttpServletRequest%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/springmvc/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"区别",slug:"区别",children:[]}],filePathRelative:"springmvc/05 获取HttpServletRequest的三种方式.md"}},35920:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var t=a(20641);const e=(0,t.Lk)("ol",null,[(0,t.Lk)("li",null,"@autowired"),(0,t.Lk)("li",null,"方法参数"),(0,t.Lk)("li",null,"RequestContextHolder")],-1),p={href:"https://github.com/Q10Viking/learncode/blob/main/ddd/multi-layers/src/main/java/org/hzz/controller/TestController.java",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token keyword">implements</span> <span class="token class-name">TestApi</span><span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;测试request属性注入与方法参数注入&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>responseCode <span class="token operator">=</span> <span class="token string">&quot;200&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;测试request属性注入与方法参数注入&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/request&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> methodParamRequest<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">HttpServletRequest</span> contextRequest <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>request <span class="token operator">==</span> methodParamRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>request <span class="token operator">==</span> contextRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>methodParamRequest <span class="token operator">==</span> contextRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>\n                <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>\n                        <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;request: %s, methodParamRequest: %s, contextRequest: %s&quot;</span><span class="token punctuation">,</span>\n                                <span class="token keyword">this</span><span class="token punctuation">.</span>request<span class="token punctuation">,</span> methodParamRequest<span class="token punctuation">,</span> contextRequest<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;request == methodParamRequest: %s, &quot;</span> <span class="token operator">+</span>\n                                <span class="token string">&quot;request == contextRequest: %s, &quot;</span> <span class="token operator">+</span>\n                                <span class="token string">&quot;methodParamRequest == contextRequest: %s&quot;</span><span class="token punctuation">,</span>\n                                <span class="token keyword">this</span><span class="token punctuation">.</span>request <span class="token operator">==</span> methodParamRequest<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>request <span class="token operator">==</span> contextRequest<span class="token punctuation">,</span>methodParamRequest <span class="token operator">==</span> contextRequest<span class="token punctuation">)</span>\n                <span class="token punctuation">)</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><blockquote><p>输出</p></blockquote><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;200&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&quot;request: Current HttpServletRequest, methodParamRequest: org.apache.catalina.connector.RequestFacade@b41e134, contextRequest: org.apache.catalina.connector.RequestFacade@b41e134&quot;</span><span class="token punctuation">,</span>\n        <span class="token string">&quot;request == methodParamRequest: false, request == contextRequest: false, methodParamRequest == contextRequest: true&quot;</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h2>',4),c={href:"https://blog.csdn.net/f641385712/article/details/104579949",target:"_blank",rel:"noopener noreferrer"},u=(0,t.Lk)("p",null,"属性注入的是一个代理类。底层是通过RequestContextHolder获取的，所以不会有安全问题",-1),l=(0,t.Lk)("p",null,[(0,t.Lk)("img",{src:"/images/springboot/image-20230523231151252.png",alt:"image-20230523231151252"})],-1),r={},i=(0,a(66262).A)(r,[["render",function(n,s){const a=(0,t.g2)("OutboundLink");return(0,t.uX)(),(0,t.CE)(t.FK,null,[e,(0,t.Lk)("p",null,[(0,t.Lk)("a",p,[(0,t.eW)("Source Code"),(0,t.bF)(a)])]),o,(0,t.Lk)("p",null,[(0,t.eW)("参考"),(0,t.Lk)("a",c,[(0,t.eW)("Spring注入的成员属性HttpServletRequest是线程安全的吗"),(0,t.bF)(a)]),(0,t.eW)("，里面有关于属性注入为request代理的代码分析")]),u,l],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);