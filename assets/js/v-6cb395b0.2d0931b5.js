"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[25644],{64898:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-6cb395b0",path:"/Docker/05%20%E5%AE%89%E8%A3%85MySQL.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Docker/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"安装MySQL",slug:"安装mysql",children:[]},{level:2,title:"Java代码测试",slug:"java代码测试",children:[]}],filePathRelative:"Docker/05 安装MySQL.md"}},89294:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(20641).Fv)('<h2 id="安装mysql" tabindex="-1"><a class="header-anchor" href="#安装mysql" aria-hidden="true">#</a> 安装MySQL</h2><blockquote><p>用Docker Desktop来操作非常方便</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 拉取镜像</span>\n<span class="token function">docker</span> pull mysql:8.0.32\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在Docker Desktop中设置镜像启动的环境变量,待会登录的时候用于使用</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-e MYSQL_ROOT_PASSWORD=Root.123456\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="/images/Docker/image-20230522225615217.png" alt="image-20230522225615217"></p><p>打开终端</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 第一次登陆为root用户设置一个密码</span>\nmysql <span class="token operator">-</span>u root <span class="token operator">-</span>p\n<span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;localhost&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;Root.123456&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">#添加远程登录用户</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;hzz&#39;</span><span class="token variable">@&#39;%&#39;</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">&#39;Root.123456&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;hzz&#39;</span><span class="token variable">@&#39;%&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>接下来就可以使用Navicat连接MySQL了</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> status\n--------------\nmysql  Ver <span class="token number">8.0</span>.32 <span class="token keyword">for</span> Linux on x86_64 <span class="token punctuation">(</span>MySQL Community Server - GPL<span class="token punctuation">)</span>\n\nConnection id:          <span class="token number">14</span>\nCurrent database:\nCurrent user:           root@localhost\nSSL:                    Not <span class="token keyword">in</span> use\nCurrent pager:          stdout\nUsing outfile:          <span class="token string">&#39;&#39;</span>\nUsing delimiter:        <span class="token punctuation">;</span>\nServer version:         <span class="token number">8.0</span>.32 MySQL Community Server - GPL\nProtocol version:       <span class="token number">10</span>\nConnection:             Localhost via UNIX socket\nServer characterset:    utf8mb4\nDb     characterset:    utf8mb4\nClient characterset:    latin1\nConn.  characterset:    latin1\nUNIX socket:            /var/run/mysqld/mysqld.sock\nBinary data as:         Hexadecimal\nUptime:                 <span class="token number">17</span> min <span class="token number">18</span> sec\n\nThreads: <span class="token number">3</span>  Questions: <span class="token number">22</span>  Slow queries: <span class="token number">0</span>  Opens: <span class="token number">168</span>  Flush tables: <span class="token number">3</span>  Open tables: <span class="token number">87</span>  Queries per second avg: <span class="token number">0.021</span>\n--------------\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="java代码测试" tabindex="-1"><a class="header-anchor" href="#java代码测试" aria-hidden="true">#</a> Java代码测试</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/learn_mysql&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;hzz&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;Root.123456&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from users where id=?&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        ps<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;查询到一条语句&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>',12),e={},t=(0,a(66262).A)(e,[["render",function(n,s){return p}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);