"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[50766],{45770:(e,t,i)=>{i.r(t),i.d(t,{data:()=>l});const l={key:"v-09fb8b05",path:"/MySQL/63%20Binlog%E5%BD%95%E5%85%A5%E6%A0%BC%E5%BC%8F.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/MySQL/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:3,title:"Statement格式：",slug:"statement格式",children:[]},{level:3,title:"Row格式：",slug:"row格式",children:[]},{level:3,title:"Mixed格式：",slug:"mixed格式",children:[]}],filePathRelative:"MySQL/63 Binlog录入格式.md"}},41018:(e,t,i)=>{i.r(t),i.d(t,{default:()=>n});const l=(0,i(20641).Fv)('<p>MySQL的Binlog有三种录入格式，分别是<strong>Statement格式</strong>、<strong>Row格式</strong>和<strong>Mixed格式</strong>。</p><h3 id="statement格式" tabindex="-1"><a class="header-anchor" href="#statement格式" aria-hidden="true">#</a> <strong>Statement格式：</strong></h3><ul><li>将SQL语句本身记录到Binlog中。</li><li>记录的是在主库上执行的SQL语句，从库通过解析并执行相同的SQL来达到复制的目的。</li><li>简单、易读，节省存储空间。</li><li>但是，在某些情况下，由于执行计划或函数等因素的影响，相同的SQL语句在主从库上执行结果可能不一致，导致复制错误。</li></ul><h3 id="row格式" tabindex="-1"><a class="header-anchor" href="#row格式" aria-hidden="true">#</a> <strong>Row格式：</strong></h3><ul><li>记录被修改的每一行数据的变化。</li><li>不记录具体的SQL语句，而是记录每行数据的变动情况，如插入、删除、更新操作前后的值。</li><li>保证了复制的准确性，不受SQL语句执行结果的差异影响，适用于任何情况。</li><li>但是，相比Statement格式，Row格式会占用更多的存储空间。</li></ul><h3 id="mixed格式" tabindex="-1"><a class="header-anchor" href="#mixed格式" aria-hidden="true">#</a> Mixed格式：</h3><p>● Statement格式和Row格式的结合，MySQL自动选择适合的格式。 ● 大多数情况下使用Statement格式进行记录，但对于无法保证安全复制的情况，如使用非确定性函数、触发器等，会自动切换到Row格式进行记录。 ● 结合了两种格式的优势，既减少了存储空间的占用，又保证了复制的准确性。</p>',7),r={},n=(0,i(66262).A)(r,[["render",function(e,t){return l}]])},66262:(e,t)=>{t.A=(e,t)=>{const i=e.__vccOpts||e;for(const[e,l]of t)i[e]=l;return i}}}]);