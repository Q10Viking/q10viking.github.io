"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[31924],{95208:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-568b7bb6",path:"/springboot/09%20@ConfigurationProperties%E4%BD%9C%E7%94%A8.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/springboot/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"@ConfigurationProperties作用",slug:"configurationproperties作用",children:[{level:3,title:"根据setXXX方法对应注入",slug:"根据setxxx方法对应注入",children:[]},{level:3,title:"其中setXXX(参数)",slug:"其中setxxx-参数",children:[]}]},{level:2,title:"案例",slug:"案例",children:[]},{level:2,title:"案例2",slug:"案例2",children:[]}],filePathRelative:"springboot/09 @ConfigurationProperties作用.md"}},70800:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(20641).Fv)('<h2 id="configurationproperties作用" tabindex="-1"><a class="header-anchor" href="#configurationproperties作用" aria-hidden="true">#</a> @ConfigurationProperties作用</h2><p>可以将配置文件如application.yml，批量注入到bean属性中</p><h3 id="根据setxxx方法对应注入" tabindex="-1"><a class="header-anchor" href="#根据setxxx方法对应注入" aria-hidden="true">#</a> 根据setXXX方法对应注入</h3><p>如根据setName方法,而不是根据属性名</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span><span class="token string">&quot;hzz&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyProperties</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> hzzName<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@NestedConfigurationProperty</span>  <span class="token comment">// 就算没有该注解也会注入</span>\n    <span class="token keyword">private</span> <span class="token class-name">MySubProperties</span> mySubProperties<span class="token punctuation">;</span>\n\n    <span class="token comment">// 根据yml配置文件的key 找到setKey</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> xxx<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        hzzName <span class="token operator">=</span> xxx<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMySubProperties</span><span class="token punctuation">(</span><span class="token class-name">MySubProperties</span> mySubProperties<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>mySubProperties <span class="token operator">=</span> mySubProperties<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySubProperties</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> something<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSomething</span><span class="token punctuation">(</span><span class="token class-name">String</span> something<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>something <span class="token operator">=</span> something<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>配置文件</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">hzz</span><span class="token punctuation">:</span>\n\t<span class="token key atrule">name</span><span class="token punctuation">:</span> hello\n<span class="token comment"># 以下的情况就不会注入</span>\n<span class="token key atrule">hzz</span><span class="token punctuation">:</span>\n\t<span class="token key atrule">hzzName</span><span class="token punctuation">:</span> hello\n\n\n<span class="token key atrule">hzz</span><span class="token punctuation">:</span>\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello\n  <span class="token key atrule">mySubProperties</span><span class="token punctuation">:</span>\n    <span class="token key atrule">something</span><span class="token punctuation">:</span> hello Something\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="其中setxxx-参数" tabindex="-1"><a class="header-anchor" href="#其中setxxx-参数" aria-hidden="true">#</a> 其中setXXX(参数)</h3><p>其中参数可以是枚举类型</p><p>在配置文件中直接指定枚举即可</p><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><p>这就是为什么DruidDataSource在配置文件中配置url,为什么属性jdbUrl会被复制到配置文件中的url的原因，因为有setUrl.</p><p>springboot会根据配置文件的url来找到setUrl方法</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n\t<span class="token key atrule">datasource</span><span class="token punctuation">:</span>\n\t\t<span class="token key atrule">url</span><span class="token punctuation">:</span> xxx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>\n<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span><span class="token string">&quot;spring.datasource&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">DataSource</span> <span class="token function">druidDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DruidDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 有setUrl</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><h2 id="案例2" tabindex="-1"><a class="header-anchor" href="#案例2" aria-hidden="true">#</a> 案例2</h2><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">secure</span><span class="token punctuation">:</span>\n  <span class="token key atrule">ignored</span><span class="token punctuation">:</span>\n    <span class="token key atrule">urls</span><span class="token punctuation">:</span> <span class="token comment">#安全路径白名单</span>\n      <span class="token punctuation">-</span> /swagger<span class="token punctuation">-</span>ui.html\n      <span class="token punctuation">-</span> /swagger<span class="token punctuation">-</span>resources/<span class="token important">**</span>\n      <span class="token punctuation">-</span> /swagger/<span class="token important">**</span>\n      <span class="token punctuation">-</span> /<span class="token important">**/v2/api-docs</span>\n      <span class="token punctuation">-</span> /<span class="token important">**/*.js</span>\n      <span class="token punctuation">-</span> /<span class="token important">**/*.css</span>\n      <span class="token punctuation">-</span> /<span class="token important">**/*.png</span>\n      <span class="token punctuation">-</span> /<span class="token important">**/*.ico</span>\n      <span class="token punctuation">-</span> /webjars/springfox<span class="token punctuation">-</span>swagger<span class="token punctuation">-</span>ui/<span class="token important">**</span>\n      <span class="token punctuation">-</span> /actuator/<span class="token important">**</span>\n      <span class="token punctuation">-</span> /druid/<span class="token important">**</span>\n      <span class="token punctuation">-</span> /admin/login\n      <span class="token punctuation">-</span> /admin/register\n      <span class="token punctuation">-</span> /upload/product/<span class="token important">**</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Getter</span>\n<span class="token annotation punctuation">@Setter</span>\n<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;secure.ignored&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IgnoreUrlsConfig</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> urls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',20),p={},t=(0,a(66262).A)(p,[["render",function(n,s){return e}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);