"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[22422],{36106:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-f6761f26",path:"/vue3/20%20CompositionApi.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/vue3/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"local注册组件",slug:"local注册组件",children:[]},{level:2,title:"computed",slug:"computed",children:[]},{level:2,title:"v-if与v-for",slug:"v-if与v-for",children:[]},{level:2,title:"ref vs  reactive",slug:"ref-vs-reactive",children:[]},{level:2,title:"onMounted",slug:"onmounted",children:[]},{level:2,title:"watch",slug:"watch",children:[]},{level:2,title:"标签规范",slug:"标签规范",children:[]},{level:2,title:"Template Ref",slug:"template-ref",children:[{level:3,title:"组件的Refs inside v-for",slug:"组件的refs-inside-v-for",children:[]},{level:3,title:"defineExpose",slug:"defineexpose",children:[]}]},{level:2,title:"v-html",slug:"v-html",children:[{level:3,title:"不能有内容",slug:"不能有内容",children:[]},{level:3,title:":deep() inner-selector",slug:"deep-inner-selector",children:[]},{level:3,title:"深层次修改组件样式",slug:"深层次修改组件样式",children:[]}]},{level:2,title:"Props",slug:"props",children:[{level:3,title:"普通定义",slug:"普通定义",children:[]},{level:3,title:"带类型",slug:"带类型",children:[]},{level:3,title:"带校验",slug:"带校验",children:[]},{level:3,title:"js访问属性",slug:"js访问属性",children:[]},{level:3,title:"props as local data",slug:"props-as-local-data",children:[]},{level:3,title:"默认值",slug:"默认值",children:[]}]},{level:2,title:"Events",slug:"events",children:[{level:3,title:"定义事件",slug:"定义事件",children:[]},{level:3,title:"发送事件",slug:"发送事件",children:[]},{level:3,title:"在父组件接受事件",slug:"在父组件接受事件",children:[]}]},{level:2,title:"class样式",slug:"class样式",children:[{level:3,title:"添加class",slug:"添加class",children:[]},{level:3,title:"条件检查添加样式",slug:"条件检查添加样式",children:[]}]}],filePathRelative:"vue3/20 CompositionApi.md"}},60512:(n,s,a)=>{a.r(s),a.d(s,{default:()=>N});var t=a(20641);const p=(0,t.Fv)('<h2 id="local注册组件" tabindex="-1"><a class="header-anchor" href="#local注册组件" aria-hidden="true">#</a> local注册组件</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// 直接导入即可</span>\n<span class="token keyword">import</span> ComponentA <span class="token keyword">from</span> <span class="token string">&#39;./ComponentA.vue&#39;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> computed</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>接收一个函数，返回一个值。在typescript中它会自动进行类型推断</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token doc-comment comment">/**\n * 通过computed属性来控制数据\n */</span>\n<span class="token keyword">const</span> userListFilter <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> \n    <span class="token keyword">let</span> content <span class="token operator">=</span> search<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token comment">// let res = userList.value.filter(user =&gt; user.name.toLowerCase().trim().includes(content))</span>\n    <span class="token keyword">let</span> res <span class="token operator">=</span> userList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">user</span> <span class="token operator">=&gt;</span> user<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> res\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>应用</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>&lt;li v-for=&quot;(userInfo,idx) in userListFilter&quot;   // 直接应用\n    :key=&quot;idx&quot;\n    class=&quot;userinfo&quot;&gt;\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userInfo.img<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{userInfo.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>location<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{userInfo.location}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="v-if与v-for" tabindex="-1"><a class="header-anchor" href="#v-if与v-for" aria-hidden="true">#</a> v-if与v-for</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>当v-if与v-for一起使用的时候，使用标签template标签包裹，vue在渲染的时候会自动去除</p></div>',9),e={href:"https://github.com/Q10Viking/Mini-FrontEnd-project/tree/main/32%20Live%20User%20Filter/refactor-by-vue",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Fv)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userlist<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userlist<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userList.length===0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userinfo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Loading...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>  \n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userListFilter.length===0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userinfo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Not Match...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(userInfo,idx) in userListFilter<span class="token punctuation">&quot;</span></span>\n                <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span>\n                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userinfo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userInfo.img<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{userInfo.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>location<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{userInfo.location}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="ref-vs-reactive" tabindex="-1"><a class="header-anchor" href="#ref-vs-reactive" aria-hidden="true">#</a> ref vs reactive</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>两个都是响应式的api设计。但是他们有一些区别</p></div><ol><li>js普通的类型只能用ref，而不能使用reactive</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span> \n<span class="token keyword">const</span> search <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>\n <span class="token comment">// const search = reactive(&quot;&quot;)  报错</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>两者都能作用数组和对象，但是使用ts的声明类型的时候，ref需要使用Ref</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span>reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> Ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>  <span class="token comment">// ref方式需要额外引入Ref</span>\n\n<span class="token keyword">const</span> <span class="token literal-property property">userList</span><span class="token operator">:</span>Ref<span class="token operator">&lt;</span>UserInfo<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token literal-property property">userList</span><span class="token operator">:</span>UserInfo<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>在js代码中，访问值的方式的不同ref方式需要携带<code>.value</code>的方式。<strong>但是在html代码中访问时会自动拆箱，不需要<code>.value</code></strong></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>userList<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span>  <span class="token comment">// ref方式访问数据方式</span>\nuserList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span>    <span class="token comment">// reactive访问数据方式</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token comment">&lt;!-- search = ref(&quot;&quot;)  --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> \n          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span> \n          <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">&lt;!--</span> <span class="token attr-name">并不需要search.value</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>    \n          placeholder=&quot;Search...&quot;&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="4"><li>toRefs是保持reactive属性的响应性</li></ol><h2 id="onmounted" tabindex="-1"><a class="header-anchor" href="#onmounted" aria-hidden="true">#</a> onMounted</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>接收一个函数</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token comment">// 有async，是因为函数内部使用了await</span>\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token constant">RAND_USER_API</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 解构</span>\n    <span class="token keyword">let</span> results <span class="token operator">=</span> data<span class="token punctuation">.</span>results <span class="token keyword">as</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span>\n    results<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">user</span><span class="token operator">:</span>any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> <span class="token literal-property property">userInfo</span><span class="token operator">:</span>UserInfo <span class="token operator">=</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">img</span><span class="token operator">:</span> user<span class="token punctuation">.</span>picture<span class="token punctuation">.</span>large<span class="token punctuation">,</span>\n            <span class="token literal-property property">name</span><span class="token operator">:</span> user<span class="token punctuation">.</span>name<span class="token punctuation">.</span>first<span class="token punctuation">,</span>\n            <span class="token literal-property property">location</span><span class="token operator">:</span> user<span class="token punctuation">.</span>location<span class="token punctuation">.</span>city\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// userList.value.push(userInfo)</span>\n        userList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> watch</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token comment">// watch search这属性，val是新值</span>\n<span class="token function">watch</span><span class="token punctuation">(</span>search<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="标签规范" tabindex="-1"><a class="header-anchor" href="#标签规范" aria-hidden="true">#</a> 标签规范</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> IncrementCounter <span class="token keyword">from</span> <span class="token string">&#39;./components/IncrementCounter.vue&#39;</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- 这样方便看样式 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="template-ref" tabindex="-1"><a class="header-anchor" href="#template-ref" aria-hidden="true">#</a> Template Ref</h2>',19),l={href:"https://vuejs.org/guide/typescript/composition-api.html#typing-template-refs",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Fv)('<p><strong>注意：名字要相同</strong></p><p>官网的建议</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> el <span class="token operator">=</span> ref<span class="token operator">&lt;</span>HTMLInputElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  el<span class="token punctuation">.</span>value<span class="token operator">?.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>自己的实战案例</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token comment">// 定义</span>\n<span class="token keyword">const</span> tiktok <span class="token operator">=</span> ref<span class="token operator">&lt;</span>HTMLParamElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 使用获取属性</span>\n  tiktok<span class="token punctuation">.</span>value<span class="token operator">?.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;data-target&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font-awesome-icon</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fa-brands fa-tiktok<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>counter<span class="token punctuation">&quot;</span></span> \n            <span class="token attr-name">data-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>23000<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tiktok<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>   <span class="token comment">&lt;!-- 名字要相同 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Tiktok Fans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="组件的refs-inside-v-for" tabindex="-1"><a class="header-anchor" href="#组件的refs-inside-v-for" aria-hidden="true">#</a> 组件的Refs inside <code>v-for</code></h3>',6),u={href:"https://vuejs.org/guide/essentials/template-refs.html#refs-inside-v-for",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Lk)("p",null,[(0,t.eW)("It should be noted that the ref array does "),(0,t.Lk)("strong",null,"not"),(0,t.eW)(" guarantee the same order as the source array.（不能一定保证，但是目前的这个项目中，我得到的还是顺序的）")],-1),i=(0,t.Lk)("h3",{id:"defineexpose",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#defineexpose","aria-hidden":"true"},"#"),(0,t.eW)(" defineExpose")],-1),k={href:"https://vuejs.org/guide/essentials/template-refs.html#ref-on-component",target:"_blank",rel:"noopener noreferrer"},b=(0,t.Fv)("<ol><li><strong>reference will be that of a component instance</strong>:</li><li>components using <code>&lt;script setup&gt;</code> are <strong>private by default</strong>: a parent component referencing a child component using <code>&lt;script setup&gt;</code> won&#39;t be able to access anything unless the child component chooses to expose a public interface using the <code>defineExpose</code> macro:</li><li>defineExpose是父组件拿到子组件的时候看到的样子</li></ol>",1),m={href:"https://vuejs.org/guide/typescript/composition-api.html#typing-component-template-refs",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Fv)('<div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// 官网的例子</span>\n<span class="token keyword">import</span> MyModal <span class="token keyword">from</span> <span class="token string">&#39;./MyModal.vue&#39;</span>\n<span class="token keyword">const</span> modal <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span>InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> MyModal<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>我的例子</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>import Card from &#39;@/components/Card.vue&#39;\nconst cardRefs:Ref&lt;InstanceType<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeof</span> <span class="token attr-name">Card</span><span class="token punctuation">&gt;</span></span>[]&gt; = ref([])\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(image,idx) in RANDIMAGES<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:img-url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:idx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:isClickable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isClickable<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">@active</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleActiveCard<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cardRefs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>父组件MemoryCardGame看到的子组件Card.vue暴露的数据</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Card.vue</span>\n<span class="token doc-comment comment">/**\n * 定义子组件暴露的样子\n */</span>\n<span class="token function">defineExpose</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n  shakeCard<span class="token punctuation">,</span>\n  closeCard<span class="token punctuation">,</span>\n  callMeTest\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="/images/minifrontendproject/image-20220729124357315.png" alt="image-20220729124357315"></p><h2 id="v-html" tabindex="-1"><a class="header-anchor" href="#v-html" aria-hidden="true">#</a> v-html</h2>',7),g={href:"https://q10viking.github.io/minifrontendproject/29%20Event%20KeyCodes.html",target:"_blank",rel:"noopener noreferrer"},v=(0,t.Fv)('<h3 id="不能有内容" tabindex="-1"><a class="header-anchor" href="#不能有内容" aria-hidden="true">#</a> 不能有内容</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;container&quot;</span> v<span class="token operator">-</span>html<span class="token operator">=</span><span class="token string">&quot;content&quot;</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;msg&quot;</span><span class="token operator">&gt;</span>\n            Press any key to <span class="token keyword">get</span> the keyCode\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>更改为</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content.length<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            Press any key to get the keyCode\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="deep-inner-selector" tabindex="-1"><a class="header-anchor" href="#deep-inner-selector" aria-hidden="true">#</a> :deep() inner-selector</h3>',5),h={class:"custom-container tip"},f=(0,t.Lk)("p",{class:"custom-container-title"},"TIP",-1),q={href:"https://vuejs.org/api/built-in-directives.html#v-html",target:"_blank",rel:"noopener noreferrer"},y=(0,t.Lk)("p",null,[(0,t.eW)("官网的描述：In "),(0,t.Lk)("code",null,"Single-File Components"),(0,t.eW)(", "),(0,t.Lk)("code",null,"scoped"),(0,t.eW)(" styles will not apply to content inside "),(0,t.Lk)("code",null,"v-html"),(0,t.eW)(", because that HTML is not processed by Vue's template compiler.")],-1),x=(0,t.Lk)("code",null,":deep()",-1),w={href:"https://stackoverflow.com/questions/48331383/css-styles-not-being-applied-to-html-within-a-vue-component/73122233#73122233",target:"_blank",rel:"noopener noreferrer"},L=(0,t.Fv)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>onMounted<span class="token punctuation">,</span>ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keydown&#39;</span><span class="token punctuation">,</span><span class="token parameter">event</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        content<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div class=&quot;key&quot;&gt;\n                &lt;span class=&quot;content&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>event<span class="token punctuation">.</span>keyCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span&gt;\n                &lt;small&gt;event.keyCode&lt;/small&gt;\n            &lt;/div&gt;\n        </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">  <span class="token selector">&lt;!-- 不需要添加module --&gt;\n    \n.container</span><span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n\t<span class="token selector">&lt;!-- v-html 加入的html，只需要在最外层的容器添加:deep() --&gt;\n    :deep(.key)</span><span class="token punctuation">{</span>\n        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>\n        \n        <span class="token selector">.content</span><span class="token punctuation">{</span>\n            <span class="token property">font-size</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        \n        <span class="token selector">small</span><span class="token punctuation">{</span>\n            <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><hr><h3 id="深层次修改组件样式" tabindex="-1"><a class="header-anchor" href="#深层次修改组件样式" aria-hidden="true">#</a> 深层次修改组件样式</h3><p><strong>除了上面v-html应用deep之外，修改内部组件的样式也可用</strong></p>',4),j={href:"https://stackoverflow.com/questions/48032006/how-do-i-use-deep-or-or-v-deep-in-vue-js",target:"_blank",rel:"noopener noreferrer"},I=(0,t.Fv)('<p>In Vue 2:</p><ul><li>The <code>/deep/</code> syntax is deprecated</li><li>Use <code>::v-deep</code> with Sass, use <code>&gt;&gt;&gt;</code> without Sass</li></ul><p>In Vue 3:</p><ul><li><code>::v-deep .child-class</code> is deprecated in favor of <code>:deep(.child-class)</code></li><li>The <code>::v-</code> prefix is deprecated in favor of <code>:</code></li><li>The <code>&gt;&gt;&gt;</code> syntax is deprecated</li><li>The <code>/deep/</code> syntax is deprecated</li><li>There are new <code>:slotted</code> and <code>:global</code> selectors</li></ul><p>With every version/syntax, the <code>&lt;style&gt;</code> tag for this component must be <code>scoped</code>:</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token selector">::v-deep .prev </span><span class="token punctuation">{</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> 27rem<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// scss</span>\n<span class="token punctuation">:</span><span class="token function">deep</span><span class="token punctuation">(</span>.prev<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> 27rem<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><h3 id="普通定义" tabindex="-1"><a class="header-anchor" href="#普通定义" aria-hidden="true">#</a> 普通定义</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// 不需要导入</span>\n<span class="token comment">// import { defineProps } from &#39;vue&#39;</span>\n<span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;idx&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="带类型" tabindex="-1"><a class="header-anchor" href="#带类型" aria-hidden="true">#</a> 带类型</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    idx<span class="token operator">:</span>Number\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 在使用的时候{{idx+1}}</span>\n<span class="token comment">// editor会报错：对象可能为“未定义”。ts(2532)</span>\n<span class="token comment">// 这样就需要校验，提前类型类型检查，防止报错</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="带校验" tabindex="-1"><a class="header-anchor" href="#带校验" aria-hidden="true">#</a> 带校验</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    idx<span class="token operator">:</span> <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> Number<span class="token punctuation">,</span>\n        required<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="js访问属性" tabindex="-1"><a class="header-anchor" href="#js访问属性" aria-hidden="true">#</a> js访问属性</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">idx</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>\n        <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">book</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span>\n        <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">function</span> <span class="token function">dragStart</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">event</span><span class="token operator">:</span>DragEvent</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">// 访问属性的方式</span>\n    event<span class="token punctuation">.</span>dataTransfer<span class="token operator">?.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>idx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="props-as-local-data" tabindex="-1"><a class="header-anchor" href="#props-as-local-data" aria-hidden="true">#</a> props as local data</h3>',16),F={href:"https://vuejs.org/guide/components/props.html#one-way-data-flow",target:"_blank",rel:"noopener noreferrer"},C=(0,t.Lk)("strong",null,"child component wants to use it as a local data property",-1),T=(0,t.Fv)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">idx</span><span class="token operator">:</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>\n      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>idx<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="默认值" tabindex="-1"><a class="header-anchor" href="#默认值" aria-hidden="true">#</a> 默认值</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  unit<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> String<span class="token punctuation">,</span>\n    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;¥&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>带类型</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>\n  mainTitle<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  subTitle<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">withDefaults</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">defineProps</span><span class="token generic class-name"><span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  mainTitle<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n  subTitle<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2>',6),M={href:"https://vuejs.org/guide/essentials/event-handling.html#event-modifiers",target:"_blank",rel:"noopener noreferrer"},E=(0,t.Fv)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>book<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:data-idx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span> \n        <span class="token attr-name">:data-counter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>counter<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">@dragenter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragEnter<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">@dragover.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragOver<span class="token punctuation">&quot;</span></span>   <span class="token attr-name">&lt;!--</span> <span class="token attr-name">使用.prevent修饰符，event.preventDefault()</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>\n        @dragleave=&quot;dragLeave&quot;&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="定义事件" tabindex="-1"><a class="header-anchor" href="#定义事件" aria-hidden="true">#</a> 定义事件</h3>',2),S={href:"https://q10viking.github.io/minifrontendproject/32%20Sorted%20LIst.html",target:"_blank",rel:"noopener noreferrer"},W={href:"https://vuejs.org/guide/typescript/composition-api.html#typing-component-emits",target:"_blank",rel:"noopener noreferrer"},_=(0,t.Fv)('<div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// 普通定义</span>\n<span class="token comment">// defineEmits([&#39;change&#39;])</span>\n<span class="token comment">// 定义事件，并带有参数</span>\n<span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token generic-function"><span class="token function">defineEmits</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span>\n    <span class="token punctuation">(</span>e<span class="token operator">:</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span>srcIdx<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span>targetIdx<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span>  <span class="token comment">// 方法签名</span>\n    <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="发送事件" tabindex="-1"><a class="header-anchor" href="#发送事件" aria-hidden="true">#</a> 发送事件</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">dragDrop</span><span class="token punctuation">(</span>event<span class="token operator">:</span>DragEvent<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> srcIdxStr <span class="token operator">=</span> event<span class="token punctuation">.</span>dataTransfer<span class="token operator">?.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">let</span> srcIdx <span class="token operator">=</span> <span class="token number">0</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> srcIdxStr <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        srcIdx <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>srcIdxStr<span class="token punctuation">)</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>srcIdx<span class="token punctuation">,</span>props<span class="token punctuation">.</span>idx<span class="token punctuation">)</span>\n        <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span>srcIdx<span class="token punctuation">,</span>props<span class="token punctuation">.</span>idx<span class="token punctuation">)</span> <span class="token comment">// 发送数据  </span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;drag drop&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="在父组件接受事件" tabindex="-1"><a class="header-anchor" href="#在父组件接受事件" aria-hidden="true">#</a> 在父组件接受事件</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListItem</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(book,idx) in BOOKS<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:book</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>book<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:idx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>swap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 接受事件交给swap处理 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListItem</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    \n<span class="token keyword">function</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">srcIdx</span><span class="token operator">:</span>number<span class="token punctuation">,</span><span class="token literal-property property">targetIdx</span><span class="token operator">:</span>number</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;parent component receive&quot;</span><span class="token punctuation">,</span>srcIdx<span class="token punctuation">,</span>targetIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="class样式" tabindex="-1"><a class="header-anchor" href="#class样式" aria-hidden="true">#</a> class样式</h2>',6),P={href:"https://q10viking.github.io/minifrontendproject/32%20Sorted%20LIst.html",target:"_blank",rel:"noopener noreferrer"},R=(0,t.Fv)('<h3 id="添加class" tabindex="-1"><a class="header-anchor" href="#添加class" aria-hidden="true">#</a> 添加class</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>使用isActive,hasError语义很明确</p></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>book<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{hover: isActive}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@dragenter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragEnter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">const</span> isActive <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n<span class="token keyword">function</span> <span class="token function">dragEnter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    isActive<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 添加hover</span>\n    <span class="token comment">// 被渲染成,class会自动合并</span>\n    <span class="token comment">// &lt;li class=&quot;book hover&quot;&gt;&lt;/li&gt;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="条件检查添加样式" tabindex="-1"><a class="header-anchor" href="#条件检查添加样式" aria-hidden="true">#</a> 条件检查添加样式</h3>',4),A={href:"https://vuejs.org/guide/components/attrs.html",target:"_blank",rel:"noopener noreferrer"},O=(0,t.Fv)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListItem</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(book,idx) in RANDOM_BOOKS<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:book</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>book<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:idx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checked ? checkedResult[idx]? &#39;right&#39;:&#39;error&#39; :&#39;&#39;<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">&lt;!--</span>  <span class="token attr-name">条件检查来设置样式</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>\n        @change=&quot;swap&quot;&gt;\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListItem</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>相关的script</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">const</span> <span class="token literal-property property">checkedResult</span><span class="token operator">:</span>boolean<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> checked <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n\n<span class="token keyword">function</span> <span class="token function">checkOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token constant">BOOKS</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    checkedResult<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">BOOKS</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token constant">RANDOM_BOOKS</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n  checked<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>   <span class="token comment">// 打开设置样式的开关</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',3),D={},N=(0,a(66262).A)(D,[["render",function(n,s){const a=(0,t.g2)("OutboundLink"),D=(0,t.g2)("common-progresson-snippet");return(0,t.uX)(),(0,t.CE)(t.FK,null,[p,(0,t.Lk)("p",null,[(0,t.Lk)("a",e,[(0,t.eW)("Live User Filter Source Code"),(0,t.bF)(a)])]),o,(0,t.Lk)("p",null,[(0,t.Lk)("a",l,[(0,t.eW)("TypeScript with Composition API | Vue.js (vuejs.org)"),(0,t.bF)(a)])]),c,(0,t.Lk)("p",null,[(0,t.Lk)("a",u,[(0,t.eW)("Refs in v-for"),(0,t.bF)(a)])]),r,i,(0,t.Lk)("p",null,[(0,t.Lk)("a",k,[(0,t.eW)("Ref On Component"),(0,t.bF)(a)])]),b,(0,t.Lk)("p",null,[(0,t.Lk)("a",m,[(0,t.eW)("Typing Component Template Refs"),(0,t.bF)(a)])]),d,(0,t.Lk)("p",null,[(0,t.Lk)("a",g,[(0,t.eW)("Event KeybordCodes"),(0,t.bF)(a)])]),(0,t.bF)(D,{src:"https://q10viking.github.io/Mini-FrontEnd-project/34%20Event%20KeyCodes/vite-project/dist/"}),v,(0,t.Lk)("div",h,[f,(0,t.Lk)("p",null,[(0,t.eW)("使用v-html样式不生效的问题."),(0,t.Lk)("a",q,[(0,t.eW)("vue3 api v-html"),(0,t.bF)(a)])]),y]),(0,t.Lk)("p",null,[(0,t.eW)("scss中添加"),x,(0,t.eW)(),(0,t.Lk)("a",w,[(0,t.eW)("javascript - CSS styles not being applied to HTML within a Vue Component - Stack Overflow"),(0,t.bF)(a)])]),L,(0,t.Lk)("p",null,[(0,t.Lk)("a",j,[(0,t.eW)("css - How do I use /deep/ or >>> or ::v-deep in Vue.js? - Stack Overflow"),(0,t.bF)(a)])]),I,(0,t.Lk)("p",null,[(0,t.Lk)("a",F,[C,(0,t.bF)(a)])]),T,(0,t.Lk)("p",null,[(0,t.Lk)("a",M,[(0,t.eW)("Event Modifiers"),(0,t.bF)(a)])]),E,(0,t.Lk)("p",null,[(0,t.Lk)("a",S,[(0,t.eW)("Sortable List demo"),(0,t.bF)(a)])]),(0,t.Lk)("p",null,[(0,t.Lk)("a",W,[(0,t.eW)("typing-component-emits"),(0,t.bF)(a)])]),_,(0,t.Lk)("p",null,[(0,t.Lk)("a",P,[(0,t.eW)("Sortable List demo"),(0,t.bF)(a)])]),R,(0,t.Lk)("p",null,[(0,t.eW)("Vue支持属性向下传递"),(0,t.Lk)("a",A,[(0,t.eW)("Fallthrough Attributes"),(0,t.bF)(a)]),(0,t.eW)(",在这里ListItem设置的class会条件在ListItem的根标签上，这里案例时Li标签")]),O],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);