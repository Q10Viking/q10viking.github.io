"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[58778],{71858:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-9ddc3f34",path:"/minifrontendproject/22%20Image%20Carousel.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/minifrontendproject/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Image Carousel 1",slug:"image-carousel-1",children:[]},{level:2,title:"左右图片",slug:"左右图片",children:[]},{level:2,title:"下点",slug:"下点",children:[]},{level:2,title:"图片如何移动",slug:"图片如何移动",children:[]},{level:2,title:"Image Carousel 2",slug:"image-carousel-2",children:[]},{level:2,title:"如何解决循环时的闪现问题？",slug:"如何解决循环时的闪现问题",children:[{level:3,title:"transitionend事件",slug:"transitionend事件",children:[]},{level:3,title:"鼠标悬浮停止自动切换",slug:"鼠标悬浮停止自动切换",children:[]},{level:3,title:"visibilitychange事件",slug:"visibilitychange事件",children:[]}]}],filePathRelative:"minifrontendproject/22 Image Carousel.md"}},30020:(n,s,a)=>{a.r(s),a.d(s,{default:()=>k});var p=a(20641);const t=(0,p.Lk)("h2",{id:"image-carousel-1",tabindex:"-1"},[(0,p.Lk)("a",{class:"header-anchor",href:"#image-carousel-1","aria-hidden":"true"},"#"),(0,p.eW)(" Image Carousel 1")],-1),e={href:"https://q10viking.github.io/Mini-FrontEnd-project/26%20Image%20Carousel%201/dist/",target:"_blank",rel:"noopener noreferrer"},o={href:"https://github.com/Q10Viking/Mini-FrontEnd-project/tree/main/26%20Image%20Carousel%201",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Fv)('<h2 id="左右图片" tabindex="-1"><a class="header-anchor" href="#左右图片" aria-hidden="true">#</a> 左右图片</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>右箭头居右布局</p></div><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token selector">.btn-container</span><span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">// 需要flex布局</span>\n\n    <span class="token selector">button</span><span class="token punctuation">{</span>\n        <span class="token selector"><span class="token parent important">&amp;</span>:last-child</span><span class="token punctuation">{</span>\n            <span class="token property">margin-left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token comment">// 才生效</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="下点" tabindex="-1"><a class="header-anchor" href="#下点" aria-hidden="true">#</a> 下点</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>ol-li 圆圈化，默认是数字</p></div><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// dots样式</span>\n<span class="token selector">.dots</span><span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token comment">// 去掉默认样式</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n\n    <span class="token selector">li</span><span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token variable">$dot-size</span><span class="token punctuation">;</span>  <span class="token comment">// 给它宽度和高度，在加上边框</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token variable">$dot-size</span><span class="token punctuation">;</span>\n        <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid <span class="token variable">$arrow-color</span><span class="token punctuation">;</span>\n        <span class="token property">margin-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n\n        <span class="token selector"><span class="token parent important">&amp;</span>.active</span><span class="token punctuation">{</span>\n            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$arrow-color</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="图片如何移动" tabindex="-1"><a class="header-anchor" href="#图片如何移动" aria-hidden="true">#</a> 图片如何移动</h2><ol><li>设置了两个容器: A容器负责展示，B容器负责移动</li><li>所有的图片在一个容器B中在同一行排列</li><li>然后控制容器改变translateX即可</li><li>注意容器A展示的需要有宽度，容器B的宽度则是由里面的图片撑开，而不控制其宽度。并且每张图片的宽度与展示的容器A宽度一样。移动时移动的大小为该宽度</li></ol><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// 容器A</span>\n<span class="token selector">.carousel</span><span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token variable">$size</span><span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 50vh<span class="token punctuation">;</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n    <span class="token comment">// 容器B</span>\n    <span class="token selector">.image-container</span><span class="token punctuation">{</span>\n        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n        <span class="token comment">// js中改变size</span>\n        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token property">transition</span><span class="token punctuation">:</span> transform 0.8s ease-in-out<span class="token punctuation">;</span>\n\n        <span class="token selector">img</span><span class="token punctuation">{</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token variable">$size</span><span class="token punctuation">;</span>\n            <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n            <span class="token property">object-fit</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span> <span class="token comment">// 图片调整</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><hr><h2 id="image-carousel-2" tabindex="-1"><a class="header-anchor" href="#image-carousel-2" aria-hidden="true">#</a> Image Carousel 2</h2>',11),l={href:"https://q10viking.github.io/Mini-FrontEnd-project/27%20Image%20Carousel%202/dist/",target:"_blank",rel:"noopener noreferrer"},i={href:"https://github.com/Q10Viking/Mini-FrontEnd-project/tree/main/27%20Image%20Carousel%202",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Fv)('<h2 id="如何解决循环时的闪现问题" tabindex="-1"><a class="header-anchor" href="#如何解决循环时的闪现问题" aria-hidden="true">#</a> 如何解决循环时的闪现问题？</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><ol><li>自动切换时到最后一张图片，接着跳到第一张图片</li><li>解决这种没有平滑过度问题</li></ol></div><h3 id="transitionend事件" tabindex="-1"><a class="header-anchor" href="#transitionend事件" aria-hidden="true">#</a> transitionend事件</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><ol><li>添加了首尾克隆</li><li>js控制过渡css style</li><li>transitionend事件监听检查是否过渡到了首尾克隆</li></ol></div><p>参考 https://codepen.io/jonathan-asbell/pen/QWgampv</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// loop</span>\n<span class="token comment">// https://codepen.io/jonathan-asbell/pen/QWgampv</span>\n\n<span class="token keyword">function</span> <span class="token function">changeImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>idx <span class="token operator">&gt;</span> imgs<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">||</span> idx <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token comment">// first limit counter to prevent fast-change bugs</span>\n        <span class="token comment">// 解决快速回退的问题  </span>\n        <span class="token keyword">return</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">hightDots</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    imgsContainer<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">transform 0.8s ease-in-out</span><span class="token template-punctuation string">`</span></span>\n    imgsContainer<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">translateX(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token operator">-</span>size <span class="token operator">*</span> idx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)</span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/**\n * \n * 添加克隆首尾\n */</span>\n <span class="token keyword">function</span> <span class="token function">getCloneImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>NodeListOf<span class="token operator">&lt;</span>HTMLElement<span class="token operator">&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> firstImgClone <span class="token operator">=</span> imgs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement\n    <span class="token keyword">const</span> lastImgClone <span class="token operator">=</span> imgs<span class="token punctuation">[</span>imgs<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement\n\n    firstImgClone<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;first-clone&#39;</span><span class="token punctuation">)</span>\n    lastImgClone<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;last-clone&#39;</span><span class="token punctuation">)</span>\n\n    imgsContainer<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>firstImgClone<span class="token punctuation">)</span>\n    imgsContainer<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span>lastImgClone<span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> imgsContainer<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/**\n * 每次检查是否是移动到了克隆的地方\n */</span>\nimgsContainer<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;transitionend&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n   <span class="token comment">// 每次移动完之后进行检查</span>\n   <span class="token keyword">if</span><span class="token punctuation">(</span>imgs<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;first-clone&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    imgsContainer<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span>\n    idx <span class="token operator">=</span> <span class="token number">1</span>\n    imgsContainer<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">translateX(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token operator">-</span>size <span class="token operator">*</span> idx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)</span><span class="token template-punctuation string">`</span></span>\n    <span class="token comment">// imgsContainer.style.transition = val</span>\n   <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>imgs<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;last-clone&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    imgsContainer<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span>\n    idx <span class="token operator">=</span> imgs<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span>\n    imgsContainer<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">translateX(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token operator">-</span>size <span class="token operator">*</span> idx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)</span><span class="token template-punctuation string">`</span></span>\n   <span class="token punctuation">}</span>\n    \n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>同时处理点的位置</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">hightDots</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">// remove all active then add active class</span>\n    <span class="token keyword">const</span> activeCls <span class="token operator">=</span> <span class="token string">&#39;active&#39;</span>\n    dots<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">dot</span> <span class="token operator">=&gt;</span> dot<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>activeCls<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">let</span> <span class="token literal-property property">dotIdx</span><span class="token operator">:</span>number <span class="token operator">=</span> <span class="token keyword">null</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>idx <span class="token operator">===</span> imgs<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        dotIdx <span class="token operator">=</span> <span class="token number">0</span>\n    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>idx <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        dotIdx <span class="token operator">=</span> dots<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span>\n    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n        dotIdx <span class="token operator">=</span> idx<span class="token operator">-</span><span class="token number">1</span>\n    <span class="token punctuation">}</span>\n\n    dots<span class="token punctuation">[</span>dotIdx<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>activeCls<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="鼠标悬浮停止自动切换" tabindex="-1"><a class="header-anchor" href="#鼠标悬浮停止自动切换" aria-hidden="true">#</a> 鼠标悬浮停止自动切换</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>imgsContainer<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mouseover&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;mouseover&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token function">clearInterval</span><span class="token punctuation">(</span>interval<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nimgsContainer<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mouseout&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;mouseout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    interval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>forward<span class="token punctuation">,</span>seconds<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="visibilitychange事件" tabindex="-1"><a class="header-anchor" href="#visibilitychange事件" aria-hidden="true">#</a> visibilitychange事件</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>当切换浏览器标签栏的时候，保存用户切花图片的位置</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 修复切换浏览器页面，</span>\ndocument<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;visibilitychange&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    \n    <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">clearInterval</span><span class="token punctuation">(</span>interval<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n        interval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>forward<span class="token punctuation">,</span>seconds<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',13),r={},k=(0,a(66262).A)(r,[["render",function(n,s){const a=(0,p.g2)("OutboundLink"),r=(0,p.g2)("common-progresson-snippet");return(0,p.uX)(),(0,p.CE)(p.FK,null,[t,(0,p.Lk)("p",null,[(0,p.Lk)("a",e,[(0,p.eW)("项目预览（Project view）"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",o,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),(0,p.bF)(r,{src:"https://q10viking.github.io/Mini-FrontEnd-project/26%20Image%20Carousel%201/dist/"}),c,(0,p.Lk)("p",null,[(0,p.Lk)("a",l,[(0,p.eW)("项目预览（Project view）"),(0,p.bF)(a)])]),(0,p.Lk)("p",null,[(0,p.Lk)("a",i,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),(0,p.bF)(r,{src:"https://q10viking.github.io/Mini-FrontEnd-project/27%20Image%20Carousel%202/dist/"}),u],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);