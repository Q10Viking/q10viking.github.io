"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[50399],{18022:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-1d383552",path:"/ShardingJDBC/",title:"",lang:"zh-CN",frontmatter:{prev:{text:"Back To 目录",link:"/ShardingJDBC/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Route （路由）引擎",slug:"route-路由-引擎",children:[]}],filePathRelative:"ShardingJDBC/README.md"}},90127:(s,n,a)=>{a.r(n),a.d(n,{default:()=>t});const e=(0,a(20641).Fv)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>分库分表最核心的两点SQL 路由 、 SQL 改写</p></div><h2 id="route-路由-引擎" tabindex="-1"><a class="header-anchor" href="#route-路由-引擎" aria-hidden="true">#</a> Route （路由）引擎</h2><p>在实际查询当中，数据可能不只是存在一台MYSQL服务器上，</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span>  <span class="token keyword">FROM</span> t_order <span class="token keyword">WHERE</span> <span class="token keyword">order</span> _id <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>数据分布：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>ds0<span class="token punctuation">.</span>t_order0 <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span>\n\nds1<span class="token punctuation">.</span>t_order0<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这个SELECT 查询就需要走2个database,如果这个SQL原封不动的执行，肯定会报错（表不存在），Sharding-jdbc 必须要对这个sql进行改写，将库名和表名 2个路由加上</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span>  <span class="token keyword">FROM</span> ds0<span class="token punctuation">.</span>t_order0  <span class="token keyword">WHERE</span> <span class="token keyword">order</span> _id <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>\n\n<span class="token keyword">SELECT</span> <span class="token operator">*</span>  <span class="token keyword">FROM</span> ds1<span class="token punctuation">.</span>t_order0  <span class="token keyword">WHERE</span> <span class="token keyword">order</span> _id <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="/images/ShardingJDBC/show.png" alt="img"></p>',9),p={},t=(0,a(66262).A)(p,[["render",function(s,n){return e}]])},66262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);