"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[40666],{17672:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-2ba1d336",path:"/ElasticStack/25%20%E5%88%86%E8%AF%8D%E5%99%A8.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/ElasticStack/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"es内置的分词器",slug:"es内置的分词器",children:[]},{level:2,title:"分词器工作流程",slug:"分词器工作流程",children:[]},{level:2,title:"定制分词器",slug:"定制分词器",children:[{level:3,title:"默认的分词器",slug:"默认的分词器",children:[]},{level:3,title:"修改分词器的设置",slug:"修改分词器的设置",children:[]}]},{level:2,title:"IK分词器",slug:"ik分词器",children:[{level:3,title:"ik配置文件",slug:"ik配置文件",children:[]},{level:3,title:"IK分词器自定义词库❤️",slug:"ik分词器自定义词库❤️",children:[]},{level:3,title:"IK热更新",slug:"ik热更新",children:[]}]}],filePathRelative:"ElasticStack/25 分词器.md"}},34785:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(20641).Fv)('<h2 id="es内置的分词器" tabindex="-1"><a class="header-anchor" href="#es内置的分词器" aria-hidden="true">#</a> es内置的分词器</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>es内置有四种分词器</p></div><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>对下面这句话进行分词\nSet the shape to semi-transparent by calling set_trans(<span class="token number">5</span>)\n\nstandard analyzer：set<span class="token punctuation">,</span> the<span class="token punctuation">,</span> shape<span class="token punctuation">,</span> to<span class="token punctuation">,</span> semi<span class="token punctuation">,</span> transparent<span class="token punctuation">,</span> by<span class="token punctuation">,</span> calling<span class="token punctuation">,</span> set_trans<span class="token punctuation">,</span> <span class="token number">5</span>（默认的是standard）\n\nsimple analyzer：set<span class="token punctuation">,</span> the<span class="token punctuation">,</span> shape<span class="token punctuation">,</span> to<span class="token punctuation">,</span> semi<span class="token punctuation">,</span> transparent<span class="token punctuation">,</span> by<span class="token punctuation">,</span> calling<span class="token punctuation">,</span> set<span class="token punctuation">,</span> trans\n\nwhitespace analyzer：Set<span class="token punctuation">,</span> the<span class="token punctuation">,</span> shape<span class="token punctuation">,</span> to<span class="token punctuation">,</span> semi-transparent<span class="token punctuation">,</span> by<span class="token punctuation">,</span> calling<span class="token punctuation">,</span> set_trans(<span class="token number">5</span>)\n\nstop analyzer<span class="token operator">:</span> 移除停用词，比如a the it等等\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>测试</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>POST _analyze\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;stop&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Set the shape to semi-transparent by calling set_trans(5)&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><h2 id="分词器工作流程" tabindex="-1"><a class="header-anchor" href="#分词器工作流程" aria-hidden="true">#</a> 分词器工作流程</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><ol><li>切分词语</li><li>normalization(时态转换，单复数转换)</li></ol></div><p>给你一段句子，然后将这段句子拆分成一个一个的单个的单词，同时对每个单词进行normalization（时态转换，单复数转换）</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>character filter：在一段文本进行分词之前，先进行预处理，比如说最常见的就是，过滤html标签（&lt;span&gt;hello&lt;span&gt; --&gt; hello），&amp; --&gt; and （I&amp;you --&gt; I and you）\n\ntokenizer：分词，hello you and me --&gt; hello<span class="token punctuation">,</span> you<span class="token punctuation">,</span> and<span class="token punctuation">,</span> me\n\ntoken filter：lowercase，stop word，synonymom，liked --&gt; like，Tom --&gt; tom，a/the/an --&gt; 干掉，small --&gt; little\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>一个分词器，很重要，将一段文本进行各种处理，最后处理好的结果才会拿去建立倒排索引</p><h2 id="定制分词器" tabindex="-1"><a class="header-anchor" href="#定制分词器" aria-hidden="true">#</a> 定制分词器</h2><h3 id="默认的分词器" tabindex="-1"><a class="header-anchor" href="#默认的分词器" aria-hidden="true">#</a> 默认的分词器</h3><ol><li>standard tokenizer：以单词边界进行切分</li><li>standard token filter：什么都不做</li><li>lowercase token filter：将所有字母转换为小写</li><li>stop token filer（默认被禁用）：移除停用词，比如a the it等等</li></ol><h3 id="修改分词器的设置" tabindex="-1"><a class="header-anchor" href="#修改分词器的设置" aria-hidden="true">#</a> 修改分词器的设置</h3><p>启用english停用词token filter</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code># es_std 自己定义的一个名称\nPUT /my_index\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;analysis&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;es_std&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;standard&quot;</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;stopwords&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_english_&quot;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nGET /my_index/_analyze\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;standard&quot;</span><span class="token punctuation">,</span> \n  <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;a dog is in the house&quot;</span>\n<span class="token punctuation">}</span>\n\nGET /my_index/_analyze\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es_std&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;text&quot;</span><span class="token operator">:</span><span class="token string">&quot;a dog is in the house&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>​</p><p>定制化自己的分词器</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>PUT /my_index\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;analysis&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;char_filter&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;&amp;_to_and&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mapping&quot;</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&quot;&amp;=&gt; and&quot;</span>\n          <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;filter&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;my_stopwords&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;stop&quot;</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;stopwords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&quot;the&quot;</span><span class="token punctuation">,</span>\n            <span class="token string">&quot;a&quot;</span>\n          <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;my_analyzer&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;char_filter&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&quot;html_strip&quot;</span><span class="token punctuation">,</span>\n            <span class="token string">&quot;&amp;_to_and&quot;</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;tokenizer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;standard&quot;</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;filter&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&quot;lowercase&quot;</span><span class="token punctuation">,</span>\n            <span class="token string">&quot;my_stopwords&quot;</span>\n          <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nGET /my_index/_analyze\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tom&amp;jerry are a friend in the house, &lt;a&gt;, HAHA!!&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my_analyzer&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p>​</p><h2 id="ik分词器" tabindex="-1"><a class="header-anchor" href="#ik分词器" aria-hidden="true">#</a> IK分词器</h2><h3 id="ik配置文件" tabindex="-1"><a class="header-anchor" href="#ik配置文件" aria-hidden="true">#</a> ik配置文件</h3><blockquote><p>IK分词器源码下载：https://github.com/medcl/elasticsearch-analysis-ik/tree</p><p>ik配置文件地址：es/plugins/ik/config目录</p></blockquote><ol><li>main.dic：ik原生内置的中文词库，总共有27万多条，只要是这些单词，都会被分在一起</li><li>stopword.dic：英文停用词</li><li>suffix.dic：放了一些后缀</li><li>quantifier.dic：放了一些单位相关的词</li><li>surname.dic：中国的姓氏</li><li>IKAnalyzer.cfg.xml：用来配置自定义词库</li></ol><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">properties</span> <span class="token name">SYSTEM</span> <span class="token string">&quot;http://java.sun.com/dtd/properties.dtd&quot;</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>comment</span><span class="token punctuation">&gt;</span></span>IK Analyzer 扩展配置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>comment</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token comment">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ext_dict<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>\n\t <span class="token comment">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ext_stopwords<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token comment">&lt;!--用户可以在这里配置远程扩展字典 --&gt;</span>\n\t<span class="token comment">&lt;!-- &lt;entry key=&quot;remote_ext_dict&quot;&gt;words_location&lt;/entry&gt; --&gt;</span>\n\t<span class="token comment">&lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span>\n\t<span class="token comment">&lt;!-- &lt;entry key=&quot;remote_ext_stopwords&quot;&gt;words_location&lt;/entry&gt; --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>ik原生最重要的两个配置文件</p><ol><li>main.dic：包含了原生的中文词语，会按照这个里面的词语去分词</li><li>stopword.dic：包含了英文的停用词 (一般，像停用词，会在分词的时候，直接被干掉，不会建立在倒排索引中)</li></ol><h3 id="ik分词器自定义词库❤️" tabindex="-1"><a class="header-anchor" href="#ik分词器自定义词库❤️" aria-hidden="true">#</a> IK分词器自定义词库❤️</h3><h4 id="自己建立词库" tabindex="-1"><a class="header-anchor" href="#自己建立词库" aria-hidden="true">#</a> 自己建立词库</h4><p>自己建立词库：每年都会涌现一些特殊的流行词，网红，蓝瘦香菇，喊麦，鬼畜，一般不会在ik的原生词典里,需要自己补充自己的最新的词语，到ik的词库里面去</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ext_dict<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>custom/ext_stopword.dic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>\ncustom/ext_stopword.dic，已经有了常用的中文停用词，可以补充自己的停用词，然后重启es\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>补充自己的词语，然后需要重启es，才能生效</p><p>自己建立停用词库：比如了，的，啥，么，我们可能并不想去建立索引，让人家搜索</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ext_stopwords<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>custom/ext_stopword.dic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>\ncustom/ext_stopword.dic，已经有了常用的中文停用词，可以补充自己的停用词，然后重启es\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="ik热更新" tabindex="-1"><a class="header-anchor" href="#ik热更新" aria-hidden="true">#</a> IK热更新</h3><p>每次都是在es的扩展词典中，手动添加新词语，很坑</p><ol><li>每次添加完，都要重启es才能生效，非常麻烦</li><li>es是分布式的，可能有数百个节点，你不能每次都一个一个节点上面去修改</li></ol><p>es不停机，直接我们在外部某个地方添加新的词语，es中立即热加载到这些新词语</p>',39),p={},e=(0,a(66262).A)(p,[["render",function(n,s){return t}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);