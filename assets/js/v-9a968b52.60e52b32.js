"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[29604],{20361:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-9a968b52",path:"/MySQL/68%207%E7%A7%8DSQL%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/MySQL/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"自定义排序（ORDER BY FIELD）",slug:"自定义排序-order-by-field",children:[]},{level:2,title:"空值NULL排序（ORDER BY IF(ISNULL）)",slug:"空值null排序-order-by-if-isnull",children:[]},{level:2,title:"CASE表达式（CASE···WHEN）",slug:"case表达式-case···when",children:[]},{level:2,title:"分组连接函数（GROUP_CONCAT）",slug:"分组连接函数-group-concat",children:[]},{level:2,title:"子查询提取（with as）",slug:"子查询提取-with-as",children:[]},{level:2,title:"优雅处理数据插入、更新时主键、唯一键重复",slug:"优雅处理数据插入、更新时主键、唯一键重复",children:[]}],filePathRelative:"MySQL/68 7种SQL高级用法.md"}},6649:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(20641).Fv)('<h2 id="自定义排序-order-by-field" tabindex="-1"><a class="header-anchor" href="#自定义排序-order-by-field" aria-hidden="true">#</a> 自定义排序（ORDER BY FIELD）</h2><p>在MySQL中ORDER BY排序除了可以用ASC和DESC之外，还可以使用自定义排序方式来实现</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> movies <span class="token punctuation">(</span>  \n  id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  \n  movie_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  \n  actors <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  \n  price <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">50</span><span class="token punctuation">,</span>  \n  release_date <span class="token keyword">DATE</span>  \n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> movies <span class="token punctuation">(</span>movie_name<span class="token punctuation">,</span> actors<span class="token punctuation">,</span> price<span class="token punctuation">,</span> release_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token string">&#39;咱们结婚吧&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;靳东&#39;</span><span class="token punctuation">,</span> <span class="token number">43.2</span><span class="token punctuation">,</span> <span class="token string">&#39;2013-04-12&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;四大名捕&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘亦菲&#39;</span><span class="token punctuation">,</span> <span class="token number">62.5</span><span class="token punctuation">,</span> <span class="token string">&#39;2013-12-21&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;猎场&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;靳东&#39;</span><span class="token punctuation">,</span> <span class="token number">68.5</span><span class="token punctuation">,</span> <span class="token string">&#39;2017-11-03&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;芳华&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;范冰冰&#39;</span><span class="token punctuation">,</span> <span class="token number">55.0</span><span class="token punctuation">,</span> <span class="token string">&#39;2017-09-15&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;功夫瑜伽&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成龙&#39;</span><span class="token punctuation">,</span> <span class="token number">91.8</span><span class="token punctuation">,</span> <span class="token string">&#39;2017-01-28&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;惊天解密&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;靳东&#39;</span><span class="token punctuation">,</span> <span class="token number">96.9</span><span class="token punctuation">,</span> <span class="token string">&#39;2019-08-13&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;铜雀台&#39;</span><span class="token punctuation">,</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token string">&#39;2025-12-16&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;天下无贼&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘亦菲&#39;</span><span class="token punctuation">,</span> <span class="token number">44.9</span><span class="token punctuation">,</span> <span class="token string">&#39;2004-12-16&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;建国大业&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;范冰冰&#39;</span><span class="token punctuation">,</span> <span class="token number">70.5</span><span class="token punctuation">,</span> <span class="token string">&#39;2009-09-21&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;赛尔号4：疯狂机器城&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;范冰冰&#39;</span><span class="token punctuation">,</span> <span class="token number">58.9</span><span class="token punctuation">,</span> <span class="token string">&#39;2021-07-30&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;花木兰&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘亦菲&#39;</span><span class="token punctuation">,</span> <span class="token number">89.0</span><span class="token punctuation">,</span> <span class="token string">&#39;2020-09-11&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;警察故事&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成龙&#39;</span><span class="token punctuation">,</span> <span class="token number">68.0</span><span class="token punctuation">,</span> <span class="token string">&#39;1985-12-14&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;神话&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成龙&#39;</span><span class="token punctuation">,</span> <span class="token number">86.5</span><span class="token punctuation">,</span> <span class="token string">&#39;2005-12-22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>用法如下：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> movies <span class="token keyword">order</span> <span class="token keyword">by</span> movie_name <span class="token keyword">asc</span><span class="token punctuation">;</span>\n\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> movies <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> FIELD<span class="token punctuation">(</span>movie_name<span class="token punctuation">,</span><span class="token string">&#39;神话&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;猎场&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;芳华&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;花木兰&#39;</span><span class="token punctuation">,</span>\n<span class="token string">&#39;铜雀台&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;警察故事&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;天下无贼&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;四大名捕&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;惊天解密&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;建国大业&#39;</span><span class="token punctuation">,</span>\n<span class="token string">&#39;功夫瑜伽&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;咱们结婚吧&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;赛尔号4：疯狂机器城&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="/images/MySQL/image-20240325123238472.png" alt="image-20240325123238472"></p><h2 id="空值null排序-order-by-if-isnull" tabindex="-1"><a class="header-anchor" href="#空值null排序-order-by-if-isnull" aria-hidden="true">#</a> 空值NULL排序（<strong>ORDER BY IF(ISNULL</strong>）)</h2><p>在MySQL中使用ORDER BY关键字加上我们需要排序的字段名称就可以完成该字段的排序。如果字段中存在NULL值就会对我们的排序结果造成影响。 这时候我们可以使用 <strong>ORDER BY IF(ISNULL(字段), 0, 1)</strong> 语法将NULL值转换成0或1，实现NULL值数据排序到数据集前面还是后面。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> movies <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> actors<span class="token punctuation">,</span> price <span class="token keyword">desc</span><span class="token punctuation">;</span>\n\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> movies <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ISNULL<span class="token punctuation">(</span>actors<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> actors<span class="token punctuation">,</span> price<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="/images/MySQL/image-20240325123448672.png" alt="image-20240325123448672"></p><h2 id="case表达式-case···when" tabindex="-1"><a class="header-anchor" href="#case表达式-case···when" aria-hidden="true">#</a> CASE表达式（CASE···WHEN）</h2><p>在实际开发中我们经常会写很多if ··· else if ··· else，这时候我们可以使用CASE···WHEN表达式解决这个问题。 以学生成绩举例。比如说：学生90分以上评为优秀，分数80-90评为良好，分数60-80评为一般，分数低于60评为“较差”。那么我们可以使用下面这种查询方式：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>\n  student_id <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;学号&#39;</span><span class="token punctuation">,</span>\n  sname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>\n  sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;性别&#39;</span><span class="token punctuation">,</span>\n  age <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span>\n  score <span class="token keyword">float</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>student_id<span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;学生表&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token punctuation">(</span>student_id<span class="token punctuation">,</span> sname<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> age <span class="token punctuation">,</span> score<span class="token punctuation">)</span>\n<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;001&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span>  <span class="token number">95</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;002&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span>  <span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;003&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span>  <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;004&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;赵六&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span>  <span class="token number">74</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;005&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;陈七&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span>  <span class="token number">92</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;006&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;杨八&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span>  <span class="token number">78</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;007&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;周九&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span>  <span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;008&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;吴十&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span>  <span class="token number">91</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;009&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘一&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span>  <span class="token number">87</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;010&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;孙二&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span>  <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>用法</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span><span class="token keyword">case</span> <span class="token keyword">when</span> score <span class="token operator">&gt;</span> <span class="token number">90</span> <span class="token keyword">then</span> <span class="token string">&#39;优秀&#39;</span>\n\t\t\t<span class="token keyword">when</span> score <span class="token operator">&gt;</span> <span class="token number">80</span> <span class="token keyword">then</span> <span class="token string">&#39;良好&#39;</span>\n\t\t\t<span class="token keyword">when</span> score <span class="token operator">&gt;</span> <span class="token number">60</span> <span class="token keyword">then</span> <span class="token string">&#39;一般&#39;</span>\n\t\t\t<span class="token keyword">else</span> <span class="token string">&#39;较差&#39;</span> <span class="token keyword">end</span> <span class="token keyword">level</span>\n<span class="token keyword">from</span> student<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="/images/MySQL/image-20240325123610546.png" alt="image-20240325123610546"></p><h2 id="分组连接函数-group-concat" tabindex="-1"><a class="header-anchor" href="#分组连接函数-group-concat" aria-hidden="true">#</a> 分组连接函数（GROUP_CONCAT）</h2><p>分组连接函数可以在分组后指定字段的字符串连接方式，并且还可以指定排序逻辑；连接字符串默认为英文逗号。 比如说根据演员进行分组，并将相应的电影名称按照票价进行降序排列，而且电影名称之间通过“_”拼接。用法如下：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> actors<span class="token punctuation">,</span>\nGROUP_CONCAT<span class="token punctuation">(</span>movie_name<span class="token punctuation">)</span><span class="token punctuation">,</span>\nGROUP_CONCAT<span class="token punctuation">(</span>price<span class="token punctuation">)</span> <span class="token keyword">from</span> movies <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> actors<span class="token punctuation">;</span>\n\n<span class="token keyword">select</span> actors<span class="token punctuation">,</span>\nGROUP_CONCAT<span class="token punctuation">(</span>movie_name <span class="token keyword">order</span> <span class="token keyword">by</span> price <span class="token keyword">desc</span> SEPARATOR <span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\nGROUP_CONCAT<span class="token punctuation">(</span>price <span class="token keyword">order</span> <span class="token keyword">by</span> price <span class="token keyword">desc</span> SEPARATOR <span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span> \n<span class="token keyword">from</span> movies <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> actors<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><img src="/images/MySQL/image-20240325123844016.png" alt="image-20240325123844016"></p><h2 id="子查询提取-with-as" tabindex="-1"><a class="header-anchor" href="#子查询提取-with-as" aria-hidden="true">#</a> 子查询提取（with as）</h2><p>如果一整句查询中多个子查询都需要使用同一个子查询的结果，那么就可以用with as将共用的子查询提取出来并取一个别名。后面查询语句可以直接用，对于大量复杂的SQL语句起到了很好的优化作用。 需求：获取演员刘亦菲票价大于50且小于65的数据。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">with</span> m1 <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> movies <span class="token keyword">where</span> price <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n m2 <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> movies <span class="token keyword">where</span> price <span class="token operator">&gt;=</span> <span class="token number">65</span><span class="token punctuation">)</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> m1 <span class="token keyword">where</span> m1<span class="token punctuation">.</span>id <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> m2<span class="token punctuation">.</span>id <span class="token keyword">from</span> m2<span class="token punctuation">)</span> <span class="token operator">and</span> m1<span class="token punctuation">.</span>actors <span class="token operator">=</span> <span class="token string">&#39;刘亦菲&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="/images/MySQL/image-20240325124048952.png" alt="image-20240325124048952"></p><h2 id="优雅处理数据插入、更新时主键、唯一键重复" tabindex="-1"><a class="header-anchor" href="#优雅处理数据插入、更新时主键、唯一键重复" aria-hidden="true">#</a> 优雅处理数据插入、更新时主键、唯一键重复</h2><p>在MySql中插入、更新数据有时会遇到主键重复的场景，通常的做法就是先进行删除在插入达到可重复执行的效果，但是这种方法有时候会错误删除数据。</p><ol><li><strong>插入数据时</strong>我们可以使用<strong>IGNORE</strong>，它的作用是插入的值遇到主键或者唯一键重复时自动忽略重复的数据，不影响后面数据的插入，即<strong>有则忽略，无则插入</strong>。示例如下：</li></ol><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> movies <span class="token keyword">where</span> id <span class="token operator">&gt;=</span> <span class="token number">13</span><span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> movies <span class="token punctuation">(</span>id<span class="token punctuation">,</span> movie_name<span class="token punctuation">,</span> actors<span class="token punctuation">,</span> price<span class="token punctuation">,</span> release_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token string">&#39;神话&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成龙&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;2005-12-22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">IGNORE</span> <span class="token keyword">INTO</span> movies <span class="token punctuation">(</span>id<span class="token punctuation">,</span> movie_name<span class="token punctuation">,</span> actors<span class="token punctuation">,</span> price<span class="token punctuation">,</span> release_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token string">&#39;神话&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成龙&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;2005-12-22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">IGNORE</span> <span class="token keyword">INTO</span> movies <span class="token punctuation">(</span>id<span class="token punctuation">,</span> movie_name<span class="token punctuation">,</span> actors<span class="token punctuation">,</span> price<span class="token punctuation">,</span> release_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token string">&#39;神话2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成龙&#39;</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token string">&#39;2005-12-22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol start="2"><li>还可以使用<strong>REPLACE</strong>关键字，当插入的记录遇到主键或者唯一键重复时先删除表中重复的记录行再插入，即<strong>有则删除+插入，无则插入</strong>，示例如下：</li></ol><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> movies <span class="token punctuation">(</span>id<span class="token punctuation">,</span> movie_name<span class="token punctuation">,</span> actors<span class="token punctuation">,</span> price<span class="token punctuation">,</span> release_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token string">&#39;神话2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成龙&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;2005-12-22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> movies <span class="token punctuation">(</span>id<span class="token punctuation">,</span> movie_name<span class="token punctuation">,</span> actors<span class="token punctuation">,</span> price<span class="token punctuation">,</span> release_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">&#39;神话3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成龙&#39;</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token string">&#39;2005-12-22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li><p>更新数据时使用<strong>on duplicate key update</strong>。它的作用就是当插入的记录遇到主键或者唯一键重复时，会执行后面定义的UPDATE操作。相当于先执行Insert 操作，再根据主键或者唯一键执行update操作，即<strong>有就更新，没有就插入</strong>。示例如下：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> movies <span class="token punctuation">(</span>id<span class="token punctuation">,</span> movie_name<span class="token punctuation">,</span> actors<span class="token punctuation">,</span> price<span class="token punctuation">,</span> release_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">&#39;神话3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成龙&#39;</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token string">&#39;2005-12-22&#39;</span><span class="token punctuation">)</span> <span class="token keyword">on</span> <span class="token keyword">duplicate</span> <span class="token keyword">key</span> <span class="token keyword">update</span> price <span class="token operator">=</span> price <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> movies <span class="token punctuation">(</span>id<span class="token punctuation">,</span> movie_name<span class="token punctuation">,</span> actors<span class="token punctuation">,</span> price<span class="token punctuation">,</span> release_date<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">&#39;神话4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成龙&#39;</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token string">&#39;2005-12-22&#39;</span><span class="token punctuation">)</span> <span class="token keyword">on</span> <span class="token keyword">duplicate</span> <span class="token keyword">key</span> <span class="token keyword">update</span> price <span class="token operator">=</span> price <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ol>',31),t={},e=(0,a(66262).A)(t,[["render",function(n,s){return p}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);