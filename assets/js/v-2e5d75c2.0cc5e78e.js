"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[73519],{45578:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-2e5d75c2",path:"/golang/07%20%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/golang/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"整数",slug:"整数",children:[]},{level:2,title:"浮点数",slug:"浮点数",children:[]},{level:2,title:"布尔",slug:"布尔",children:[]},{level:2,title:"字符串",slug:"字符串",children:[]},{level:2,title:"指针",slug:"指针",children:[]},{level:2,title:"通用的占位符",slug:"通用的占位符",children:[]}],filePathRelative:"golang/07 格式化输出.md"}},96610:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(20641).Fv)('<p>fmt中主要用于输出的函数有:</p><ul><li>Print: 输出到控制台,不接受任何格式化操作</li><li>Println: 输出到控制台并换行</li><li>Printf : 只可以打印出格式化的字符串。只可以直接输出字符串类型的变量（不可以输出别的类型）</li><li>Sprintf：格式化并返回一个字符串而不带任何输出</li><li>Fprintf：来格式化并输出到 io.Writers 而不是 os.Stdout</li></ul><h2 id="整数" tabindex="-1"><a class="header-anchor" href="#整数" aria-hidden="true">#</a> 整数</h2><table><thead><tr><th>格 式</th><th>描 述</th></tr></thead><tbody><tr><td>%b</td><td>整型以二进制方式显示</td></tr><tr><td>%o</td><td>整型以八进制方式显示</td></tr><tr><td>%d</td><td>整型以十进制方式显示</td></tr><tr><td>%x</td><td>整型以十六进制方式显示</td></tr><tr><td>%X</td><td>整型以十六进制、字母大写方式显示</td></tr><tr><td>%c</td><td>相应Unicode码点所表示的字符</td></tr><tr><td>%U</td><td>Unicode 字符, Unicode格式：123，等同于 &quot;U+007B&quot;</td></tr></tbody></table><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>a <span class="token operator">:=</span> <span class="token number">255</span>\nfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;二进制: %b\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>    <span class="token comment">// 11111111</span>\nfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;八进制: %o\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>    <span class="token comment">// 377</span>\nfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;十进制: %d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>    <span class="token comment">// 255</span>\nfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;十六进制: %x\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>   <span class="token comment">//ff</span>\nfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;大写十六进制: %X\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token comment">//FF</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="浮点数" tabindex="-1"><a class="header-anchor" href="#浮点数" aria-hidden="true">#</a> 浮点数</h2><table><thead><tr><th>格 式</th><th>描 述</th></tr></thead><tbody><tr><td>%e</td><td>科学计数法，例如 -1234.456e+78</td></tr><tr><td>%E</td><td>科学计数法，例如 -1234.456E+78</td></tr><tr><td>%f</td><td>有小数点而无指数，例如 123.456</td></tr><tr><td>%g</td><td>根据情况选择 %e 或 %f 以产生更紧凑的（无末尾的0）输出</td></tr><tr><td>%G</td><td>根据情况选择 %E 或 %f 以产生更紧凑的（无末尾的0）输出</td></tr></tbody></table><h2 id="布尔" tabindex="-1"><a class="header-anchor" href="#布尔" aria-hidden="true">#</a> 布尔</h2><table><thead><tr><th>格 式</th><th>描 述</th></tr></thead><tbody><tr><td>%t</td><td>true 或 false</td></tr></tbody></table><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h2><table><thead><tr><th>格 式</th><th>描 述</th></tr></thead><tbody><tr><td>%s</td><td>字符串或切片的无解译字节</td></tr><tr><td>%q</td><td>双引号围绕的字符串，由Go语法安全地转义</td></tr><tr><td>%x</td><td>十六进制，小写字母，每字节两个字符</td></tr><tr><td>%X</td><td>十六进制，大写字母，每字节两个字符</td></tr></tbody></table><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>str <span class="token operator">:=</span> <span class="token string">&quot;Hello world!&quot;</span>\nfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span> <span class="token comment">// Hello world!</span>\nfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%q\\n&quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span> <span class="token comment">// &quot;Hello world!&quot;</span>\nfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%x\\n&quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span> <span class="token comment">// 48656c6c6f20776f726c6421</span>\nfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%X\\n&quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span> <span class="token comment">// 48656C6C6F20776F726C6421</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="指针" tabindex="-1"><a class="header-anchor" href="#指针" aria-hidden="true">#</a> 指针</h2><table><thead><tr><th>格 式</th><th>描 述</th></tr></thead><tbody><tr><td>%p</td><td>十六进制表示，前缀 0x</td></tr></tbody></table><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>name <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>\nfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%p&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token comment">// 0xc000054250</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="通用的占位符" tabindex="-1"><a class="header-anchor" href="#通用的占位符" aria-hidden="true">#</a> 通用的占位符</h2><table><thead><tr><th>格 式</th><th>描 述</th></tr></thead><tbody><tr><td>%v</td><td>值的默认格式。</td></tr><tr><td>%+v</td><td>类似%v，但输出结构体时会添加字段名</td></tr><tr><td>%#v</td><td>相应值的Go语法表示</td></tr><tr><td>%T</td><td>相应值的类型的Go语法表示</td></tr><tr><td>%%</td><td>百分号,字面上的%,非占位符含义</td></tr></tbody></table><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Book <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n\tname  <span class="token builtin">string</span>\n\tprice <span class="token builtin">float64</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tbook <span class="token operator">:=</span> Book<span class="token punctuation">{</span><span class="token string">&quot;Learning Go programming&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">}</span>\n\tfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v\\n&quot;</span><span class="token punctuation">,</span> book<span class="token punctuation">)</span>\n\tfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%+v\\n&quot;</span><span class="token punctuation">,</span> book<span class="token punctuation">)</span> <span class="token comment">// 推荐</span>\n\tfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#v\\n&quot;</span><span class="token punctuation">,</span> book<span class="token punctuation">)</span>\n\tfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%T\\n&quot;</span><span class="token punctuation">,</span> book<span class="token punctuation">)</span>\n\tfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%%\\n&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/**\n{Learning Go programming 100}\n{name:Learning Go programming price:100}\nmain.Book{name:&quot;Learning Go programming&quot;, price:100}\nmain.Book\n%\n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>',18),p={},e=(0,a(66262).A)(p,[["render",function(n,s){return t}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);