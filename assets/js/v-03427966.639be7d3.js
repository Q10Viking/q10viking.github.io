"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[7861],{80202:(n,a,s)=>{s.r(a),s.d(a,{data:()=>p});const p={key:"v-03427966",path:"/concurrency/37%20Data%20Race%20VS%20Race%20Condition.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/concurrency/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Data Race",slug:"data-race",children:[{level:3,title:"Accessing a shared variable",slug:"accessing-a-shared-variable",children:[]},{level:3,title:"long vs double",slug:"long-vs-double",children:[]}]},{level:2,title:"Race Condition",slug:"race-condition",children:[{level:3,title:"Check and update",slug:"check-and-update",children:[]},{level:3,title:"Read and update",slug:"read-and-update",children:[]}]},{level:2,title:"小结",slug:"小结",children:[]}],filePathRelative:"concurrency/37 Data Race VS Race Condition.md"}},74872:(n,a,s)=>{s.r(a),s.d(a,{default:()=>t});const p=(0,s(20641).Fv)('<h2 id="data-race" tabindex="-1"><a class="header-anchor" href="#data-race" aria-hidden="true">#</a> Data Race</h2><img src="/images/concurrency/image-20210630001802371.png" alt="image-20210630001802371"><h3 id="accessing-a-shared-variable" tabindex="-1"><a class="header-anchor" href="#accessing-a-shared-variable" aria-hidden="true">#</a> Accessing a shared variable</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// shared variable</span>\n<span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token class-name">Runnable</span> task1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> x <span class="token operator">=</span> <span class="token number">3</span> <span class="token punctuation">;</span>\n<span class="token class-name">Runnable</span> task2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> x <span class="token operator">=</span> <span class="token number">7</span> <span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>task1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>task2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><img src="/../../../../saas-yong/fullstack/Java架构师之路/Java并发编程/imgs/image-20210630001503288.png" alt="image-20210630001503288"></p><h3 id="long-vs-double" tabindex="-1"><a class="header-anchor" href="#long-vs-double" aria-hidden="true">#</a> long vs double</h3><p>会出现数据紊乱</p><p><img src="/images/concurrency/image-20210630001740929.png" alt="image-20210630001740929"></p><hr><h2 id="race-condition" tabindex="-1"><a class="header-anchor" href="#race-condition" aria-hidden="true">#</a> Race Condition</h2><h3 id="check-and-update" tabindex="-1"><a class="header-anchor" href="#check-and-update" aria-hidden="true">#</a> Check and update</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//  share variable</span>\n<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> loanedBooks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// thread-1 </span>\n<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>loanedBooks<span class="token punctuation">.</span><span class="token function">containskey</span><span class="token punctuation">(</span><span class="token string">&quot;book1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    loanedBooks<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;book1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user3&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// thread-2</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>loanedBooks<span class="token punctuation">.</span><span class="token function">containskey</span><span class="token punctuation">(</span><span class="token string">&quot;book1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    loanedBooks<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;book1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user7&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><img src="/images/concurrency/image-20210630002115645.png" alt="image-20210630002115645"><h4 id="fixing-race-condition-using-lock" tabindex="-1"><a class="header-anchor" href="#fixing-race-condition-using-lock" aria-hidden="true">#</a> Fixing race condition using lock</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//  share variable</span>\n<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> loanedBooks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// lock</span>\n<span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// thread-1 </span>\nlock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>loanedBooks<span class="token punctuation">.</span><span class="token function">containskey</span><span class="token punctuation">(</span><span class="token string">&quot;book1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    loanedBooks<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;book1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user3&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nlock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// thread-2</span>\nlock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>loanedBooks<span class="token punctuation">.</span><span class="token function">containskey</span><span class="token punctuation">(</span><span class="token string">&quot;book1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    loanedBooks<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;book1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user7&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nlock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><img src="/images/concurrency/image-20210630002150288.png" alt="image-20210630002150288"><h4 id="fixing-race-conditioni-using-concurrenthashmap-atomic-operation" tabindex="-1"><a class="header-anchor" href="#fixing-race-conditioni-using-concurrenthashmap-atomic-operation" aria-hidden="true">#</a> Fixing race conditioni using ConcurrentHashMap atomic operation</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//  share variable</span>\n<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> loanedBooks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//thread-1</span>\nloanedBooks<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span><span class="token string">&quot;book1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//thread-2</span>\nloanedBooks<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span><span class="token string">&quot;book1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><hr><h3 id="read-and-update" tabindex="-1"><a class="header-anchor" href="#read-and-update" aria-hidden="true">#</a> Read and update</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//  share variable</span>\n<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token comment">// thread-1</span>\ncount<span class="token operator">++</span><span class="token punctuation">;</span>\n\n<span class="token comment">// thread-2 </span>\ncount<span class="token operator">++</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><img src="/images/concurrency/image-20210630002729979.png" alt="image-20210630002729979"><h4 id="fixing" tabindex="-1"><a class="header-anchor" href="#fixing" aria-hidden="true">#</a> Fixing</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//  share variable</span>\n<span class="token class-name">AtomicInteger</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// thread-1</span>\ncount<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// thread-2 </span>\ncount<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><img src="/images/concurrency/image-20210630002753901.png" alt="image-20210630002753901"><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><p><img src="/images/concurrency/image-20210630003021838.png" alt="image-20210630003021838"></p><p><img src="/images/concurrency/image-20210630003042224.png" alt="image-20210630003042224"></p>',28),e={},t=(0,s(66262).A)(e,[["render",function(n,a){return p}]])},66262:(n,a)=>{a.A=(n,a)=>{const s=n.__vccOpts||n;for(const[n,p]of a)s[n]=p;return s}}}]);