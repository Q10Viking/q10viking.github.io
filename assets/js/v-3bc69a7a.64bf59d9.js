"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[38366],{86499:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-3bc69a7a",path:"/webdev/04%20cors%E9%97%AE%E9%A2%98.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/webdev/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"CORS",slug:"cors",children:[{level:3,title:"浏览器对跨域请求的拦截",slug:"浏览器对跨域请求的拦截",children:[]},{level:3,title:"代码验证",slug:"代码验证",children:[]}]},{level:2,title:"解决跨域(Simple Request)❤️",slug:"解决跨域-simple-request-❤️",children:[]},{level:2,title:"Preflight request⭐",slug:"preflight-request⭐",children:[{level:3,title:"代码验证❤️",slug:"代码验证❤️",children:[]},{level:3,title:"解决跨域",slug:"解决跨域",children:[]},{level:3,title:"express提供cors中间件",slug:"express提供cors中间件",children:[]}]},{level:2,title:"cors相关header说明",slug:"cors相关header说明",children:[{level:3,title:"响应首部字段",slug:"响应首部字段",children:[]},{level:3,title:"请求首部字段",slug:"请求首部字段",children:[]}]},{level:2,title:"跨域问题出现的领域",slug:"跨域问题出现的领域",children:[]},{level:2,title:"使用插件自动添加",slug:"使用插件自动添加",children:[]}],filePathRelative:"webdev/04 cors问题.md"}},58815:(n,s,a)=>{a.r(s),a.d(s,{default:()=>cn});var e=a(20641);const t=(0,e.Fv)('<h2 id="cors" tabindex="-1"><a class="header-anchor" href="#cors" aria-hidden="true">#</a> CORS</h2><p>Cross-Origin Resource Sharing。是浏览器的行为，出于安全原因，浏览器限制从脚本发起的跨源HTTP请求，浏览器通过HTTP的HEADER来判断是否允许加载跨域的资源。</p><blockquote><p>出现跨域的根本原因：浏览器的同源策略不允许非同源的URL之间进行资源的交互</p></blockquote><p>一个跨域的例子，从<code>https://domain-a.com</code>的前端js代码请求<code>https://domain-b.com/data.json</code>提供的数据。</p><p><img src="/images/webdev/image-20220926122703916.png" alt="image-20220926122703916"></p><h3 id="浏览器对跨域请求的拦截" tabindex="-1"><a class="header-anchor" href="#浏览器对跨域请求的拦截" aria-hidden="true">#</a> 浏览器对跨域请求的拦截</h3><blockquote><p>浏览器允许发起跨域请求，但是，跨域请求回来的数据，会被浏览器拦截，无法被页面获取到!</p><p>这是针对简单请求的，如果是预检请求没有返回相应的cors请求头，那么真正的请求不会发送到服务端。</p></blockquote><p><img src="/images/webdev/image-20220926154823739.png" alt="image-20220926154823739"></p><h3 id="代码验证" tabindex="-1"><a class="header-anchor" href="#代码验证" aria-hidden="true">#</a> 代码验证</h3>',9),p={class:"custom-container tip"},o=(0,e.Lk)("p",{class:"custom-container-title"},"TIP",-1),c=(0,e.Lk)("p",null,"验证 1. cors问题的出现. 2.cors只发生在浏览器端",-1),l={href:"https://github.com/Q10Viking/learncode/tree/main/node/08%20cors/01%20browser-action",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Fv)('<blockquote><p>为了方便快速实验cors机制，采用node+express来开发一个简单的web服务器</p></blockquote><p>服务端代码app.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Q10Viking&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;server start at 9000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>客户端代码:</p><blockquote><p>文件说明，项目采用webpack管理，默认不配置webpack.打包的逻辑是src/index.js,打包后成立main.js</p></blockquote>',5),r=(0,e.Lk)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-javascript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token comment"},"// 前端脚本"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"import"),(0,e.eW)(" axios "),(0,e.Lk)("span",{class:"token keyword"},"from"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"axios"'),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" api "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"http://localhost:9000/test"'),(0,e.eW)("\n\naxios"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"get"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("api"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token parameter"},"response"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("response"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("data"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"catch"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token parameter"},"e"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(" console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"cors appear"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br")])],-1),u=(0,e.Lk)("div",{class:"language-html ext-html line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-html"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"<"),(0,e.eW)("body")]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"<"),(0,e.eW)("h2")]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("Cors 实验"),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"</"),(0,e.eW)("h2")]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"<"),(0,e.eW)("div")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token attr-name"},"class"),(0,e.Lk)("span",{class:"token attr-value"},[(0,e.Lk)("span",{class:"token punctuation attr-equals"},"="),(0,e.Lk)("span",{class:"token punctuation"},'"'),(0,e.eW)("person"),(0,e.Lk)("span",{class:"token punctuation"},'"')]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("\n        Hello: "),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"<"),(0,e.eW)("span")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token attr-name"},"id"),(0,e.Lk)("span",{class:"token attr-value"},[(0,e.Lk)("span",{class:"token punctuation attr-equals"},"="),(0,e.Lk)("span",{class:"token punctuation"},'"'),(0,e.eW)("name"),(0,e.Lk)("span",{class:"token punctuation"},'"')]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"</"),(0,e.eW)("span")]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"</"),(0,e.eW)("div")]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"<"),(0,e.eW)("script")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token attr-name"},"src"),(0,e.Lk)("span",{class:"token attr-value"},[(0,e.Lk)("span",{class:"token punctuation attr-equals"},"="),(0,e.Lk)("span",{class:"token punctuation"},'"'),(0,e.eW)("main.js"),(0,e.Lk)("span",{class:"token punctuation"},'"')]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.Lk)("span",{class:"token script"}),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"</"),(0,e.eW)("script")]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"</"),(0,e.eW)("body")]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br")])],-1),i=(0,e.Fv)('<p>浏览器中出现跨域请求<code>http://127.0.0.1:5500/dist/index.html</code>请求<code>http://localhost:9000/test</code>的资源,此时跨域问题出现了</p><p><img src="/images/webdev/image-20220926125820871.png" alt="image-20220926125820871"></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Access to XMLHttpRequest at <span class="token string">&#39;http://localhost:9000/test&#39;</span> from origin <span class="token string">&#39;http://127.0.0.1:5500&#39;</span>\nhas been blocked by CORS policy: No <span class="token string">&#39;Access-Control-Allow-Origin&#39;</span> header is present on the requested resource.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在index.js脚本当中,请求了不同源的资源.浏览器限制加载该资源.(可以看到api接口返回的是200,是可以调通的,但是浏览器限制了资源的加载)</p><p><img src="/images/webdev/image-20220926130314335.png" alt="image-20220926130314335"></p><blockquote><p>在node环境中执行前端的index.js脚本,可以看到有数据.</p></blockquote><p><img src="/images/webdev/image-20220926131603859.png" alt="image-20220926131603859"></p><h2 id="解决跨域-simple-request-❤️" tabindex="-1"><a class="header-anchor" href="#解决跨域-simple-request-❤️" aria-hidden="true">#</a> 解决跨域(Simple Request)❤️</h2>',8),L={href:"https://github.com/Q10Viking/learncode/tree/main/node/08%20cors/01%20browser-action-solved",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Lk)("p",null,"上面的请求资源是一个简单请求(Simple Request).对应的还有预检请求(Preflight request),如自己添加了HTTP header头部信息.",-1),m={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Fv)('<blockquote><p>This operation performs a simple exchange between the client and the server, <strong>using CORS headers to handle the privileges</strong>:</p></blockquote><p><img src="/images/webdev/image-20220926133921077.png" alt="image-20220926133921077"></p><p>从浏览器中查看请求头,发现浏览器自动为我们添加请求头的Origin.要解决cors跨域问题,只需要我们在服务端添加相应的响应头<code>Access-Control-Allow-Origin</code>即可</p><p><img src="/images/webdev/image-20220926133729516.png" alt="image-20220926133729516"></p><p>在服务端(app.js)添加响应头<code>Access-Control-Allow-Origin</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;get req&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// add Access-Control-Allow-Origin header</span>\n    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>\n    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Q10Viking&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;server start at 9000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><img src="/images/webdev/image-20220926135217955.png" alt="image-20220926135217955"></p><h2 id="preflight-request⭐" tabindex="-1"><a class="header-anchor" href="#preflight-request⭐" aria-hidden="true">#</a> Preflight request⭐</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>与简单请求相比，浏览器自己多发送了一个请求</p></div>',9),g={href:"https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Lk)("blockquote",null,[(0,e.Lk)("p",null,"浏览器在发现页面发出的请求非简单请求，并不会立即执行对应的请求代码，而是会触发预先请求模式。预先请求模式会先发送preflight request（预先验证请求），preflight request是一个OPTION请求，用于询问要被跨域访问的服务器，是否允许当前域名下的页面发送跨域的请求。在得到服务器的跨域授权后才能发送真正的HTTP请求。")],-1),W={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Lk)("code",null,"OPTIONS",-1),v={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Method",target:"_blank",rel:"noopener noreferrer"},q=(0,e.Lk)("code",null,"Access-Control-Request-Method",-1),x={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers",target:"_blank",rel:"noopener noreferrer"},w=(0,e.Lk)("code",null,"Access-Control-Request-Headers",-1),y={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin",target:"_blank",rel:"noopener noreferrer"},A=(0,e.Lk)("code",null,"Origin",-1),j=(0,e.Lk)("ol",null,[(0,e.Lk)("li",null,"如下面的案例自己添加了一个X-PINGOTHER的头部信息，在跨域的情况下会先发送预检请求"),(0,e.Lk)("li",null,"然后再发送正真的请求")],-1),C=(0,e.Lk)("p",null,[(0,e.Lk)("img",{src:"/images/webdev/preflight_correct.png",alt:"img"})],-1),O=(0,e.Lk)("h3",{id:"代码验证❤️",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#代码验证❤️","aria-hidden":"true"},"#"),(0,e.eW)(" 代码验证❤️")],-1),T={class:"custom-container tip"},F=(0,e.Lk)("p",{class:"custom-container-title"},"TIP",-1),_=(0,e.Lk)("p",null,"通过自定义头部信息，来发送跨域请求，观察preflight request",-1),H={href:"https://github.com/Q10Viking/learncode/tree/main/node/08%20cors/02%20browser-preflight-request-problem",target:"_blank",rel:"noopener noreferrer"},P=(0,e.Lk)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-javascript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"import"),(0,e.eW)(" express "),(0,e.Lk)("span",{class:"token keyword"},"from"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"express"'),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" app "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"express"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\napp"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"get"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"/test"'),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token parameter"},[(0,e.eW)("req"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("res")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"get req"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n    res"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"json"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token literal-property property"},"name"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.Lk)("span",{class:"token string"},"'Q10Viking'"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"// 添加一个options方法，来观察"),(0,e.eW)("\napp"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"options"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"/test"'),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token parameter"},[(0,e.eW)("req"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("res")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"Preflight Appear"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n    res"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"send"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"finished:)"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n\napp"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"listen"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"9000"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"server start at 9000"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"15"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"16"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"17"),(0,e.Lk)("br")])],-1),E=(0,e.Lk)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-javascript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token comment"},"// 前端脚本"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"import"),(0,e.eW)(" axios "),(0,e.Lk)("span",{class:"token keyword"},"from"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"axios"'),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" api "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"http://localhost:9000/test"'),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" nameEl "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" document"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"getElementById"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"name"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"// 自定义了一个header"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" config "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token literal-property property"},"headers"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n        "),(0,e.Lk)("span",{class:"token string-property property"},"'auth-token'"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'q10viking-token'"),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n\naxios"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"get"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("api"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("config"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"then"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token parameter"},"response"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("response"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("data"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n    nameEl"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("textContent "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" response"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("data"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("name\n    nameEl"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("className "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"success"'),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"catch"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token parameter"},"e"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"cors appear"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n    nameEl"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("className "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"errors"'),(0,e.eW)("\n    nameEl"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("textContent "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"Cors Appear"'),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"15"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"16"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"17"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"18"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"19"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"20"),(0,e.Lk)("br")])],-1),R=(0,e.Fv)('<p>浏览器在发送真正的请求之前（<code>http://localhost:9000/test</code>）先发送了一个请求方法为options的请求。预检请求没有返回相应的cors策略，导致跨域问题出现，真正的请求并没有发送。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Access to XMLHttpRequest at <span class="token string">&#39;http://localhost:9000/test&#39;</span> from origin <span class="token string">&#39;http://127.0.0.1:5500&#39;</span> \nhas been blocked by CORS policy: Response to preflight request doesn<span class="token punctuation">\\</span>&#39;t pass access control check: No <span class="token string">&#39;Access-Control-Allow-Origin&#39;</span> header is present on the requested resource.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="/images/webdev/image-20220926171001344.png" alt="image-20220926171001344"></p><p><img src="/images/webdev/image-20220926171706077.png" alt="image-20220926171706077"></p><p>预检查请求是一个options方法</p><p><img src="/images/webdev/image-20220926171834319.png" alt="image-20220926171834319"></p><h3 id="解决跨域" tabindex="-1"><a class="header-anchor" href="#解决跨域" aria-hidden="true">#</a> 解决跨域</h3>',7),S={href:"https://github.com/Q10Viking/learncode/tree/main/node/08%20cors/02%20browser-preflight-request-solved",target:"_blank",rel:"noopener noreferrer"},N=(0,e.Fv)('<blockquote><p>只需要更改服务端的预检请求即可。app.js</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;get req&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Q10Viking&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 添加一个options方法，来观察</span>\napp<span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Preflight Appear&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 添加允许的跨域的策略</span>\n    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 允许所有来源</span>\n    <span class="token comment">// 由于自定义了头部，需要指定允许跨域指定的头部</span>\n    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;auth-token&quot;</span><span class="token punctuation">)</span>\n    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;finished:)&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;server start at 9000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><img src="/images/webdev/image-20220926173206563.png" alt="image-20220926173206563"></p><h3 id="express提供cors中间件" tabindex="-1"><a class="header-anchor" href="#express提供cors中间件" aria-hidden="true">#</a> express提供cors中间件</h3>',4),z={class:"custom-container tip"},I=(0,e.Lk)("p",{class:"custom-container-title"},"TIP",-1),D={href:"http://expressjs.com/en/resources/middleware/cors.html",target:"_blank",rel:"noopener noreferrer"},M=(0,e.Lk)("p",null,"express提供了cors中间件，专门解决express中跨域的问题，使得我们专注业务开发，不再关注处理跨域的问题。",-1),Q=(0,e.Fv)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> cors\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',1),V=(0,e.Lk)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-javascript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"import"),(0,e.eW)(" express "),(0,e.Lk)("span",{class:"token keyword"},"from"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"express"'),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"import"),(0,e.eW)(" cors "),(0,e.Lk)("span",{class:"token keyword"},"from"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'cors'"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" app "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"express"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"// 使用cors中间件"),(0,e.eW)("\napp"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"use"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token function"},"cors"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n\napp"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"get"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"/test"'),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token parameter"},[(0,e.eW)("req"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("res")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"get req"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n    res"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"json"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token literal-property property"},"name"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.Lk)("span",{class:"token string"},"'Q10Viking'"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n\napp"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"listen"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"9000"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"server start at 9000"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"15"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"16"),(0,e.Lk)("br")])],-1),U=(0,e.Lk)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-javascript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"import"),(0,e.eW)(" express "),(0,e.Lk)("span",{class:"token keyword"},"from"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"express"'),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" app "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"express"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\napp"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"get"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"/test"'),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token parameter"},[(0,e.eW)("req"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("res")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"get req"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n    res"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"json"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.Lk)("span",{class:"token literal-property property"},"name"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.Lk)("span",{class:"token string"},"'Q10Viking'"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"// 添加一个options方法，来观察"),(0,e.eW)("\napp"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"options"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"/test"'),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token parameter"},[(0,e.eW)("req"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("res")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"Preflight Appear"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token comment"},"// 添加允许的跨域的策略"),(0,e.eW)("\n    res"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"setHeader"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"Access-Control-Allow-Origin"'),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.Lk)("span",{class:"token string"},'"*"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token comment"},"// 允许所有来源"),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token comment"},"// 由于自定义了头部，需要指定允许跨域指定的头部"),(0,e.eW)("\n    res"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"setHeader"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"Access-Control-Allow-Headers"'),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.Lk)("span",{class:"token string"},'"auth-token"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n    res"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"send"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"finished:)"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n\napp"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"listen"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"9000"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    console"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"log"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},'"server start at 9000"'),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"15"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"16"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"17"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"18"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"19"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"20"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"21"),(0,e.Lk)("br")])],-1),B=(0,e.Lk)("h2",{id:"cors相关header说明",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#cors相关header说明","aria-hidden":"true"},"#"),(0,e.eW)(" cors相关header说明")],-1),G=(0,e.Lk)("h3",{id:"响应首部字段",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#响应首部字段","aria-hidden":"true"},"#"),(0,e.eW)(" 响应首部字段")],-1),X={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#http_%E5%93%8D%E5%BA%94%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5",target:"_blank",rel:"noopener noreferrer"},K=(0,e.Fv)('<h4 id="access-control-allow-origin" tabindex="-1"><a class="header-anchor" href="#access-control-allow-origin" aria-hidden="true">#</a> Access-Control-Allow-Origin</h4><blockquote><p>顾名思义,访问控制允许的源,主要在server端设置响应的header</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// means that the resource can be accessed by any origin</span>\nAccess<span class="token operator">-</span>Control<span class="token operator">-</span>Allow<span class="token operator">-</span>Origin<span class="token operator">:</span> <span class="token operator">*</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>If the resource owners at https://bar.other wished to restrict access to the resource to requests only from https://foo.example (i.e., no domain other than https://foo.example can access the resource in a cross-origin manner), they would send</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 严格限制</span>\nAccess<span class="token operator">-</span>Control<span class="token operator">-</span>Allow<span class="token operator">-</span>Origin<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>foo<span class="token punctuation">.</span>example\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><h4 id="access-control-allow-methods" tabindex="-1"><a class="header-anchor" href="#access-control-allow-methods" aria-hidden="true">#</a> Access-Control-Allow-Methods</h4><p>首部字段用于预检请求的响应。其指明了实际请求所允许使用的 HTTP 方法。</p><h4 id="access-control-allow-headers" tabindex="-1"><a class="header-anchor" href="#access-control-allow-headers" aria-hidden="true">#</a> Access-Control-Allow-Headers</h4><p>首部字段用于预检请求的响应。其指明了实际请求中允许携带的首部字段</p><h3 id="请求首部字段" tabindex="-1"><a class="header-anchor" href="#请求首部字段" aria-hidden="true">#</a> 请求首部字段</h3>',11),J={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#http_%E8%AF%B7%E6%B1%82%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5",target:"_blank",rel:"noopener noreferrer"},Y=(0,e.Fv)('<h4 id="origin" tabindex="-1"><a class="header-anchor" href="#origin" aria-hidden="true">#</a> Origin</h4><p>首部字段表明预检请求或实际请求的源站。</p><h4 id="access-control-request-headers" tabindex="-1"><a class="header-anchor" href="#access-control-request-headers" aria-hidden="true">#</a> Access-Control-Request-Headers</h4><p>首部字段用于预检请求。其作用是，将实际请求所携带的首部字段告诉服务器。</p><h2 id="跨域问题出现的领域" tabindex="-1"><a class="header-anchor" href="#跨域问题出现的领域" aria-hidden="true">#</a> 跨域问题出现的领域</h2><p>跨域问题只出现在浏览器端发送的请求。如果是后端发送的请求（如node运行js,或者使用postman测试，则不会出现跨域）</p><p>但是如果是在浏览器，开发插件的话并不会出现跨域的问题。</p><h2 id="使用插件自动添加" tabindex="-1"><a class="header-anchor" href="#使用插件自动添加" aria-hidden="true">#</a> 使用插件自动添加</h2>',8),Z={class:"custom-container tip"},$=(0,e.Lk)("p",{class:"custom-container-title"},"TIP",-1),nn={href:"https://microsoftedge.microsoft.com/addons/detail/cors-unblock/hkjklmhkbkdhlgnnfbbcihcajofmjgbh?hl=zh-CN",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://add0n.com/access-control.html?version=0.3.4&type=install",target:"_blank",rel:"noopener noreferrer"},an=(0,e.Lk)("p",null,[(0,e.Lk)("img",{src:"/images/webdev/image-20220926175702008.png",alt:"image-20220926175702008"})],-1),en=(0,e.Lk)("p",null,"该插件会自动添加响应的信息，方便开发测试。",-1),tn=(0,e.Lk)("p",null,[(0,e.Lk)("img",{src:"/images/webdev/image-20220926180551648.png",alt:"image-20220926180551648"})],-1),pn=(0,e.Lk)("p",null,"值得注意的是，如果预检请求，尽管返回了响应的cors头部信息，但是如果返回的是不是2xx状态，比如401,那么还是会有跨域的问题。所以该插件尽管添加了这些信息，问题仍然出现。",-1),on={},cn=(0,a(66262).A)(on,[["render",function(n,s){const a=(0,e.g2)("OutboundLink"),on=(0,e.g2)("CodeGroupItem"),cn=(0,e.g2)("CodeGroup");return(0,e.uX)(),(0,e.CE)(e.FK,null,[t,(0,e.Lk)("div",p,[o,c,(0,e.Lk)("p",null,[(0,e.Lk)("a",l,[(0,e.eW)("Source Code"),(0,e.bF)(a)])])]),k,(0,e.bF)(cn,null,{default:(0,e.k6)((()=>[(0,e.bF)(on,{title:"index.js"},{default:(0,e.k6)((()=>[r])),_:1}),(0,e.bF)(on,{title:"index.html"},{default:(0,e.k6)((()=>[u])),_:1})])),_:1}),i,(0,e.Lk)("p",null,[(0,e.Lk)("a",L,[(0,e.eW)("Source Code"),(0,e.bF)(a)])]),b,(0,e.Lk)("p",null,[(0,e.eW)("根据"),(0,e.Lk)("a",m,[(0,e.eW)("Cross-Origin Resource Sharing (CORS) - HTTP | MDN (mozilla.org)"),(0,e.bF)(a)]),(0,e.eW)("提供的解决方案")]),d,(0,e.Lk)("p",null,[(0,e.Lk)("a",g,[(0,e.eW)("Preflight request - MDN Web Docs Glossary: Definitions of Web-related terms | MDN (mozilla.org)"),(0,e.bF)(a)])]),h,(0,e.Lk)("p",null,[(0,e.eW)("It is an "),(0,e.Lk)("a",W,[f,(0,e.bF)(a)]),(0,e.eW)(" request, using three HTTP request headers: "),(0,e.Lk)("a",v,[q,(0,e.bF)(a)]),(0,e.eW)(", "),(0,e.Lk)("a",x,[w,(0,e.bF)(a)]),(0,e.eW)(", and the "),(0,e.Lk)("a",y,[A,(0,e.bF)(a)]),(0,e.eW)(" header.")]),j,C,O,(0,e.Lk)("div",T,[F,_,(0,e.Lk)("p",null,[(0,e.Lk)("a",H,[(0,e.eW)("Source Code"),(0,e.bF)(a)])])]),(0,e.bF)(cn,null,{default:(0,e.k6)((()=>[(0,e.bF)(on,{title:"服务端app.js"},{default:(0,e.k6)((()=>[P])),_:1}),(0,e.bF)(on,{title:"浏览器脚本 index.js"},{default:(0,e.k6)((()=>[E])),_:1})])),_:1}),R,(0,e.Lk)("p",null,[(0,e.Lk)("a",S,[(0,e.eW)("Source Code"),(0,e.bF)(a)])]),N,(0,e.Lk)("div",z,[I,(0,e.Lk)("p",null,[(0,e.Lk)("a",D,[(0,e.eW)("Express cors middleware (expressjs.com)"),(0,e.bF)(a)])]),M]),Q,(0,e.bF)(cn,null,{default:(0,e.k6)((()=>[(0,e.bF)(on,{title:"使用cors"},{default:(0,e.k6)((()=>[V])),_:1}),(0,e.bF)(on,{title:"没有使用cors"},{default:(0,e.k6)((()=>[U])),_:1})])),_:1}),B,G,(0,e.Lk)("p",null,[(0,e.Lk)("a",X,[(0,e.eW)("跨源资源共享（CORS）- 响应首部字段"),(0,e.bF)(a)])]),K,(0,e.Lk)("p",null,[(0,e.Lk)("a",J,[(0,e.eW)("跨源资源共享（CORS） - 请求首部字段"),(0,e.bF)(a)])]),Y,(0,e.Lk)("div",Z,[$,(0,e.Lk)("p",null,[(0,e.Lk)("a",nn,[(0,e.eW)("CORS Unblock - Microsoft Edge 插件下载地址"),(0,e.bF)(a)])]),(0,e.Lk)("p",null,[(0,e.Lk)("a",sn,[(0,e.eW)("Access Control-Allow-Origin - Unblock :: 该插件首页"),(0,e.bF)(a)])])]),an,en,tn,pn],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);