"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[20247],{21925:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-3c57c7c6",path:"/minifrontendproject/44%20shopping.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/minifrontendproject/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"整体居中布局",slug:"整体居中布局",children:[]},{level:2,title:"激活导航栏的菜单",slug:"激活导航栏的菜单",children:[]},{level:2,title:"ts+axios+vue组件获取数据",slug:"ts-axios-vue组件获取数据",children:[]},{level:2,title:"Composables 思想",slug:"composables-思想",children:[]},{level:2,title:"目前用到Vue3的知识",slug:"目前用到vue3的知识",children:[]},{level:2,title:"项目问题",slug:"项目问题",children:[]},{level:2,title:"引入pina",slug:"引入pina",children:[]},{level:2,title:"引入VueRouter",slug:"引入vuerouter",children:[]},{level:2,title:"Vue3开发小技巧",slug:"vue3开发小技巧",children:[]},{level:2,title:"深层次修改组件样式",slug:"深层次修改组件样式",children:[]},{level:2,title:"功能",slug:"功能",children:[]},{level:2,title:"css技巧",slug:"css技巧",children:[{level:3,title:"文字",slug:"文字",children:[]}]},{level:2,title:"数据懒加载",slug:"数据懒加载",children:[]},{level:2,title:"render函数使用",slug:"render函数使用",children:[]}],filePathRelative:"minifrontendproject/44 shopping.md"}},81136:(n,s,a)=>{a.r(s),a.d(s,{default:()=>_});var e=a(20641);const t=(0,e.Fv)('<h2 id="整体居中布局" tabindex="-1"><a class="header-anchor" href="#整体居中布局" aria-hidden="true">#</a> 整体居中布局</h2><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// 容器的宽度</span>\n<span class="token selector">.container</span><span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 1240px<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="激活导航栏的菜单" tabindex="-1"><a class="header-anchor" href="#激活导航栏的菜单" aria-hidden="true">#</a> 激活导航栏的菜单</h2>',3),p={href:"https://stackoverflow.com/questions/48857670/toggle-active-class-on-list-menu-items-vue-js/73872765#73872765",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Fv)('<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>titles<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span>\n        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(title, index) in titles<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ active: active === index }<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateActive(index)<span class="token punctuation">&quot;</span></span>\n      <span class="token punctuation">&gt;</span></span>\n        {{ title }}\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>\n<span class="token keyword">const</span> titles <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token string">&quot;首页&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;美食&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;服饰&quot;</span>\n<span class="token punctuation">]</span>\n<span class="token keyword">const</span> active <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token keyword">function</span> <span class="token function">updateActive</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">val</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  active<span class="token punctuation">.</span>value <span class="token operator">=</span> val\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="ts-axios-vue组件获取数据" tabindex="-1"><a class="header-anchor" href="#ts-axios-vue组件获取数据" aria-hidden="true">#</a> ts+axios+vue组件获取数据</h2><p>axios获取数据的，以及API数据类型的封装</p><h2 id="composables-思想" tabindex="-1"><a class="header-anchor" href="#composables-思想" aria-hidden="true">#</a> Composables 思想</h2>',4),l={class:"custom-container tip"},c=(0,e.Lk)("p",{class:"custom-container-title"},"TIP",-1),u=(0,e.Lk)("p",null,"代码复用的思想",-1),r={href:"https://vuejs.org/guide/reusability/composables.html",target:"_blank",rel:"noopener noreferrer"},i={href:"https://vueuse.org/core/useWindowScroll/#usewindowscroll",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Lk)("div",{class:"language-tsx ext-tsx line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-tsx"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"import"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)(" ref "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"from"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"vue"'),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"import"),(0,e.eW)(" useEventListener "),(0,e.Lk)("span",{class:"token keyword"},"from"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"./useEventListener"'),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"// 参考：https://vueuse.org/core/useWindowScroll/#usewindowscroll"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"// https://vuejs.org/guide/reusability/composables.html"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token keyword"},"export"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"default"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"function"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"useWindowScroll"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" x "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"ref"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("window"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("scrollX"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"const"),(0,e.eW)(" y "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"ref"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("window"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("scrollY"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n\n  "),(0,e.Lk)("span",{class:"token keyword"},"function"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"scrollerListener"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    x"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("value "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" window"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("scrollX\n    y"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("value "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" window"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.eW)("scrollY\n  "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n\n  "),(0,e.Lk)("span",{class:"token function"},"useEventListener"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("window"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"scroll"'),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" scrollerListener"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"return"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)(" x"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" y "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"15"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"16"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"17"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"18"),(0,e.Lk)("br")])],-1),b=(0,e.Lk)("div",{class:"language-tsx ext-tsx line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-tsx"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"import"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)(" onMounted"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" onUnmounted "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"from"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"vue"'),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token keyword"},"type"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"Target"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" Window "),(0,e.Lk)("span",{class:"token operator"},"|"),(0,e.eW)(" HTMLElement\n"),(0,e.Lk)("span",{class:"token keyword"},"type"),(0,e.eW)(),(0,e.Lk)("span",{class:"token class-name"},"Callback"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"void"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token keyword"},"export"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"default"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"function"),(0,e.eW)(),(0,e.Lk)("span",{class:"token function"},"useEventListener"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("\n  target"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(" Target"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  event"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(),(0,e.Lk)("span",{class:"token builtin"},"string"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  callback"),(0,e.Lk)("span",{class:"token operator"},":"),(0,e.eW)(" Callback\n"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token function"},"onMounted"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    target"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"addEventListener"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("event"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" callback"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n\n  "),(0,e.Lk)("span",{class:"token function"},"onUnmounted"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"=>"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"{"),(0,e.eW)("\n    target"),(0,e.Lk)("span",{class:"token punctuation"},"."),(0,e.Lk)("span",{class:"token function"},"removeEventListener"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("event"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(" callback"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},"}"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"15"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"16"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"17"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"18"),(0,e.Lk)("br")])],-1),d=(0,e.Fv)('<h2 id="目前用到vue3的知识" tabindex="-1"><a class="header-anchor" href="#目前用到vue3的知识" aria-hidden="true">#</a> 目前用到Vue3的知识</h2><ul><li>ts</li><li>单文件组件</li><li>Composables复用思想</li><li>列表渲染</li><li>条件渲染</li><li>生命周期mounted,onMounted运用</li><li>computed属性</li><li>vite</li><li>props</li><li>store</li><li>router</li><li>style</li><li>自定义插件</li><li>watch ref数据或者watch props数据</li><li>ref和unref</li><li>Transition</li></ul><h2 id="项目问题" tabindex="-1"><a class="header-anchor" href="#项目问题" aria-hidden="true">#</a> 项目问题</h2>',3),m={href:"https://github.com/vitejs/vite/issues/965",target:"_blank",rel:"noopener noreferrer"},g=(0,e.Fv)('<p>shims-vue.d.ts文件的作用，解决ide中main.ts文件中导入vue组件报错的问题</p><p><img src="/images/minifrontendproject/image-20221011173437831.png" alt="image-20221011173437831"></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">/* eslint-disable */</span>\n<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&quot;*.vue&quot;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> DefineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>\n  <span class="token keyword">const</span> component<span class="token operator">:</span> DefineComponent<span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span>\n  <span class="token keyword">export</span> <span class="token keyword">default</span> component\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="引入pina" tabindex="-1"><a class="header-anchor" href="#引入pina" aria-hidden="true">#</a> 引入pina</h2><p><img src="/images/minifrontendproject/image-20221011184120640.png" alt="image-20221011184120640"></p><p>注意事项</p><blockquote><p>直接访问state</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// count不是响应式的</span>\n<span class="token keyword">const</span> count <span class="token operator">=</span> categoryStore<span class="token punctuation">.</span>count \n<span class="token comment">// 响应式</span>\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> categoryStore<span class="token punctuation">.</span>count<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="/images/minifrontendproject/image-20221011221328233.png" alt="image-20221011221328233"></p><p><img src="/images/minifrontendproject/image-20221011221230896.png" alt="image-20221011221230896"></p><blockquote><p>访问getter方法，在setup方式编程中，尽管getter方式变成了computed的方式，但是在使用的时候如果不使用computed.仍然还不是响应式的</p></blockquote><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// doubleCount不是响应式的</span>\n<span class="token keyword">const</span> doubleCount <span class="token operator">=</span> categoryStore<span class="token punctuation">.</span>doubleCount\n<span class="token comment">// doubleCount响应式</span>\n<span class="token keyword">const</span> doubleCount <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> categoryStore<span class="token punctuation">.</span>doubleCount<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">export</span> <span class="token keyword">const</span> useCategoryStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&quot;category&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> categoryHeads<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>CategoryHead<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>DefaultCategoryHead<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// getter 方法</span>\n  <span class="token keyword">const</span> doubleCount <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// actions</span>\n  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">initCategoryHead</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    categoryHeads<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">categoryApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    count<span class="token punctuation">.</span>value<span class="token operator">++</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span> categoryHeads<span class="token punctuation">,</span> initCategoryHead<span class="token punctuation">,</span> count<span class="token punctuation">,</span> doubleCount<span class="token punctuation">,</span> increment <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="引入vuerouter" tabindex="-1"><a class="header-anchor" href="#引入vuerouter" aria-hidden="true">#</a> 引入VueRouter</h2>',14),v=(0,e.Lk)("li",null,"好处之一，可以根据路由来解耦代码",-1),L={href:"https://stackoverflow.com/questions/50865828/what-is-the-difference-between-the-views-and-components-folders-in-a-vue-project",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Lk)("h2",{id:"vue3开发小技巧",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#vue3开发小技巧","aria-hidden":"true"},"#"),(0,e.eW)(" Vue3开发小技巧")],-1),f=(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,"v-show+computed控制显示"),(0,e.Lk)("li",null,[(0,e.Lk)("code",null,":deep()"),(0,e.eW)("深层次选择样式")])],-1),w=(0,e.Lk)("h2",{id:"深层次修改组件样式",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#深层次修改组件样式","aria-hidden":"true"},"#"),(0,e.eW)(" 深层次修改组件样式")],-1),y={href:"https://stackoverflow.com/questions/48032006/how-do-i-use-deep-or-or-v-deep-in-vue-js",target:"_blank",rel:"noopener noreferrer"},W=(0,e.Fv)('<p>In Vue 2:</p><ul><li>The <code>/deep/</code> syntax is deprecated</li><li>Use <code>::v-deep</code> with Sass, use <code>&gt;&gt;&gt;</code> without Sass</li></ul><p>In Vue 3:</p><ul><li><code>::v-deep .child-class</code> is deprecated in favor of <code>:deep(.child-class)</code></li><li>The <code>::v-</code> prefix is deprecated in favor of <code>:</code></li><li>The <code>&gt;&gt;&gt;</code> syntax is deprecated</li><li>The <code>/deep/</code> syntax is deprecated</li><li>There are new <code>:slotted</code> and <code>:global</code> selectors</li></ul><p>With every version/syntax, the <code>&lt;style&gt;</code> tag for this component must be <code>scoped</code>:</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token selector">::v-deep .prev </span><span class="token punctuation">{</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> 27rem<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// scss</span>\n<span class="token punctuation">:</span><span class="token function">deep</span><span class="token punctuation">(</span>.prev<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> 27rem<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h2>',7),x=(0,e.Fv)('<li><p>骨架风格显示</p></li><li><p>使用watch，当数据加载完成的时候，自动播放轮播图</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">watch</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>slides<span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token parameter">newvalue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>newvalue<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">autoPlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li>',2),q=(0,e.Fv)('<p>使用属性自定义轮播图组件</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CarouselComponent</span>\n        <span class="token attr-name">:slides</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>banners<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:duration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2000<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">autoPlay</span>\n      <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CarouselComponent</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>值得注意的是，传入number属性的时候，使用v-bind的方式，默认都是按字符串来处理的</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 正确✔</span>\n<span class="token operator">:</span>duration<span class="token operator">=</span><span class="token string">&quot;2000&quot;</span>\n<span class="token comment">// 错误❌</span>\nduration<span class="token operator">=</span><span class="token string">&quot;2000&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',4),C={href:"https://github.com/vuejs/vue/issues/1704",target:"_blank",rel:"noopener noreferrer"},j=(0,e.Lk)("code",null,"Evan You的解答",-1),I=(0,e.Fv)('<p><img src="/images/minifrontendproject/image-20221012214030595.png" alt="image-20221012214030595"></p><h2 id="css技巧" tabindex="-1"><a class="header-anchor" href="#css技巧" aria-hidden="true">#</a> css技巧</h2><h3 id="文字" tabindex="-1"><a class="header-anchor" href="#文字" aria-hidden="true">#</a> 文字</h3><p><img src="/images/minifrontendproject/image-20221013013036325.png" alt="image-20221013013036325"></p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token selector">.name </span><span class="token punctuation">{</span>\n    <span class="token comment">// 需要给宽度</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0 1rem<span class="token punctuation">;</span>\n    \n    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>\n    <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>可以封装成mixin</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// 文字省略号</span>\n<span class="token keyword">@mixin</span> <span class="token function">textEllipse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>\n    <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.name </span><span class="token punctuation">{</span>\n    <span class="token keyword">@include</span> <span class="token function">textEllipse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 需要给宽度</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0 1rem<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 2.2rem<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="数据懒加载" tabindex="-1"><a class="header-anchor" href="#数据懒加载" aria-hidden="true">#</a> 数据懒加载</h2>',8),F={href:"https://vueuse.org/core/useintersectionobserver/",target:"_blank",rel:"noopener noreferrer"},O={href:"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver",target:"_blank",rel:"noopener noreferrer"},E=(0,e.Fv)('<div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// 订阅事件</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useIntersectionObserver</span><span class="token punctuation">(</span>\n  target<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  callback<span class="token operator">:</span> IntersectionObserverCallback<span class="token punctuation">,</span>\n  options<span class="token operator">:</span> IntersectionObserverInit <span class="token operator">=</span> <span class="token punctuation">{</span>\n    rootMargin<span class="token operator">:</span> <span class="token string">&quot;0px&quot;</span><span class="token punctuation">,</span>\n    threshold<span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;订阅懒加载&quot;</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n  <span class="token comment">// unref 去除响应式</span>\n  observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token function">unref</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// 检测通知</span>\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">useIntersectionObserver</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span> isIntersecting <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> observerElement<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;loaded data&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="render函数使用" tabindex="-1"><a class="header-anchor" href="#render函数使用" aria-hidden="true">#</a> render函数使用</h2><p>面包屑改造</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bread-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bread-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RouterLink</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bread-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RouterLink</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NextIcon</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NextIcon</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parentName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RouterLink</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parentPath<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bread-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{\n        parentName\n      }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RouterLink</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NextIcon</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NextIcon</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bread-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',5),S={href:"https://sfc.vuejs.org/#eNqlUe1qg0AQfJXlKJyCOf/bNFD6GLU/Ul2jQT3ZPdOW4Lt373JN+gGlJYLi3s7O3Owc1f00mcOMqlBrrqib3KYcoRsmSw6O0MICDdkBtGD0pfPQdn0dOyYPlWcRhGDwNWBqbLZzLyxyBEA41khJGkt/4GYaoU103R10JmJVv2UuQDfWalgyeNSEtXTaJAhkINN3m8uE5t46naZPaaBc5CvvOj/7kILdW4/AlZ2w9s5ARr2U7S0Vcof6Ns543EZl6mRwNWwns2c7yl7ChcvY4FIVHxZKJZZ9XarWuYmLPOem8nvYs7G0y+XP0Dy6bkCDPKyeyb4wkhCXKvvEkcvhAWl12hHSb5zfoD94Pa04WsTKOZa/hntdcCE3H1vEAegdIY46WpXHGOPajs2NT45NFEpO+QH8K0gjcpckg9LXLJd3GdzxsA==",target:"_blank",rel:"noopener noreferrer"},N={},_=(0,a(66262).A)(N,[["render",function(n,s){const a=(0,e.g2)("OutboundLink"),N=(0,e.g2)("CodeGroupItem"),_=(0,e.g2)("CodeGroup");return(0,e.uX)(),(0,e.CE)(e.FK,null,[t,(0,e.Lk)("p",null,[(0,e.Lk)("a",p,[(0,e.eW)("javascript - toggle active class on list menu items - vue js - Stack Overflow"),(0,e.bF)(a)])]),o,(0,e.Lk)("div",l,[c,u,(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.Lk)("a",r,[(0,e.eW)("Vue3 Composables"),(0,e.bF)(a)])]),(0,e.Lk)("li",null,[(0,e.Lk)("a",i,[(0,e.eW)("Vueuse useWindowScroller Example"),(0,e.bF)(a)])])])]),(0,e.bF)(_,null,{default:(0,e.k6)((()=>[(0,e.bF)(N,{title:"useWindowScroll.ts"},{default:(0,e.k6)((()=>[k])),_:1}),(0,e.bF)(N,{title:"useEventListener"},{default:(0,e.k6)((()=>[b])),_:1})])),_:1}),d,(0,e.Lk)("p",null,[(0,e.Lk)("a",m,[(0,e.eW)("Typescript: IDE reports TS2307: Cannot find module error for Vue components imports"),(0,e.bF)(a)])]),g,(0,e.Lk)("ul",null,[v,(0,e.Lk)("li",null,[(0,e.eW)("components与views的区别也在与此，views下面的组件用于router "),(0,e.Lk)("a",L,[(0,e.eW)("StackOverFlow: what-is-the-difference-between-the-views-and-components-folders-in-a-vue-project"),(0,e.bF)(a)])])]),h,f,w,(0,e.Lk)("p",null,[(0,e.Lk)("a",y,[(0,e.eW)("css - How do I use /deep/ or >>> or ::v-deep in Vue.js? - Stack Overflow"),(0,e.bF)(a)])]),W,(0,e.Lk)("ol",null,[x,(0,e.Lk)("li",null,[q,(0,e.Lk)("p",null,[(0,e.Lk)("a",C,[(0,e.eW)("Expected Number, got String. · Issue #1704 · vuejs/vue (github.com)"),(0,e.bF)(a)]),(0,e.eW)(),j])])]),I,(0,e.Lk)("p",null,[(0,e.Lk)("a",F,[(0,e.eW)("useIntersectionObserver | VueUse"),(0,e.bF)(a)])]),(0,e.Lk)("p",null,[(0,e.Lk)("a",O,[(0,e.eW)("IntersectionObserver() - Web APIs | MDN (mozilla.org)"),(0,e.bF)(a)])]),E,(0,e.Lk)("p",null,[(0,e.Lk)("a",S,[(0,e.eW)("Vue SFC Playground (vuejs.org)"),(0,e.bF)(a)])])],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);