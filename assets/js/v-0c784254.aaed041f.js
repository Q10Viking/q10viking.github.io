"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[65851],{360:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-0c784254",path:"/netty/18%20%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%81%9C%E6%AD%A2.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/netty/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"思路",slug:"思路",children:[]},{level:2,title:"Netty中的Group管理单个线程的停止",slug:"netty中的group管理单个线程的停止",children:[{level:3,title:"单线程检测停止模板",slug:"单线程检测停止模板",children:[]}]},{level:2,title:"实现❤️",slug:"实现❤️",children:[{level:3,title:"泛型",slug:"泛型",children:[]},{level:3,title:"测试",slug:"测试",children:[]}]}],filePathRelative:"netty/18 线程的停止.md"}},45218:(n,s,a)=>{a.r(s),a.d(s,{default:()=>L});var t=a(20641);const e=(0,t.Fv)('<h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>一个线程执行run方法，run方法中有一个for循环，那么这个线程就会一直在for循环中运行，那么线程结束，就需要跳出这个for循环。</p><p>一般的做法就是有能够跳出for循环的条件检测。而Netty也是这样实现的.</p></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>started.compareSet<span class="token punctuation">(</span>true,false<span class="token punctuation">)</span> 成功了也退出\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="netty中的group管理单个线程的停止" tabindex="-1"><a class="header-anchor" href="#netty中的group管理单个线程的停止" aria-hidden="true">#</a> Netty中的Group管理单个线程的停止</h2><blockquote><p>线程管理组：结束的promise</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 属性</span>\n<span class="token class-name">AtomicInteger</span> terminatedChildren  <span class="token comment">// 记录结束的线程数量</span>\n<span class="token class-name">Promise</span>   terminationFuture  <span class="token comment">// 本身持有的异步通知</span>\n\n\n\n<span class="token keyword">final</span> <span class="token class-name">FutureListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> terminationListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operationComplete</span><span class="token punctuation">(</span><span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> future<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>terminatedChildren<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> children<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>  \n            <span class="token comment">// 等待所有子线程都结束之后，管理者promise才唤醒</span>\n            terminationFuture<span class="token punctuation">.</span><span class="token function">setSuccess</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// 在创建完单个线程之后，给每个线程的promise设置了一个listener</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">EventExecutor</span> e<span class="token operator">:</span> children<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    e<span class="token punctuation">.</span><span class="token function">terminationFuture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>terminationListener<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="单线程检测停止模板" tabindex="-1"><a class="header-anchor" href="#单线程检测停止模板" aria-hidden="true">#</a> 单线程检测停止模板</h3><blockquote><p>单个线程: 结束的promise</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_NOT_STARTED</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_STARTED</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_SHUTTING_DOWN</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_SHUTDOWN</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_TERMINATED</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token constant">ST_NOT_STARTED</span> <span class="token comment">// 默认持有的任务</span>\n\nstate<span class="token punctuation">.</span>set启动<span class="token constant">ST_STARTED</span>\n                                 其他线程终止state<span class="token punctuation">.</span>set  started<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token constant">ST_SHUTTING_DOWN</span>                                        \n<span class="token keyword">try</span><span class="token punctuation">{</span>\n\t<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t<span class="token comment">// 做任务</span>\n\t\t<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isShutDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          isShutDown的内容就是判断state是否<span class="token operator">&gt;=</span><span class="token constant">ST_SHUTTING_DOWN</span>\n\t\t\t<span class="token keyword">return</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token keyword">finally</span><span class="token punctuation">{</span>\n\tstate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>终止<span class="token punctuation">)</span>\n\tterminatePromise<span class="token punctuation">.</span>setSuccess\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="实现❤️" tabindex="-1"><a class="header-anchor" href="#实现❤️" aria-hidden="true">#</a> 实现❤️</h2><ol><li>状态管理维护和更新</li><li>volatile状态多线程可见性</li></ol>',11),p={href:"https://github.com/Q10Viking/learncode/tree/main/threads/_03-netty-thread/netty-thread/src/main/java/org/hzz/shutdown",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**-------------状态----------------------*/</span>\n<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicIntegerFieldUpdater</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EventChild</span><span class="token punctuation">&gt;</span></span> <span class="token constant">STATE_UPDATE</span> <span class="token operator">=</span> <span class="token class-name">AtomicIntegerFieldUpdater</span><span class="token punctuation">.</span><span class="token function">newUpdater</span><span class="token punctuation">(</span>\n    <span class="token class-name">EventChild</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;state&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_NOT_STARTED</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_STARTED</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_SHUTTING_DOWN</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_SHUTDOWN</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ST_TERMINATED</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token constant">ST_NOT_STARTED</span><span class="token punctuation">;</span>\n<span class="token doc-comment comment">/**--------------状态---------------------*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',1),c={href:"https://www.processon.com/view/link/643a4424f429cb411fa4683d",target:"_blank",rel:"noopener noreferrer"},k=(0,t.Lk)("p",null,[(0,t.Lk)("img",{src:"/images/netty/关闭线程.png",alt:"关闭线程"})],-1),l=(0,t.Lk)("div",{class:"language-java ext-java line-numbers-mode"},[(0,t.Lk)("pre",{class:"language-java"},[(0,t.Lk)("code",null,[(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"EventGroup"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"implements"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ShutDown"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"MAX_CHILDREN"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token constant"},"MAX_CHILDREN"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Runtime"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getRuntime"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"availableProcessors"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"*"),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"2"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Executor"),(0,t.eW)(" executor"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"EventChild"),(0,t.Lk)("span",{class:"token punctuation"},"["),(0,t.Lk)("span",{class:"token punctuation"},"]"),(0,t.eW)(" childrens"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Promise"),(0,t.Lk)("span",{class:"token generics"},[(0,t.Lk)("span",{class:"token punctuation"},"<"),(0,t.Lk)("span",{class:"token operator"},"?"),(0,t.Lk)("span",{class:"token punctuation"},">")]),(0,t.eW)(" terminationFuture "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"DefaultPromise"),(0,t.Lk)("span",{class:"token generics"},[(0,t.Lk)("span",{class:"token punctuation"},"<"),(0,t.Lk)("span",{class:"token class-name"},"Void"),(0,t.Lk)("span",{class:"token punctuation"},">")]),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"AtomicInteger"),(0,t.eW)(" terminatedChildren "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"AtomicInteger"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token number"},"0"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"EventGroup"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"MAX_CHILDREN"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"EventGroup"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" maxChildren"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        maxChildren "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" maxChildren "),(0,t.Lk)("span",{class:"token operator"},"=="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"0"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"?"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"MAX_CHILDREN"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},":"),(0,t.eW)(" maxChildren"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        executor "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"MyExecutor"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        childrens "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"EventChild"),(0,t.Lk)("span",{class:"token punctuation"},"["),(0,t.eW)("maxChildren"),(0,t.Lk)("span",{class:"token punctuation"},"]"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"for"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" i "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"0"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)(" i "),(0,t.Lk)("span",{class:"token operator"},"<"),(0,t.eW)(" maxChildren"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)(" i"),(0,t.Lk)("span",{class:"token operator"},"++"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            childrens"),(0,t.Lk)("span",{class:"token punctuation"},"["),(0,t.eW)("i"),(0,t.Lk)("span",{class:"token punctuation"},"]"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"EventChild"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("executor"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("i"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token comment"},"// add shutdown listeners"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token class-name"},"FutureListener"),(0,t.Lk)("span",{class:"token generics"},[(0,t.Lk)("span",{class:"token punctuation"},"<"),(0,t.Lk)("span",{class:"token class-name"},"Object"),(0,t.Lk)("span",{class:"token punctuation"},">")]),(0,t.eW)(" listener "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" future "),(0,t.Lk)("span",{class:"token operator"},"->"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("terminatedChildren"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"incrementAndGet"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"=="),(0,t.eW)(" childrens"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("length"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                terminationFuture"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"setSuccess"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"null"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n\n        "),(0,t.Lk)("span",{class:"token keyword"},"for"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"EventChild"),(0,t.eW)(" children "),(0,t.Lk)("span",{class:"token operator"},":"),(0,t.eW)(" childrens"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            children"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"getTerminationFuture"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"addListener"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("listener"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Promise"),(0,t.Lk)("span",{class:"token generics"},[(0,t.Lk)("span",{class:"token punctuation"},"<"),(0,t.Lk)("span",{class:"token operator"},"?"),(0,t.Lk)("span",{class:"token punctuation"},">")]),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"shutdownGracefully"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"for"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"EventChild"),(0,t.eW)(" children "),(0,t.Lk)("span",{class:"token operator"},":"),(0,t.eW)(" childrens"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            children"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"shutdownGracefully"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(" terminationFuture"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n")])]),(0,t.Lk)("div",{class:"line-numbers"},[(0,t.Lk)("span",{class:"line-number"},"1"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"2"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"3"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"4"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"5"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"6"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"7"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"8"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"9"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"10"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"11"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"12"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"13"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"14"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"15"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"16"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"17"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"18"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"19"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"20"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"21"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"22"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"23"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"24"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"25"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"26"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"27"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"28"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"29"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"30"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"31"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"32"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"33"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"34"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"35"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"36"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"37"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"38"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"39"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"40"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"41"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"42"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"43"),(0,t.Lk)("br")])],-1),u=(0,t.Lk)("div",{class:"language-java ext-java line-numbers-mode"},[(0,t.Lk)("pre",{class:"language-java"},[(0,t.Lk)("code",null,[(0,t.Lk)("span",{class:"token annotation punctuation"},"@Slf4j"),(0,t.eW)("\n"),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"EventChild"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"implements"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"ShutDown"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.Lk)("span",{class:"token class-name"},"Runnable"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" id"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Executor"),(0,t.eW)(" executor"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token doc-comment comment"},"/**-------------状态----------------------*/"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"AtomicIntegerFieldUpdater"),(0,t.Lk)("span",{class:"token generics"},[(0,t.Lk)("span",{class:"token punctuation"},"<"),(0,t.Lk)("span",{class:"token class-name"},"EventChild"),(0,t.Lk)("span",{class:"token punctuation"},">")]),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"STATE_UPDATE"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"AtomicIntegerFieldUpdater"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"newUpdater"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token class-name"},"EventChild"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token keyword"},"class"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token string"},'"state"'),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"ST_NOT_STARTED"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"1"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"ST_STARTED"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"2"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"ST_SHUTTING_DOWN"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"3"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"ST_SHUTDOWN"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"4"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"static"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"final"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"ST_TERMINATED"),(0,t.eW)(),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token number"},"5"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"volatile"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" state "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"ST_NOT_STARTED"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token doc-comment comment"},"/**--------------状态---------------------*/"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Thread"),(0,t.eW)(" selfThread"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Promise"),(0,t.Lk)("span",{class:"token generics"},[(0,t.Lk)("span",{class:"token punctuation"},"<"),(0,t.Lk)("span",{class:"token operator"},"?"),(0,t.Lk)("span",{class:"token punctuation"},">")]),(0,t.eW)(" terminationFuture "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"new"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"DefaultPromise"),(0,t.Lk)("span",{class:"token generics"},[(0,t.Lk)("span",{class:"token punctuation"},"<"),(0,t.Lk)("span",{class:"token class-name"},"Void"),(0,t.Lk)("span",{class:"token punctuation"},">")]),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"EventChild"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"Executor"),(0,t.eW)(" executor"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"int"),(0,t.eW)(" id"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("executor "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" executor"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("id "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(" id"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        executor"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"execute"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token operator"},"->"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"STATE_UPDATE"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"compareAndSet"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.Lk)("span",{class:"token constant"},"ST_NOT_STARTED"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.Lk)("span",{class:"token constant"},"ST_STARTED"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                log"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"EventChild [{}] state [ST_NOT_STARTED -> ST_STARTED] success"'),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("id"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                selfThread "),(0,t.Lk)("span",{class:"token operator"},"="),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Thread"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"currentThread"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token class-name"},"EventChild"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token keyword"},"else"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                log"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"EventChild [{}] state [ST_NOT_STARTED -> ST_STARTED] failed"'),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("id"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n\n    "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Promise"),(0,t.Lk)("span",{class:"token generics"},[(0,t.Lk)("span",{class:"token punctuation"},"<"),(0,t.Lk)("span",{class:"token operator"},"?"),(0,t.Lk)("span",{class:"token punctuation"},">")]),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"shutdownGracefully"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"STATE_UPDATE"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"compareAndSet"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"ST_STARTED"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"ST_SHUTTING_DOWN"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            log"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"EventChild [{}] state [ST_STARTED -> ST_SHUTTING_DOWN] success"'),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("id"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token comment"},"//do something"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token keyword"},"else"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            log"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"EventChild [{}] state [ST_STARTED -> ST_SHUTTING_DOWN] failed"'),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("id"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"getTerminationFuture"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"private"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"boolean"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"isShuttingDown"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n       "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("state "),(0,t.Lk)("span",{class:"token operator"},"=="),(0,t.eW)(),(0,t.Lk)("span",{class:"token constant"},"ST_SHUTTING_DOWN"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token annotation punctuation"},"@Override"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"void"),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"run"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"try"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"while"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token operator"},"!"),(0,t.Lk)("span",{class:"token function"},"isShuttingDown"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token comment"},"//do something"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token keyword"},"try"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                    "),(0,t.Lk)("span",{class:"token class-name"},"Thread"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"sleep"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token number"},"3000"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                    "),(0,t.Lk)("span",{class:"token class-name"},"System"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.eW)("out"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"println"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"EventChild ["'),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.eW)("id"),(0,t.Lk)("span",{class:"token operator"},"+"),(0,t.Lk)("span",{class:"token string"},'"] is running"'),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)(),(0,t.Lk)("span",{class:"token keyword"},"catch"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token class-name"},"InterruptedException"),(0,t.eW)(" e"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                    e"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"printStackTrace"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n                "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token keyword"},"finally"),(0,t.eW)(),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token keyword"},"if"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token constant"},"STATE_UPDATE"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"compareAndSet"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"this"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.Lk)("span",{class:"token constant"},"ST_SHUTTING_DOWN"),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.Lk)("span",{class:"token constant"},"ST_TERMINATED"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                log"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"EventChild [{}] state [ST_SHUTTING_DOWN -> ST_TERMINATED] success"'),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("id"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.Lk)("span",{class:"token keyword"},"else"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n                log"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"info"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token string"},'"EventChild [{}] state [ST_SHUTTING_DOWN -> ST_TERMINATED] failed"'),(0,t.Lk)("span",{class:"token punctuation"},","),(0,t.eW)("id"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n            "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n            terminationFuture"),(0,t.Lk)("span",{class:"token punctuation"},"."),(0,t.Lk)("span",{class:"token function"},"setSuccess"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token keyword"},"null"),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n\n    "),(0,t.Lk)("span",{class:"token keyword"},"public"),(0,t.eW)(),(0,t.Lk)("span",{class:"token class-name"},"Promise"),(0,t.Lk)("span",{class:"token generics"},[(0,t.Lk)("span",{class:"token punctuation"},"<"),(0,t.Lk)("span",{class:"token operator"},"?"),(0,t.Lk)("span",{class:"token punctuation"},">")]),(0,t.eW)(),(0,t.Lk)("span",{class:"token function"},"getTerminationFuture"),(0,t.Lk)("span",{class:"token punctuation"},"("),(0,t.Lk)("span",{class:"token punctuation"},")"),(0,t.Lk)("span",{class:"token punctuation"},"{"),(0,t.eW)("\n        "),(0,t.Lk)("span",{class:"token keyword"},"return"),(0,t.eW)(" terminationFuture"),(0,t.Lk)("span",{class:"token punctuation"},";"),(0,t.eW)("\n    "),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n"),(0,t.Lk)("span",{class:"token punctuation"},"}"),(0,t.eW)("\n")])]),(0,t.Lk)("div",{class:"line-numbers"},[(0,t.Lk)("span",{class:"line-number"},"1"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"2"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"3"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"4"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"5"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"6"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"7"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"8"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"9"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"10"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"11"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"12"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"13"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"14"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"15"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"16"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"17"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"18"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"19"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"20"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"21"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"22"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"23"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"24"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"25"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"26"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"27"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"28"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"29"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"30"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"31"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"32"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"33"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"34"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"35"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"36"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"37"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"38"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"39"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"40"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"41"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"42"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"43"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"44"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"45"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"46"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"47"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"48"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"49"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"50"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"51"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"52"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"53"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"54"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"55"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"56"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"57"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"58"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"59"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"60"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"61"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"62"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"63"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"64"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"65"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"66"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"67"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"68"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"69"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"70"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"71"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"72"),(0,t.Lk)("br"),(0,t.Lk)("span",{class:"line-number"},"73"),(0,t.Lk)("br")])],-1),i=(0,t.Fv)('<h3 id="泛型" tabindex="-1"><a class="header-anchor" href="#泛型" aria-hidden="true">#</a> 泛型</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GenericFutureListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">F</span> <span class="token keyword">extends</span> <span class="token class-name">Future</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">EventListener</span> <span class="token punctuation">{</span>\n    <span class="token keyword">void</span> <span class="token function">operationComplete</span><span class="token punctuation">(</span><span class="token class-name">F</span> future<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FutureListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">GenericFutureListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Future</span><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Promise</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n    <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">addListener</span><span class="token punctuation">(</span><span class="token class-name">GenericFutureListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Future</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultPromise</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Promise</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>使用</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 使用</span>\n<span class="token keyword">private</span> <span class="token class-name">Promise</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> terminationFuture <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultPromise</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">FutureListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> listener<span class="token punctuation">;</span>\nterminationFuture<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><p><img src="/images/netty/test-shutdown" alt="test"></p><details class="custom-container details"><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestShutdownDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>\n        <span class="token class-name">EventGroup</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventGroup</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;输入任意字符，关闭线程组&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Promise</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> promise <span class="token operator">=</span> group<span class="token punctuation">.</span><span class="token function">shutdownGracefully</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        promise<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>future <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;线程组关闭成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        promise<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;主线程退出&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></details><p><img src="/images/netty/shutdown-result.png" alt="shutdown-result"></p><details class="custom-container details"><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#启动</span>\n<span class="token punctuation">[</span>hzz-thread-0<span class="token punctuation">]</span> INFO org.hzz.shutdown.EventChild - EventChild <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> state <span class="token punctuation">[</span>ST_NOT_STARTED -<span class="token operator">&gt;</span> ST_STARTED<span class="token punctuation">]</span> success\n<span class="token punctuation">[</span>hzz-thread-2<span class="token punctuation">]</span> INFO org.hzz.shutdown.EventChild - EventChild <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> state <span class="token punctuation">[</span>ST_NOT_STARTED -<span class="token operator">&gt;</span> ST_STARTED<span class="token punctuation">]</span> success\n<span class="token punctuation">[</span>hzz-thread-1<span class="token punctuation">]</span> INFO org.hzz.shutdown.EventChild - EventChild <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> state <span class="token punctuation">[</span>ST_NOT_STARTED -<span class="token operator">&gt;</span> ST_STARTED<span class="token punctuation">]</span> success\nEventChild <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> is running\nEventChild <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> is running\nEventChild <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> is running\n<span class="token comment"># 将线程暂停</span>\n输入任意字符，关闭线程池\n<span class="token number">1</span>\n\n<span class="token comment"># 改变状态为了SHUTTING_DOWN</span>\n<span class="token number">13</span>:54:48.001 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO org.hzz.shutdown.EventChild - EventChild <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> state <span class="token punctuation">[</span>ST_STARTED -<span class="token operator">&gt;</span> ST_SHUTTING_DOWN<span class="token punctuation">]</span> success\n<span class="token number">13</span>:54:48.001 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO org.hzz.shutdown.EventChild - EventChild <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> state <span class="token punctuation">[</span>ST_STARTED -<span class="token operator">&gt;</span> ST_SHUTTING_DOWN<span class="token punctuation">]</span> success\n<span class="token number">13</span>:54:48.001 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO org.hzz.shutdown.EventChild - EventChild <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> state <span class="token punctuation">[</span>ST_STARTED -<span class="token operator">&gt;</span> ST_SHUTTING_DOWN<span class="token punctuation">]</span> success\n<span class="token comment"># 虽然已经改变成了SHUITING_DOWN,线程仍然执行完手头的任务</span>\nEventChild <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> is running\nEventChild <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> is running\nEventChild <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> is running\n\n<span class="token comment"># 最后线程全部关闭</span>\n<span class="token punctuation">[</span>hzz-thread-2<span class="token punctuation">]</span> INFO org.hzz.shutdown.EventChild - EventChild <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> state <span class="token punctuation">[</span>ST_SHUTTING_DOWN -<span class="token operator">&gt;</span> ST_TERMINATED<span class="token punctuation">]</span> success\n<span class="token punctuation">[</span>hzz-thread-1<span class="token punctuation">]</span> INFO org.hzz.shutdown.EventChild - EventChild <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> state <span class="token punctuation">[</span>ST_SHUTTING_DOWN -<span class="token operator">&gt;</span> ST_TERMINATED<span class="token punctuation">]</span> success\n<span class="token punctuation">[</span>hzz-thread-0<span class="token punctuation">]</span> INFO org.hzz.shutdown.EventChild - EventChild <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> state <span class="token punctuation">[</span>ST_SHUTTING_DOWN -<span class="token operator">&gt;</span> ST_TERMINATED<span class="token punctuation">]</span> success\n<span class="token punctuation">[</span>hzz-thread-0<span class="token punctuation">]</span> INFO org.hzz.shutdown.TestShutdownDemo - 线程组关闭成功\n<span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO org.hzz.shutdown.TestShutdownDemo - 主线程退出\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></details><p><img src="/images/netty/image-20230415152530916.png" alt="image-20230415152530916"></p>',10),r={},L=(0,a(66262).A)(r,[["render",function(n,s){const a=(0,t.g2)("OutboundLink"),r=(0,t.g2)("common-progresson-snippet"),L=(0,t.g2)("CodeGroupItem"),b=(0,t.g2)("CodeGroup");return(0,t.uX)(),(0,t.CE)(t.FK,null,[e,(0,t.Lk)("p",null,[(0,t.Lk)("a",p,[(0,t.eW)("Source Code"),(0,t.bF)(a)])]),o,(0,t.Lk)("p",null,[(0,t.Lk)("a",c,[(0,t.eW)("关闭线程| ProcessOn免费在线作图,在线流程图,在线思维导图"),(0,t.bF)(a)])]),(0,t.bF)(r,{src:"https://www.processon.com/view/link/643a4424f429cb411fa4683d"}),k,(0,t.bF)(b,null,{default:(0,t.k6)((()=>[(0,t.bF)(L,{title:"EventGroup"},{default:(0,t.k6)((()=>[l])),_:1}),(0,t.bF)(L,{title:"EventChild"},{default:(0,t.k6)((()=>[u])),_:1})])),_:1}),i],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);