"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[74055],{89324:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-bea05ca4",path:"/designpattern/04%20%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/designpattern/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"模式定义",slug:"模式定义",children:[]},{level:2,title:"应用场景",slug:"应用场景",children:[{level:3,title:"优点",slug:"优点",children:[]}]},{level:2,title:"代码示例",slug:"代码示例",children:[]},{level:2,title:"建造者模式与不可变对象配合使用",slug:"建造者模式与不可变对象配合使用",children:[]}],filePathRelative:"designpattern/04 建造者模式.md"}},84528:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var p=a(20641);const t=(0,p.Fv)('<h2 id="模式定义" tabindex="-1"><a class="header-anchor" href="#模式定义" aria-hidden="true">#</a> 模式定义</h2><p>将一个复杂对象的创建与他的表示分离，使得同样的构建过程可以创建 不同的表示</p><p><img src="/images/designpattern/image-20230228102828362.png" alt="image-20230228102828362"></p><h2 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h2><ol><li>需要生成的对象具有复杂的内部结构</li><li>需要生成的对象内部属性本身相互依赖</li><li>与不可变对象配合使用</li></ol><h3 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h3><ol><li>建造者独立，易扩展</li><li>便于控制细节风险</li></ol><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2>',8),e={href:"https://github.com/Q10Viking/learncode/tree/main/designpattern/src/org/hzz/builder/v1",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductBuilder</span> <span class="token punctuation">{</span>\n    <span class="token class-name">ProductBuilder</span> <span class="token function">buildPart1</span><span class="token punctuation">(</span><span class="token class-name">String</span> part1 <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">ProductBuilder</span> <span class="token function">buildPart2</span><span class="token punctuation">(</span><span class="token class-name">String</span> part2 <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">ProductBuilder</span> <span class="token function">buildPart3</span><span class="token punctuation">(</span><span class="token class-name">String</span> part3 <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">ProductBuilder</span> <span class="token function">buildPart4</span><span class="token punctuation">(</span><span class="token class-name">String</span> part4 <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Product</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultProductBuilder</span> <span class="token keyword">implements</span> <span class="token class-name">ProductBuilder</span><span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> part1<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> part2<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> part3<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> part4<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">ProductBuilder</span> <span class="token function">buildPart1</span><span class="token punctuation">(</span><span class="token class-name">String</span> part1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part1<span class="token operator">=</span>part1<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">ProductBuilder</span> <span class="token function">buildPart2</span><span class="token punctuation">(</span><span class="token class-name">String</span> part2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part2<span class="token operator">=</span>part2<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">ProductBuilder</span> <span class="token function">buildPart3</span><span class="token punctuation">(</span><span class="token class-name">String</span> part3<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part3<span class="token operator">=</span>part3<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">ProductBuilder</span> <span class="token function">buildPart4</span><span class="token punctuation">(</span><span class="token class-name">String</span> part4<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part4<span class="token operator">=</span>part4<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">Product</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span>part1<span class="token punctuation">,</span> part2<span class="token punctuation">,</span> part3<span class="token punctuation">,</span> part4 <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><blockquote><p>测试：这种链式结构很舒服</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainTest</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">ProductBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultProductBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Product</span> product <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">buildPart1</span><span class="token punctuation">(</span><span class="token string">&quot;part1&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">buildPart2</span><span class="token punctuation">(</span><span class="token string">&quot;part2&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">buildPart3</span><span class="token punctuation">(</span><span class="token string">&quot;part3&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">buildPart4</span><span class="token punctuation">(</span><span class="token string">&quot;part4&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="建造者模式与不可变对象配合使用" tabindex="-1"><a class="header-anchor" href="#建造者模式与不可变对象配合使用" aria-hidden="true">#</a> 建造者模式与不可变对象配合使用</h2>',5),o={href:"https://github.com/Q10Viking/learncode/tree/main/designpattern/src/org/hzz/builder/v2",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Fv)('<blockquote><p>将Builder放置成了静态内部类</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> part1<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> part2<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> part3<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> part4<span class="token punctuation">;</span>\n    <span class="token comment">//  .....</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token class-name">String</span> part1<span class="token punctuation">,</span> <span class="token class-name">String</span> part2<span class="token punctuation">,</span> <span class="token class-name">String</span> part3<span class="token punctuation">,</span> <span class="token class-name">String</span> part4<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part1<span class="token operator">=</span>part1<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part2<span class="token operator">=</span>part2<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part3<span class="token operator">=</span>part3<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part4<span class="token operator">=</span>part4<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPart1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> part1<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPart1</span><span class="token punctuation">(</span><span class="token class-name">String</span> part1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part1<span class="token operator">=</span>part1<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPart2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> part2<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPart2</span><span class="token punctuation">(</span><span class="token class-name">String</span> part2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part2<span class="token operator">=</span>part2<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPart3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> part3<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPart3</span><span class="token punctuation">(</span><span class="token class-name">String</span> part3<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part3<span class="token operator">=</span>part3<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPart4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> part4<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPart4</span><span class="token punctuation">(</span><span class="token class-name">String</span> part4<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>part4<span class="token operator">=</span>part4<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;Product{&quot;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;part1=&#39;&quot;</span> <span class="token operator">+</span> part1 <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;, part2=&#39;&quot;</span> <span class="token operator">+</span> part2 <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;, part3=&#39;&quot;</span> <span class="token operator">+</span> part3 <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;, part4=&#39;&quot;</span> <span class="token operator">+</span> part4 <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>\n                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\t<span class="token comment">// builder</span>\n    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Builder</span><span class="token punctuation">{</span>\n        <span class="token keyword">private</span>   <span class="token class-name">String</span> part1<span class="token punctuation">;</span>\n        <span class="token keyword">private</span>   <span class="token class-name">String</span> part2<span class="token punctuation">;</span>\n        <span class="token keyword">private</span>   <span class="token class-name">String</span> part3<span class="token punctuation">;</span>\n        <span class="token keyword">private</span>   <span class="token class-name">String</span> part4<span class="token punctuation">;</span>\n\n        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">builderPart1</span><span class="token punctuation">(</span><span class="token class-name">String</span> part1<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>part1<span class="token operator">=</span>part1<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">builderPart2</span><span class="token punctuation">(</span><span class="token class-name">String</span> part2<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>part2<span class="token operator">=</span>part2<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">builderPart3</span><span class="token punctuation">(</span><span class="token class-name">String</span> part3<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>part3<span class="token operator">=</span>part3<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">builderPart4</span><span class="token punctuation">(</span><span class="token class-name">String</span> part4<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>part4<span class="token operator">=</span>part4<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token class-name">Product</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span> part1<span class="token punctuation">,</span>part2<span class="token punctuation">,</span>part3<span class="token punctuation">,</span>part4 <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><blockquote><p>测试</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainTest</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Product</span> product <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">builderPart1</span><span class="token punctuation">(</span><span class="token string">&quot;part1&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">builderPart2</span><span class="token punctuation">(</span><span class="token string">&quot;part2&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">builderPart3</span><span class="token punctuation">(</span><span class="token string">&quot;part3&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">builderPart4</span><span class="token punctuation">(</span><span class="token string">&quot;part4&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',4),u={},r=(0,a(66262).A)(u,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[t,(0,p.Lk)("p",null,[(0,p.Lk)("a",e,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),c,(0,p.Lk)("p",null,[(0,p.Lk)("a",o,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),l],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);