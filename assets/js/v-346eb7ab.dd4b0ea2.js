"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[36114],{8854:(e,t,i)=>{i.r(t),i.d(t,{data:()=>c});const c={key:"v-346eb7ab",path:"/zk/16%20%E6%9D%A1%E4%BB%B6%E6%9B%B4%E6%96%B0.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/zk/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"条件更新",slug:"条件更新",children:[]}],filePathRelative:"zk/16 条件更新.md"}},88252:(e,t,i)=>{i.r(t),i.d(t,{default:()=>a});const c=(0,i(20641).Fv)('<h2 id="条件更新" tabindex="-1"><a class="header-anchor" href="#条件更新" aria-hidden="true">#</a> 条件更新</h2><p>设想用2 /c实现一个counter，使用set命令来实现自增1操作。条件更新场景∶</p><ol><li><p>客户端1把/c更新到版本1，实现/c的自增1。</p></li><li><p>客户端2把/c更新到版本2，实现/c的自增1。</p></li><li><p>客户端1不知道/c已经被客户端⒉更新过了，还用过时的版本1是去更新/c，更新失败。如果客户端1使用的是无条件更新，/c就会更新为2，没有实现自增1。</p></li></ol><p>使用条件更新可以避免出现客户端基于过期的数据进行数据更新的操作</p><p><img src="/images/zk/45535.png" alt="https://note.youdao.com/yws/public/resource/f0549278905bb988c831d6910c54143a/xmlnote/0EF7543E25DE4770B987EFBBB3036483/45535"></p>',5),r={},a=(0,i(66262).A)(r,[["render",function(e,t){return c}]])},66262:(e,t)=>{t.A=(e,t)=>{const i=e.__vccOpts||e;for(const[e,c]of t)i[e]=c;return i}}}]);