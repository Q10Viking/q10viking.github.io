"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[10257],{15256:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-70a6bca3",path:"/Algorithm/121%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Algorithm/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"动态规划",slug:"动态规划",children:[]}],filePathRelative:"Algorithm/121 买卖股票的最佳时机.md"}},39888:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var p=a(20641);const t={class:"custom-container tip"},o=(0,p.Lk)("p",{class:"custom-container-title"},"TIP",-1),e={href:"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Fv)('<h2 id="动态规划" tabindex="-1"><a class="header-anchor" href="#动态规划" aria-hidden="true">#</a> 动态规划</h2><p>定义一个二维数组<code>dp[i][j]</code>，i表示第几天，j用来表示当天是否持股</p><p>j = 0，表示当天不持股，<strong>则<code>dp[i][0]</code>表示第i天不持股时所得利润</strong>；</p><p>j = 1，表示当天持股，<strong>则<code>dp[i][1]</code>表示第i天持股时所得利润</strong></p><p>很明显，第0天, <code>dp[0][0] = 0;dp[0][1]=-prices[0]</code></p><p>对于第i天（今天）来说，它的值当然与i-1（昨天）的值有关</p><p><code>dp[i][0]</code>表示今天不持股，从昨天dp[i-1]到今天有以下两种状态变化:</p><ol><li><code>dp[i-1][0]</code>，表示昨天不持股，到今天什么都不做，自然，<code>dp[i][0]=dp[i-1][0]</code>；</li><li><code>dp[i-1][1]</code>，表示昨天持股，到今天卖出股票，那就是今天所得利润就是按照今天股票价格卖出后所得现金再加上昨天的利润，这两者之和，<code>dp[i][0]=dp[i-1][1]+prices[i]</code></li></ol><blockquote><p>现在<code>dp[i][0]</code>的价格有两种取值，怎么办，当然就是取其中的最大值，也就是 <code>dp[i][0]= max(dp[i-1][0],dp[i-1][1]+prices[i])</code>;</p></blockquote><hr><p><code>dp[i][1]</code>：表示今天持股，从昨天dp[i-1]到今天同样有以下两种状态变化：</p><ol><li><code>dp[i-1][0]</code>，表示昨天不持股，今天买入股票，今天所得利润是多少？等于按今天股票价格买入股票所花现金，只是利润就变成了负数，<code>dp[i][0]=-prices[i]</code></li><li><code>dp[i-1][1]</code>，表示昨天持股，今天什么都不做，自然，<code>dp[i][1]=dp[i-1</code>][1]</li></ol><blockquote><p><code>dp[i][1]</code>自然也是取两者的最大值，<code>dp[i][1] = max(dp[i-1][1],-prices[i])</code></p></blockquote><p>现在不持股表示，原本就又没有股现在也不购买，或者之前有股现在卖了</p><p>现在持股表示，原本没有股票现在买了，或者之前持有股，现在不做选择。</p><p><img src="/images/algorithm/image-20230924235324642.png" alt="image-20230924235324642"></p><p>最终的结果，取dp[len - 1][0]的值，毕竟，只有股票全部卖出去了，才能有真正的利润而言，dp[len - 1][1]表示当天还有股票，自然没什么真正的利润</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prices<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>prices<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token comment">// 初始化</span>\n        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 这天不持有股票：原本就没有,或者之前有，但是选择卖了</span>\n            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// 这天持有股票： 每本持有，和今天购买</span>\n            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">-</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>dp<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',18),l={},u=(0,a(66262).A)(l,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[(0,p.Lk)("div",t,[o,(0,p.Lk)("p",null,[(0,p.Lk)("a",e,[(0,p.eW)("121. 买卖股票的最佳时机"),(0,p.bF)(a)])])]),c],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);