"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[43002],{90659:(a,s,n)=>{n.r(s),n.d(s,{data:()=>e});const e={key:"v-5da70496",path:"/kafka/06%20kafka%E9%9B%86%E7%BE%A4.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/kafka/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"集群搭建",slug:"集群搭建",children:[{level:3,title:"配置",slug:"配置",children:[]},{level:3,title:"启动",slug:"启动",children:[]}]},{level:2,title:"创建一个主题",slug:"创建一个主题",children:[]},{level:2,title:"发送消息",slug:"发送消息",children:[]},{level:2,title:"消费消息",slug:"消费消息",children:[{level:3,title:"测试容错性",slug:"测试容错性",children:[]}]}],filePathRelative:"kafka/06 kafka集群.md"}},10810:(a,s,n)=>{n.r(s),n.d(s,{default:()=>p});const e=(0,n(20641).Fv)('<h2 id="集群搭建" tabindex="-1"><a class="header-anchor" href="#集群搭建" aria-hidden="true">#</a> 集群搭建</h2><p>一个单独的broker意味着kafka集群中只有一个节点。要想增加kafka集群中的节点数量，只需要多启动几个broker实例即可。为了有更好的理解，现在我们在一台机器上同时启动三个broker实例。</p><p>首先，我们需要建立好其他2个broker的配置文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cp</span> config/server.properties config/server-9093.properties\n<span class="token function">cp</span> config/server.properties config/server-9094.properties\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#broker.id属性在kafka集群中必须要是唯一</span>\n<span class="token assign-left variable">broker.id</span><span class="token operator">=</span><span class="token number">1</span>\n<span class="token comment">#kafka部署的机器ip和提供服务的端口号</span>\n<span class="token assign-left variable">listeners</span><span class="token operator">=</span>PLAINTEXT://192.168.65.60:9093   \n<span class="token assign-left variable">log.dir</span><span class="token operator">=</span>/home/q10viking/software/kafka_2.12-2.5.0/kafka-logs-9093\n<span class="token comment">#kafka连接zookeeper的地址，要把多个kafka实例组成集群，对应连接的zookeeper必须相同</span>\n<span class="token assign-left variable">zookeeper.connect</span><span class="token operator">=</span><span class="token number">192.168</span>.65.60:2181\n\n\n\n<span class="token assign-left variable">broker.id</span><span class="token operator">=</span><span class="token number">2</span>\n<span class="token assign-left variable">listeners</span><span class="token operator">=</span>PLAINTEXT://192.168.65.60:9094\n<span class="token assign-left variable">log.dir</span><span class="token operator">=</span>/home/q10viking/software/kafka_2.12-2.5.0/kafka-logs-9094\n<span class="token assign-left variable">zookeeper.connect</span><span class="token operator">=</span><span class="token number">192.168</span>.65.60:2181\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/kafka-server-start.sh <span class="token parameter variable">-daemon</span> config/server.properties   <span class="token comment"># 9092 默认的配置</span>\nbin/kafka-server-start.sh <span class="token parameter variable">-daemon</span> config/server-9093.properties\nbin/kafka-server-start.sh <span class="token parameter variable">-daemon</span> config/server-9094.properties\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="/images/kafka/image-20230422230754044.png" alt="image-20230422230754044"></p><h2 id="创建一个主题" tabindex="-1"><a class="header-anchor" href="#创建一个主题" aria-hidden="true">#</a> 创建一个主题</h2><blockquote><p>这个主题有2个分区，每个分区3个副本</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/kafka-topics.sh <span class="token parameter variable">--create</span> <span class="token parameter variable">--zookeeper</span> <span class="token number">172.29</span>.96.105:2181 --replication-factor <span class="token number">3</span> <span class="token parameter variable">--partitions</span> <span class="token number">2</span> <span class="token parameter variable">--topic</span> terminal-cluster-topic\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>查看这个主题下的分区在broker中的情况</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code> bin/kafka-topics.sh <span class="token parameter variable">--describe</span> <span class="token parameter variable">--zookeeper</span> <span class="token number">172.29</span>.96.105:2181 <span class="token parameter variable">--topic</span> terminal-cluster-topic\nTopic: terminal-cluster-topic   PartitionCount: <span class="token number">2</span>       ReplicationFactor: <span class="token number">3</span>    Configs:\n        Topic: terminal-cluster-topic   Partition: <span class="token number">0</span>    Leader: <span class="token number">2</span>       Replicas: <span class="token number">2,0</span>,1 Isr: <span class="token number">2,0</span>,1\n        Topic: terminal-cluster-topic   Partition: <span class="token number">1</span>    Leader: <span class="token number">0</span>       Replicas: <span class="token number">0,1</span>,2 Isr: <span class="token number">0,1</span>,2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="/images/kafka/image-20230422231803231.png" alt="image-20230422231803231"></p><ul><li>leader节点负责给定partition的所有读写请求，同一个主题不同分区leader副本一般不一样(为了容灾)</li><li>replicas 表示某个partition在哪几个broker上存在备份。不管这个几点是不是”leader“，甚至这个节点挂了，也会列出。</li><li>isr 是replicas的一个子集，它只列出当前还存活着的，并且<strong>已同步备份</strong>了该partition的节点。</li></ul><h2 id="发送消息" tabindex="-1"><a class="header-anchor" href="#发送消息" aria-hidden="true">#</a> 发送消息</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/kafka-console-producer.sh --broker-list <span class="token number">172.29</span>.96.105:9092,172.29.96.105:9093,172.29.96.105:9094 <span class="token parameter variable">--topic</span> terminal-cluster-topic\n<span class="token operator">&gt;</span>1st message\n<span class="token operator">&gt;</span>2st message\n<span class="token operator">&gt;</span>3st message\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="/images/kafka/image-20230422232613654.png" alt="image-20230422232613654"></p><h2 id="消费消息" tabindex="-1"><a class="header-anchor" href="#消费消息" aria-hidden="true">#</a> 消费消息</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/kafka-console-consumer.sh --bootstrap-server <span class="token number">172.29</span>.96.105:9092,172.29.96.105:9093,172.29.96.105:9094 --from-beginning <span class="token parameter variable">--topic</span> terminal-cluster-topic\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="/images/kafka/image-20230422233151249.png" alt="image-20230422233151249"></p><h3 id="测试容错性" tabindex="-1"><a class="header-anchor" href="#测试容错性" aria-hidden="true">#</a> 测试容错性</h3><p>因为broker2目前是<code>terminal-cluster-topic</code>的分区0的leader，所以我们要将其kill</p><p><img src="/images/kafka/image-20230422233414932.png" alt="image-20230422233414932"></p><p><img src="/images/kafka/image-20230422233459088.png" alt="image-20230422233459088"></p><p>找到这个进程，kill掉</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">netstat</span> <span class="token parameter variable">-nltp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">9094</span>\ntcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">172.29</span>.96.105:9094      :::*                    LISTEN      <span class="token number">13351</span>/java\n\n<span class="token function">kill</span> <span class="token number">13351</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="/images/kafka/image-20230422233749376.png" alt="image-20230422233749376"></p><p><img src="/images/kafka/image-20230422233835448.png" alt="image-20230422233835448"></p><blockquote><p>我们可以看到，分区0的leader节点已经变成了broker 2。要注意的是，在Isr中，已经没有了2号节点。leader的选举也是从ISR(in-sync replica)中进行的</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/kafka-topics.sh <span class="token parameter variable">--describe</span> <span class="token parameter variable">--zookeeper</span> <span class="token number">172.29</span>.96.105:2181 <span class="token parameter variable">--topic</span> terminal-cluster-topic\nTopic: terminal-cluster-topic   PartitionCount: <span class="token number">2</span>       ReplicationFactor: <span class="token number">3</span>    Configs:\n        Topic: terminal-cluster-topic   Partition: <span class="token number">0</span>    Leader: <span class="token number">0</span>       Replicas: <span class="token number">2,0</span>,1 Isr: <span class="token number">0,1</span>\n        Topic: terminal-cluster-topic   Partition: <span class="token number">1</span>    Leader: <span class="token number">0</span>       Replicas: <span class="token number">0,1</span>,2 Isr: <span class="token number">0,1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>继续消费消息,还是可以消费到</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code> bin/kafka-console-consumer.sh --bootstrap-server <span class="token number">172.29</span>.96.105:9092,172.29.96.105:9093,172.29.96.105:9094 --from-beginning <span class="token parameter variable">--topic</span> terminal-cluster-topic\n2st message\n1st message\n3st message\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',34),r={},p=(0,n(66262).A)(r,[["render",function(a,s){return e}]])},66262:(a,s)=>{s.A=(a,s)=>{const n=a.__vccOpts||a;for(const[a,e]of s)n[a]=e;return n}}}]);