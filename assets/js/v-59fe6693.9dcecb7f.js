"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[16001],{63304:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-59fe6693",path:"/mybatis/09%20%E7%BC%93%E5%AD%98.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/mybatis/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"一级缓存",slug:"一级缓存",children:[{level:3,title:"特性❤️",slug:"特性❤️",children:[]},{level:3,title:"默认开启的体现",slug:"默认开启的体现",children:[]},{level:3,title:"失效的验证",slug:"失效的验证",children:[]}]},{level:2,title:"二级缓存",slug:"二级缓存",children:[{level:3,title:"特性",slug:"特性",children:[]},{level:3,title:"开启二级缓存",slug:"开启二级缓存",children:[]},{level:3,title:"失效",slug:"失效",children:[]},{level:3,title:"cache标签",slug:"cache标签",children:[]},{level:3,title:"作用范围",slug:"作用范围",children:[]}]},{level:2,title:"一级和二级存储的特性",slug:"一级和二级存储的特性",children:[{level:3,title:"",slug:"",children:[]}]}],filePathRelative:"mybatis/09 缓存.md"}},75750:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var p=a(20641);const e={class:"custom-container tip"},t=(0,p.Lk)("p",{class:"custom-container-title"},"TIP",-1),c={href:"https://github.com/Q10Viking/learncode/tree/main/mybatis/05_mybatis_cache",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Fv)('<h2 id="一级缓存" tabindex="-1"><a class="header-anchor" href="#一级缓存" aria-hidden="true">#</a> 一级缓存</h2><p>线程级别的缓存，是本地缓存，sqlSession级别的缓存。在开发过程中，一般不管他。但是还是需要了解一下。</p><h3 id="特性❤️" tabindex="-1"><a class="header-anchor" href="#特性❤️" aria-hidden="true">#</a> 特性❤️</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 一级缓存\n * 特性：\n * 1.默认就开启了，也可以关闭一级缓存 localCacheScope=STATEMENT\n * 2.作用域：是基于sqlSession（默认），一次数据库操作会话。\n * 3.缓存默认实现类PerpetualCache ,使用map进行存储的(可以进去打断点观察)\n * 4.查询完就会进行存储\n * 5.先从二级缓存中获取，再从一级缓存中获取\n * key==&gt;   hashcode+sqlid+sql\n * 失效情况：\n * 1.不同的sqlSession会使一级缓存失效\n * 2.同一个SqlSession，但是查询语句不一样\n * 3.同一个SqlSession，查询语句一样，但是期间执行增删改操作\n * 4.同一个SqlSession，查询语句一样，执行手动清除缓存  sqlSession.clearCache();\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="默认开启的体现" tabindex="-1"><a class="header-anchor" href="#默认开启的体现" aria-hidden="true">#</a> 默认开启的体现</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 虽然代码中查询了两次，但是实际上只从数据库查询了一次</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">&gt;</span></span> depts <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">&gt;</span></span> depts2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="/images/mybatis/image-20220807205520016.png" alt="image-20220807205520016"></p><h3 id="失效的验证" tabindex="-1"><a class="header-anchor" href="#失效的验证" aria-hidden="true">#</a> 失效的验证</h3><h4 id="不同的sqlsession" tabindex="-1"><a class="header-anchor" href="#不同的sqlsession" aria-hidden="true">#</a> 不同的sqlsession</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n     * 一级缓存的作用域是在sqlSession\n     * 不同的sqlSession会导致缓存失效\n     */</span>\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// 虽然代码中查询了两次，但是实际上只从数据库查询了一次</span>\n            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">&gt;</span></span> depts <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">&gt;</span></span> depts2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><img src="/images/mybatis/image-20220807210152870.png" alt="image-20220807210152870"></p><h4 id="查询语句不一样" tabindex="-1"><a class="header-anchor" href="#查询语句不一样" aria-hidden="true">#</a> 查询语句不一样</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test03</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Dept</span> dept1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dept1<span class="token punctuation">.</span><span class="token function">setDeptId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span>dept1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">Dept</span> dept2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//dept2.setDeptId(1);  // 会走一级缓存</span>\n        dept2<span class="token punctuation">.</span><span class="token function">setDeptName</span><span class="token punctuation">(</span><span class="token string">&quot;经理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 缓存失效</span>\n        mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span>dept2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><img src="/images/mybatis/image-20220807210854579.png" alt="image-20220807210854579"></p><h4 id="查询语句一样-但是期间执行增删改操作" tabindex="-1"><a class="header-anchor" href="#查询语句一样-但是期间执行增删改操作" aria-hidden="true">#</a> 查询语句一样，但是期间执行增删改操作</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test04</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Dept</span> dept1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dept1<span class="token punctuation">.</span><span class="token function">setDeptId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span>dept1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 执行了增删改的操作</span>\n        <span class="token class-name">EmpMapper</span> empMapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Emp</span> emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        emp<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;cache&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        empMapper<span class="token punctuation">.</span><span class="token function">insertEmp</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">Dept</span> dept2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dept2<span class="token punctuation">.</span><span class="token function">setDeptId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span>dept2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><img src="/images/mybatis/image-20220807211857232.png" alt="image-20220807211857232"></p><h2 id="二级缓存" tabindex="-1"><a class="header-anchor" href="#二级缓存" aria-hidden="true">#</a> 二级缓存</h2><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token operator">*</span> 二级缓存：\n    <span class="token operator">*</span>    特性：\n    <span class="token operator">*</span>      <span class="token number">1.</span>默认开启了，没有实现\n    <span class="token operator">*</span>      <span class="token number">2.</span>作用域：基于全局范围，应用级别。\n    <span class="token operator">*</span>      <span class="token number">3.</span>缓存默认实现类<span class="token class-name">PerpetualCache</span> <span class="token punctuation">,</span>使用map进行存储的但是二级缓存根据不同的mapper命名空间多包了一层map\n    <span class="token operator">*</span>              <span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span>Configuration</span>#caches    key<span class="token operator">:</span>mapper命名空间   value<span class="token operator">:</span>erpetualCache<span class="token punctuation">.</span>map\n        <span class="token operator">*</span>          <span class="token operator">*</span> key<span class="token operator">==</span><span class="token operator">&gt;</span> sqlid<span class="token operator">+</span>sql\n    <span class="token operator">*</span>      <span class="token number">4.</span>事务提交的时候（sqlSession关闭<span class="token punctuation">)</span>进行存储\n    <span class="token operator">*</span>      <span class="token number">5.</span>先从二级缓存中获取，再从一级缓存中获取\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="开启二级缓存" tabindex="-1"><a class="header-anchor" href="#开启二级缓存" aria-hidden="true">#</a> 开启二级缓存</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>实现：\n     <span class="token operator">*</span>      <span class="token number">1.</span>开启二级缓存<span class="token operator">&lt;</span>setting name<span class="token operator">=</span><span class="token string">&quot;cacheEnabled&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;true&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n     <span class="token operator">*</span>      <span class="token number">2.</span>在需要使用到二级缓存的映射文件中加入<span class="token generics"><span class="token punctuation">&lt;</span>cache<span class="token punctuation">&gt;</span></span><span class="token operator">&lt;</span><span class="token operator">/</span>cache<span class="token operator">&gt;</span><span class="token punctuation">,</span>基于<span class="token class-name">Mapper</span>映射文件来实现缓存的，基于<span class="token class-name">Mapper</span>映射文件的命名空间来存储的\n     <span class="token operator">*</span>      <span class="token number">3.</span>在需要使用到二级缓存的javaBean中实现序列化接口<span class="token keyword">implements</span> <span class="token class-name">Serializable</span>\n     <span class="token operator">*</span>          配置成功就会出现缓存命中率 同一个sqlId<span class="token operator">:</span> 从缓存中拿出的次数<span class="token operator">/</span>查询总次数\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol><li>mybatis，二级缓存是开启的</li></ol><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- mybatis-config.xml --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--   默认是开启的     --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cacheEnabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',24),l={href:"https://mybatis.net.cn/configuration.html#settings",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Fv)('<p><img src="/images/mybatis/image-20220807214734918.png" alt="image-20220807214734918"></p><ol start="2"><li>在需要使用到二级缓存的映射文件中加入<code>&lt;cache&gt;&lt;/cache&gt;</code>,基于Mapper映射文件来实现缓存的，基于Mapper映射文件的命名空间来存储的</li></ol><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- DeptMapper.xml--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cache</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="3"><li><p>在需要使用到二级缓存的javaBean中实现序列化接口implements Serializable</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dept</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ol><blockquote><p>验证一下： 配置成功就会出现缓存命中率 同一个sqlId: 从缓存中拿出的次数/查询总次数</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// 虽然代码中查询了两次，但是实际上只从数据库查询了一次</span>\n            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">&gt;</span></span> depts <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dept</span><span class="token punctuation">&gt;</span></span> depts2 <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><img src="/images/mybatis/image-20220807215927988.png" alt="image-20220807215927988"></p><h3 id="失效" tabindex="-1"><a class="header-anchor" href="#失效" aria-hidden="true">#</a> 失效</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>失效：\n     <span class="token operator">*</span>      <span class="token number">1.</span>同一个命名空间进行了增删改的操作，会导致二级缓存失效\n     <span class="token operator">*</span>          但是如果不想失效：可以将<span class="token constant">SQL</span>的flushCache 设置为<span class="token boolean">false</span>（默认是<span class="token boolean">true</span>）<span class="token punctuation">,</span>但是要慎重设置，因为会造成数据脏读问题，除非你能保证查询的数据永远不会执行增删改\n     <span class="token operator">*</span>      <span class="token number">2.</span>让查询不缓存数据到二级缓存中useCache<span class="token operator">=</span><span class="token string">&quot;false&quot;</span><span class="token punctuation">(</span>默认为<span class="token boolean">true</span><span class="token punctuation">)</span>\n     <span class="token operator">*</span>      <span class="token number">3.</span>如果希望某个mapper映射文件的命名空间执行了增删改清空另外的命名空间<span class="token punctuation">(</span>cache<span class="token operator">-</span>ref 中的namespace指定<span class="token punctuation">)</span>的缓存就可以设置：\n     <span class="token operator">*</span>          <span class="token operator">&lt;</span>cache<span class="token operator">-</span>ref namespace<span class="token operator">=</span><span class="token string">&quot;cn.tulingxueyuan.mapper.DeptMapper&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="cache-ref使得另外一个mapper的缓存失效" tabindex="-1"><a class="header-anchor" href="#cache-ref使得另外一个mapper的缓存失效" aria-hidden="true">#</a> cache-ref使得另外一个mapper的缓存失效</h4><blockquote><p>局限性，只能影响一个mapper,如果有多个mapper则不行</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- EmpMapper.xml --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache-ref</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.hzz.mapper.DeptMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- DeptMapper.xml --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cache</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>EmpMapper执行了增删改，清除了DeptMapper的二级缓存</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test06</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">Dept</span> dept1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            dept1<span class="token punctuation">.</span><span class="token function">setDeptId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span>dept1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// 事务提交，存储二级缓存</span>\n            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// 执行了增删改的操作 Emp里面有cache-ref</span>\n            <span class="token class-name">EmpMapper</span> empMapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">EmpMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">Emp</span> emp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            emp<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;cache&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            empMapper<span class="token punctuation">.</span><span class="token function">insertEmp</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 需要提交</span>\n\n            <span class="token class-name">Dept</span> dept2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            dept2<span class="token punctuation">.</span><span class="token function">setDeptId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span>dept2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p><img src="/images/mybatis/image-20220807222741326.png" alt="image-20220807222741326"></p><h3 id="cache标签" tabindex="-1"><a class="header-anchor" href="#cache标签" aria-hidden="true">#</a> cache标签</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>    <span class="token comment">&lt;!--\n        eviction 当缓存达到一定的数量的时候（size的数量），以哪种方式进行回收缓存：\n            LRU – 最近最少使用：移除最长时间不被使用的对象。（默认）\n            FIFO – 先进先出：按对象进入缓存的顺序来移除它们。\n            SOFT – 软引用：基于垃圾回收器状态和软引用规则移除对象。\n            WEAK – 弱引用：更积极地基于垃圾收集器状态和弱引用规则移除对象。\n        flushInterval 刷新时间  毫秒\n        size 可以缓存的数量\n        readOnly 设置数据是否只读\n              true       读取缓存的数据性能更高，会直接获取内存引用 容易引起脏读\n              false 默认 读取缓存的数据性能更低，会将数据拷贝一份\n        type 二级缓存实现类 org.apache.ibatis.cache.impl.PerpetualCache(可省略)。\n    --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.caches.redis.RedisCache<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">eviction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FIFO<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">flushInterval</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>60000<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>512<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">readOnly</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="作用范围" tabindex="-1"><a class="header-anchor" href="#作用范围" aria-hidden="true">#</a> 作用范围</h3><ol><li>在setting中设置，是配置二级缓存开启，一级缓存默认一直开启</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot;/&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>select标签的useCache属性：在每一个select的查询中可以设置当前查询是否要使用二级缓存，只对二级缓存有效</li><li>sql标签的flushCache属性增删改操作默认值为true，sql执行之后会清空一级缓存和二级缓存，而查询操作默认是false</li><li>sqlSession.clearCache() 只是用来清除一级缓存</li></ol><hr><h2 id="一级和二级存储的特性" tabindex="-1"><a class="header-anchor" href="#一级和二级存储的特性" aria-hidden="true">#</a> 一级和二级存储的特性</h2><ol><li>一级缓存会在查询结束后缓存</li><li>二级缓存会在事务提交或者sqlsession关闭后缓存</li></ol><p><strong>程序会先从二级缓存拿再从一级缓存拿❤️❤️</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test05</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">DeptMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">DeptMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">Dept</span> dept1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            dept1<span class="token punctuation">.</span><span class="token function">setDeptId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span>dept1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// 存储二级缓存</span>\n            sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token class-name">Dept</span> dept2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            dept2<span class="token punctuation">.</span><span class="token function">setDeptId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            mapper<span class="token punctuation">.</span><span class="token function">selectDept</span><span class="token punctuation">(</span>dept2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 会走二级缓存</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><img src="/images/mybatis/image-20220807220941920.png" alt="image-20220807220941920"></p><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3>',29),i={},r=(0,a(66262).A)(i,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[(0,p.Lk)("div",e,[t,(0,p.Lk)("p",null,[(0,p.Lk)("a",c,[(0,p.eW)("Source Code 05 mybatis cache"),(0,p.bF)(a)])])]),o,(0,p.Lk)("p",null,[(0,p.Lk)("a",l,[(0,p.eW)("配置_MyBatis中文网"),(0,p.bF)(a)])]),u],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);