"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[98175],{73341:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-7cb8cabe",path:"/java/62%20%E5%A4%9A%E5%88%86%E6%94%AFif%E8%AF%AD%E5%8F%A5%E4%BC%98%E5%8C%96.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/java/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"处理if-else分支",slug:"处理if-else分支",children:[{level:3,title:"如果存在值执行消费操作，否则执行基于空的操作",slug:"如果存在值执行消费操作-否则执行基于空的操作",children:[]}]},{level:2,title:"案例chart处理多分支",slug:"案例chart处理多分支",children:[{level:3,title:"源文件",slug:"源文件",children:[]},{level:3,title:"supplier map结构优化",slug:"supplier-map结构优化",children:[]},{level:3,title:"Function 数组",slug:"function-数组",children:[]}]},{level:2,title:"策略模式",slug:"策略模式",children:[{level:3,title:"电影票打折方案",slug:"电影票打折方案",children:[]},{level:3,title:"扩展总结",slug:"扩展总结",children:[]}]}],filePathRelative:"java/62 多分支if语句优化.md"}},85577:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var p=a(20641);const t=(0,p.Fv)('<h2 id="处理if-else分支" tabindex="-1"><a class="header-anchor" href="#处理if-else分支" aria-hidden="true">#</a> 处理if-else分支</h2><ol><li><p>定义函数式接口 创建一个名为BranchHandle的函数式接口，接口的参数为两个Runnable接口。这两个两个Runnable接口分别代表了为true或false时要进行的操作</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 分支处理接口\n **/</span>\n<span class="token annotation punctuation">@FunctionalInterface</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BranchHandle</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 分支操作\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">trueHandle</span> 为true时要进行的操作\n     * <span class="token keyword">@param</span> <span class="token parameter">falseHandle</span> 为false时要进行的操作\n     * <span class="token keyword">@return</span> void\n     **/</span>\n    <span class="token keyword">void</span> <span class="token function">trueOrFalseHandle</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> trueHandle<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> falseHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li><li><p>编写判断方法 创建一个工具类VUtils里面有一个名为isTureOrFalse的方法，方法的返回值为刚才定义的函数式接口-BranchHandle</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 参数为true或false时，分别进行不同的操作   \n **/</span>\n<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">BranchHandle</span> <span class="token function">isTureOrFalse</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    \n    <span class="token keyword">return</span> <span class="token punctuation">(</span>trueHandle<span class="token punctuation">,</span> falseHandle<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            trueHandle<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            falseHandle<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li><li><p>使用</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 参数为true时，执行trueHandle</span>\n<span class="token class-name">VUtil</span><span class="token punctuation">.</span><span class="token function">isTureOrFalse</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n        \t<span class="token punctuation">.</span>trueorFalseHandle <span class="token punctuation">(</span> trueHandle<span class="token operator">:</span> <span class="token class-name">O</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printin</span><span class="token punctuation">(</span>&quot;<span class="token boolean">true</span>，没毛病”<span class="token punctuation">)</span>；\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>falseHandle<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;有毛病&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ol><h3 id="如果存在值执行消费操作-否则执行基于空的操作" tabindex="-1"><a class="header-anchor" href="#如果存在值执行消费操作-否则执行基于空的操作" aria-hidden="true">#</a> 如果存在值执行消费操作，否则执行基于空的操作</h3><ol><li><p>定义函数 创建一个名为PresentOrElseHandler的函数式接口，接口的参数一个为Consumer接口。一个为Runnable,分别代表值不为空时执行消费操作和值为空时执行的其他操作</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 空值与非空值分支处理\n */</span>\n<span class="token annotation punctuation">@FunctionalInterface</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PresentOrElseHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 值不为空时执行消费操作\n     * 值为空时执行其他的操作\n     * \n     * <span class="token keyword">@param</span> <span class="token parameter">action</span> 值不为空时，执行的消费操作\n     * <span class="token keyword">@param</span> <span class="token parameter">emptyAction</span> 值为空时，执行的操作\n     * <span class="token keyword">@return</span> void    \n     **/</span>\n   <span class="token keyword">void</span> <span class="token function">presentOrElseHandle</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> action<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> emptyAction<span class="token punctuation">)</span><span class="token punctuation">;</span>\n   \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li><li><p>编写判断方法 创建一个名为isBlankOrNoBlank的方法，方法的返回值为刚才定义的函数式接口-PresentOrElseHandler。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 参数为true或false时，分别进行不同的操作\n *\n * <span class="token keyword">@param</span> <span class="token parameter">b</span>\n * <span class="token keyword">@return</span> com.example.demo.func.BranchHandle\n **/</span>\n<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">PresentOrElseHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">isBlankOrNoBlank</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>consumer<span class="token punctuation">,</span> runnable<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            runnable<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            consumer<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li><li><p>使用方式 调用工具类参数参数后，调用函数式接口的presentOrElseHandle方法传入一个Consumer和Runnable</p></li></ol><h2 id="案例chart处理多分支" tabindex="-1"><a class="header-anchor" href="#案例chart处理多分支" aria-hidden="true">#</a> 案例chart处理多分支</h2>',5),e={href:"https://gitee.com/q10viking/design-patterns/tree/master/springboot-design-patterns/src/main/java/org/hzz/%E5%88%9B%E5%BB%BA%E8%80%85%E6%A8%A1%E5%BC%8F/CP2_%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/%E6%A1%88%E4%BE%8B/%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Fv)('<h3 id="源文件" tabindex="-1"><a class="header-anchor" href="#源文件" aria-hidden="true">#</a> 源文件</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>HistogramChart<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>LineChart<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>PieChart<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Supplier</span></span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * <span class="token keyword">@author</span> hzz\n * <span class="token keyword">@date</span> 2024/03/28\n * <span class="token keyword">@desc</span> 图表简单工厂模式，静态工厂方法\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChartFactory</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 柱状图</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">H</span> <span class="token operator">=</span> <span class="token string">&quot;histogram&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">// 饼状图</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">P</span> <span class="token operator">=</span> <span class="token string">&quot;pie&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">// 折线图</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">L</span> <span class="token operator">=</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">// 静态工厂方法</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Chart</span> <span class="token function">getChart</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Chart</span> chart <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token class-name">H</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            chart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HistogramChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;初始化柱状图&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token class-name">P</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            chart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PieChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;初始化饼状图&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token class-name">L</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            chart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LineChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;初始化折线图&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> chart<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="supplier-map结构优化" tabindex="-1"><a class="header-anchor" href="#supplier-map结构优化" aria-hidden="true">#</a> supplier map结构优化</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>supplier<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>Chart<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Supplier</span></span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 语义化supplier接口\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ChartSupplier</span> <span class="token keyword">extends</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Chart</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>HistogramChart<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>LineChart<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>PieChart<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>supplier<span class="token punctuation">.</span>ChartSupplier<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * map结构优化if-else if多分支\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChartFactory2</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 柱状图</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">H</span> <span class="token operator">=</span> <span class="token string">&quot;histogram&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">// 饼状图</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">P</span> <span class="token operator">=</span> <span class="token string">&quot;pie&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">// 折线图</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">L</span> <span class="token operator">=</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ChartSupplier</span><span class="token punctuation">&gt;</span></span> chartSuppliers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 使用map进行优化 if结构</span>\n    <span class="token keyword">static</span> <span class="token punctuation">{</span>\n        chartSuppliers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">H</span><span class="token punctuation">,</span><span class="token class-name">ChartFactory2</span><span class="token punctuation">.</span><span class="token function">histogramChartSupplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        chartSuppliers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">P</span><span class="token punctuation">,</span><span class="token class-name">ChartFactory2</span><span class="token punctuation">.</span><span class="token function">pieChartSupplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        chartSuppliers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">L</span><span class="token punctuation">,</span><span class="token class-name">ChartFactory2</span><span class="token punctuation">.</span><span class="token function">lineChartSupplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">static</span> <span class="token class-name">ChartSupplier</span> <span class="token function">histogramChartSupplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>\n            <span class="token class-name">HistogramChart</span> histogramChart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HistogramChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;柱状图初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> histogramChart<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 静态工厂方法</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Chart</span> <span class="token function">getChart</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Chart</span> chart <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token class-name">ChartSupplier</span> chartSupplier <span class="token operator">=</span> chartSuppliers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>chartSupplier <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            chart <span class="token operator">=</span> chartSupplier<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n           <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token string">&quot;无法识别图表类型: &quot;</span> <span class="token operator">+</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> chart<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">static</span> <span class="token class-name">ChartSupplier</span> <span class="token function">pieChartSupplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>\n            <span class="token class-name">PieChart</span> pieChart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PieChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;饼状图初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> pieChart<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">static</span> <span class="token class-name">ChartSupplier</span> <span class="token function">lineChartSupplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>\n            <span class="token class-name">LineChart</span> lineChart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LineChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;折线图图初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> lineChart<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><h3 id="function-数组" tabindex="-1"><a class="header-anchor" href="#function-数组" aria-hidden="true">#</a> Function 数组</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 语义化Function函数接口，更加清晰\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ChartFunction</span> <span class="token keyword">extends</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Chart</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>HistogramChart<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>LineChart<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>PieChart<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>创建者模式<span class="token punctuation">.</span><span class="token constant">CP2_</span>简单工厂模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>图表设计<span class="token punctuation">.</span>chart<span class="token punctuation">.</span>supplier<span class="token punctuation">.</span>ChartFunction<span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * Function数组优化\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChartFactory3</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 柱状图</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">H</span> <span class="token operator">=</span> <span class="token string">&quot;histogram&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">// 饼状图</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">P</span> <span class="token operator">=</span> <span class="token string">&quot;pie&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">// 折线图</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">L</span> <span class="token operator">=</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Function 数组优化</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ChartFunction</span><span class="token punctuation">[</span><span class="token punctuation">]</span> handlers <span class="token operator">=</span> <span class="token punctuation">{</span>\n            <span class="token function">histogramChartFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token function">lineChartFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token function">pieChartFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n\n\n\n    <span class="token comment">// 静态工厂方法</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Chart</span> <span class="token function">getChart</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Chart</span> chart <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token comment">// 遍历</span>\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">ChartFunction</span> f<span class="token operator">:</span> handlers<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            chart <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>chart <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>\n                <span class="token keyword">return</span> chart<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> chart<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ChartFunction</span> <span class="token function">histogramChartFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> input <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token class-name">H</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token class-name">HistogramChart</span> histogramChart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HistogramChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;柱状图初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span> histogramChart<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">static</span> <span class="token class-name">ChartFunction</span> <span class="token function">pieChartFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> input <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token class-name">P</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token class-name">PieChart</span> pieChart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PieChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;饼状图初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span> pieChart<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">static</span> <span class="token class-name">ChartFunction</span> <span class="token function">lineChartFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> input<span class="token operator">-&gt;</span><span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token class-name">L</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token class-name">LineChart</span> lineChart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LineChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;折线图图初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span> lineChart<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br></div></div><h2 id="策略模式" tabindex="-1"><a class="header-anchor" href="#策略模式" aria-hidden="true">#</a> 策略模式</h2><p>策略模式优化多个if语句</p><h3 id="电影票打折方案" tabindex="-1"><a class="header-anchor" href="#电影票打折方案" aria-hidden="true">#</a> 电影票打折方案</h3>',11),o={href:"https://gitee.com/q10viking/design-patterns/tree/master/springboot-design-patterns/src/main/java/org/hzz/%E8%A1%8C%E4%B8%BA%E6%80%A7%E6%A8%A1%E5%BC%8F/BP3_%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/%E6%A1%88%E4%BE%8B/%E7%94%B5%E5%BD%B1%E7%A5%A8%E6%89%93%E6%8A%98%E6%96%B9%E6%A1%88",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Fv)('<p>为某电影院开发了一套影院售票系统，在该系统中需要为不同类型的用户提供不同的电影票打折方式，具体打折方案如下</p><ul><li>学生凭学生证可享受票价8折优惠。</li><li>年龄在10周岁及以下的儿童可享受每张票减免10元的优惠（原始票价需大于或等于20元）。</li><li>影院VIP用户除享受票价半价优惠外还可进行积分，积分累积到一定额度可换取电影院赠送的礼品。</li><li>该系统在将来可能还要根据需要引入新的打折方式。</li></ul><h4 id="原始方案" tabindex="-1"><a class="header-anchor" href="#原始方案" aria-hidden="true">#</a> 原始方案</h4><h5 id="电影票" tabindex="-1"><a class="header-anchor" href="#电影票" aria-hidden="true">#</a> 电影票</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>原始代码<span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 电影票\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MovieTicket</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 电影票价格</span>\n    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>\n    <span class="token comment">// 电影票类型</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> type<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 计算打折后的票价</span>\n    <span class="token keyword">private</span> <span class="token keyword">double</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n        <span class="token comment">// 学生票打折后票价计算</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;学生票：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">// 儿童票打折后票价计算</span>\n        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;children&quot;</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">&gt;=</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;儿童票：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">-</span> <span class="token number">10.0</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">// VIP票打折后票价计算</span>\n        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;vip&quot;</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;VIP票：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;增加积分&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">// 如果不满足任何打折要求，则返回原始票价</span>\n        <span class="token keyword">else</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>price<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h5 id="场景测试" tabindex="-1"><a class="header-anchor" href="#场景测试" aria-hidden="true">#</a> 场景测试</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>原始代码<span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 场景测试\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScenarioTest</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MovieTicket</span> mt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MovieTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 原始票价</span>\n        <span class="token keyword">double</span> originalPrice <span class="token operator">=</span> <span class="token number">60.0</span><span class="token punctuation">;</span>\n        mt<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span>originalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;原始价为：&quot;</span> <span class="token operator">+</span> mt<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mt<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;学生票价为：&quot;</span> <span class="token operator">+</span> mt<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mt<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token string">&quot;children&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;儿童票价为：&quot;</span> <span class="token operator">+</span> mt<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mt<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token string">&quot;vip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;VIP票价为：&quot;</span> <span class="token operator">+</span> mt<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * 原始价为：60.0\n * --------------------------------\n * 学生票：\n * 学生票价为：48.0\n * --------------------------------\n * 儿童票：\n * 儿童票价为：50.0\n * --------------------------------\n * VIP票：\n * 增加积分\n * VIP票价为：30.0\n * --------------------------------\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h5 id="问题分析" tabindex="-1"><a class="header-anchor" href="#问题分析" aria-hidden="true">#</a> 问题分析</h5><blockquote><p><strong>这些问题的主要原因在于MovieTicket类职责过重，它将各种打折算法都定义在一个类中，既不便于算法的重用，也不便于算法的扩展</strong></p></blockquote><ol><li>MovieTicket类的calculate（）方法非常庞大，它包含各种打折算法的实现代码，在代码中出现了较长的if…else…语句，不利于测试和维护</li><li>增加新的打折算法或者对原有打折算法进行修改时必须修改MovieTicket类的源代码，违反了开闭原则，系统的灵活性和可扩展性较差。</li><li>算法的复用性差。如果在另一个系统（例如商场销售管理系统）中需要重用某些打折算法，只能通过对源代码进行复制、粘贴来重用，无法单独重用其中的某个或某些算法。</li></ol><h4 id="策略模式优化" tabindex="-1"><a class="header-anchor" href="#策略模式优化" aria-hidden="true">#</a> 策略模式优化</h4><p>MovieTicket充当环境类角色，Discount充当抽象策略角色，StudentDiscount、ChildrenDiscount和VIPDiscount充当具体策略角色</p><p><img src="/images/designpattern/image-20240328235852162.png" alt="image-20240328235852162"></p><h5 id="抽象策略" tabindex="-1"><a class="header-anchor" href="#抽象策略" aria-hidden="true">#</a> 抽象策略</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>策略模式优化<span class="token punctuation">;</span>\n\n<span class="token comment">//折扣类：抽象策略类</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Discount</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h5 id="具体策略" tabindex="-1"><a class="header-anchor" href="#具体策略" aria-hidden="true">#</a> 具体策略</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//儿童票折扣类：具体策略类</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChildrenDiscount</span> <span class="token keyword">implements</span> <span class="token class-name">Discount</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token constant">DISCOUNT</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;儿童票：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>price <span class="token operator">&gt;=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> price <span class="token operator">-</span> <span class="token constant">DISCOUNT</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> price<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//学生票折扣类：具体策略类</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StudentDiscount</span> <span class="token keyword">implements</span> <span class="token class-name">Discount</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token constant">DISCOUNT</span> <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;学生票：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> price <span class="token operator">*</span> <span class="token constant">DISCOUNT</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//VIP会员票折扣类：具体策略类</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VIPDiscount</span> <span class="token keyword">implements</span> <span class="token class-name">Discount</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token constant">DISCOUNT</span> <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;VIP票：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;增加积分！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> price <span class="token operator">*</span> <span class="token constant">DISCOUNT</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h5 id="movieticket" tabindex="-1"><a class="header-anchor" href="#movieticket" aria-hidden="true">#</a> MovieTicket</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>策略模式优化<span class="token punctuation">;</span>\n\n<span class="token comment">//电影票类：环境类</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MovieTicket</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Discount</span> discount<span class="token punctuation">;</span> <span class="token comment">//维持一个对抽象折扣类的引用</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//注入一个折扣类对象</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDiscount</span><span class="token punctuation">(</span><span class="token class-name">Discount</span> discount<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>discount <span class="token operator">=</span> discount<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>discount <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>price<span class="token punctuation">;</span>\n        <span class="token comment">//调用折扣类的折扣价计算方法</span>\n        <span class="token keyword">return</span> discount<span class="token punctuation">.</span><span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h5 id="场景测试-1" tabindex="-1"><a class="header-anchor" href="#场景测试-1" aria-hidden="true">#</a> 场景测试</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>策略模式优化<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>策略模式优化<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>ChildrenDiscount<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>策略模式优化<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>StudentDiscount<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>策略模式优化<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>VIPDiscount<span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScenarioTest1</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MovieTicket</span> mt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MovieTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 原始票价</span>\n        <span class="token keyword">double</span> originalPrice <span class="token operator">=</span> <span class="token number">60.0</span><span class="token punctuation">;</span>\n        mt<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span>originalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;原始价为：&quot;</span> <span class="token operator">+</span> mt<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mt<span class="token punctuation">.</span><span class="token function">setDiscount</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StudentDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;学生票价为：&quot;</span> <span class="token operator">+</span> mt<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mt<span class="token punctuation">.</span><span class="token function">setDiscount</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChildrenDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;儿童票价为：&quot;</span> <span class="token operator">+</span> mt<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mt<span class="token punctuation">.</span><span class="token function">setDiscount</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VIPDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;VIP票价为：&quot;</span> <span class="token operator">+</span> mt<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * 原始价为：60.0\n * --------------------------------\n * 学生票：\n * 学生票价为：48.0\n * --------------------------------\n * 儿童票：\n * 儿童票价为：50.0\n * --------------------------------\n * VIP票：\n * 增加积分！\n * VIP票价为：30.0\n * --------------------------------\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h4 id="提高灵活性" tabindex="-1"><a class="header-anchor" href="#提高灵活性" aria-hidden="true">#</a> 提高灵活性</h4><p>为了提高系统的灵活性和可扩展性，这里将具体策略类的类名存储在配置文件config.xml中，并通过工具类XMLUtil来读取配置文件并反射生成对象。</p><blockquote><p>其实在SpringBoot中配置application.yml文件就可以做到。</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>策略模式优化<span class="token punctuation">.</span>utils<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>parsers<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>w3c<span class="token punctuation">.</span>dom<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XMLUtil</span> <span class="token punctuation">{</span>\n    <span class="token comment">//该方法用于从XML配置文件中提取具体类类名，并返回一个实例对象</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            <span class="token comment">//创建DOM文档对象</span>\n            <span class="token class-name">DocumentBuilderFactory</span> dFactory <span class="token operator">=</span> <span class="token class-name">DocumentBuilderFactory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">DocumentBuilder</span> builder <span class="token operator">=</span> dFactory<span class="token punctuation">.</span><span class="token function">newDocumentBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">Document</span> doc<span class="token punctuation">;</span>\n            doc <span class="token operator">=</span>builder<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;src//main//resources//strategy//config.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//获取包含类名的文本节点</span>\n            <span class="token class-name">NodeList</span> nl <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;className&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">Node</span> classNode<span class="token operator">=</span>nl<span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirstChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> cName<span class="token operator">=</span>classNode<span class="token punctuation">.</span><span class="token function">getNodeValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//通过类名生成实例对象并将其返回</span>\n            <span class="token class-name">Class</span> c<span class="token operator">=</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>cName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">Object</span> obj<span class="token operator">=</span>c<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> obj<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><img src="/images/designpattern/image-20240329002638714.png" alt="image-20240329002638714"></p><p>配置信息为</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot;?&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>config</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>className</span><span class="token punctuation">&gt;</span></span>org.hzz.行为性模式.BP3_策略模式.案例.电影票打折方案.策略模式优化.impl.StudentDiscount<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>className</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>config</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="场景测试-2" tabindex="-1"><a class="header-anchor" href="#场景测试-2" aria-hidden="true">#</a> 场景测试</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>策略模式优化<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>行为性模式<span class="token punctuation">.</span><span class="token constant">BP3_</span>策略模式<span class="token punctuation">.</span>案例<span class="token punctuation">.</span>电影票打折方案<span class="token punctuation">.</span>策略模式优化<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>XMLUtil<span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScenarioTest2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MovieTicket</span> mt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MovieTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 原始票价</span>\n        <span class="token keyword">double</span> originalPrice <span class="token operator">=</span> <span class="token number">60.0</span><span class="token punctuation">;</span>\n        mt<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span>originalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;原始价为：&quot;</span> <span class="token operator">+</span> originalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 读取配置文件并反射生成具体折扣对象 (在Springboot中我们可以使用application.yml中配置)</span>\n        <span class="token class-name">Discount</span> discount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Discount</span><span class="token punctuation">)</span> <span class="token class-name">XMLUtil</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 注入折扣对象</span>\n        mt<span class="token punctuation">.</span><span class="token function">setDiscount</span><span class="token punctuation">(</span>discount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;票价为：&quot;</span> <span class="token operator">+</span> mt<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="扩展总结" tabindex="-1"><a class="header-anchor" href="#扩展总结" aria-hidden="true">#</a> 扩展总结</h3><p>在springboot中我们可以根据type类型从ApplicationContext中取出具体的策略类来执行。</p>',32),u={},i=(0,a(66262).A)(u,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[t,(0,p.Lk)("p",null,[(0,p.Lk)("a",e,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),c,(0,p.Lk)("p",null,[(0,p.Lk)("a",o,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),l],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);