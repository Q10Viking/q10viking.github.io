"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[27988],{80147:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-6f48296a",path:"/seata/05%20seata%20TCC%E6%A8%A1%E5%BC%8F.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/seata/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"TCC",slug:"tcc",children:[{level:3,title:"举例",slug:"举例",children:[]}]},{level:2,title:"Seata TCC模式",slug:"seata-tcc模式",children:[{level:3,title:"TCC如何控制异常",slug:"tcc如何控制异常",children:[]},{level:3,title:"空回滚",slug:"空回滚",children:[]},{level:3,title:"如何处理幂等",slug:"如何处理幂等",children:[]},{level:3,title:"空悬挂",slug:"空悬挂",children:[]}]},{level:2,title:"Seata TCC实战",slug:"seata-tcc实战",children:[{level:3,title:"环境准备",slug:"环境准备",children:[]},{level:3,title:"解决幂等性的tcc_fence_log表",slug:"解决幂等性的tcc-fence-log表",children:[]},{level:3,title:"依赖",slug:"依赖",children:[]},{level:3,title:"",slug:"",children:[]},{level:3,title:"配置",slug:"配置",children:[]},{level:3,title:"定义TCC接口",slug:"定义tcc接口",children:[]},{level:3,title:"服务",slug:"服务",children:[]},{level:3,title:"测试",slug:"测试",children:[]}]}],filePathRelative:"seata/05 seata TCC模式.md"}},61129:(n,s,a)=>{a.r(s),a.d(s,{default:()=>d});var p=a(20641);const t=(0,p.Fv)('<h2 id="tcc" tabindex="-1"><a class="header-anchor" href="#tcc" aria-hidden="true">#</a> TCC</h2><p>TCC 基于分布式事务中的二阶段提交协议实现，它的全称为 Try-Confirm-Cancel，即资源预留（Try）、确认操作（Confirm）、取消操作（Cancel），他们的具体含义如下：</p><ol><li>Try：对业务资源的检查并预留；</li><li>Confirm：对业务处理进行提交，即 commit 操作，只要 Try 成功，那么该步骤一定成功；</li><li>Cancel：对业务处理进行取消，即回滚操作，该步骤回对 Try 预留的资源进行释放。</li></ol><blockquote><ul><li><strong>XA是资源层面的分布式事务，强一致性，在两阶段提交的整个过程中，一直会持有资源的锁</strong></li><li><strong>TCC是业务层面的分布式事务，最终一致性，不会一直持有资源的锁</strong></li></ul></blockquote><p><img src="/images/algorithm/54287.png" alt="https://note.youdao.com/yws/public/resource/59f135645af771eb7c652f36dc0aae07/xmlnote/4FAE4FD5607542D29F74D81F9DAFF41F/54287"></p><p>TCC 是一种侵入式的分布式事务解决方案，以上三个操作都需要业务系统自行实现，对业务系统有着非常大的入侵性，设计相对复杂，但优点是 TCC 完全不依赖数据库，能够实现跨数据库、跨应用资源管理，对这些不同数据访问通过侵入式的编码方式实现一个原子操作，更好地解决了在各种复杂业务场景下的分布式事务问题。</p><h3 id="举例" tabindex="-1"><a class="header-anchor" href="#举例" aria-hidden="true">#</a> 举例</h3><blockquote><p>比如说用户下单</p></blockquote><p>try 阶段首先进行预留资源，然后在 commit 阶段扣除资源</p><p><img src="/images/algorithm/55787.png" alt="https://note.youdao.com/yws/public/resource/59f135645af771eb7c652f36dc0aae07/xmlnote/2730B8B7E95447B59D8DB145C60E374F/55787"></p><hr><p>try 阶段首先进行预留资源，预留资源时扣减库存失败导致全局事务回滚，在 cancel 阶段释放资源</p><p><img src="/images/algorithm/55786.png" alt="https://note.youdao.com/yws/public/resource/59f135645af771eb7c652f36dc0aae07/xmlnote/768266383B6C44C28E6DEA98B784BF20/55786"></p><h2 id="seata-tcc模式" tabindex="-1"><a class="header-anchor" href="#seata-tcc模式" aria-hidden="true">#</a> Seata TCC模式</h2><p>一个分布式的全局事务，整体是 两阶段提交 的模型。全局事务是由若干分支事务组成的，分支事务要满足 两阶段提交 的模型要求，即需要每个分支事务都具备自己的：</p><ul><li>一阶段 prepare 行为</li><li>二阶段 commit 或 rollback 行为</li></ul><p>​ <img src="/images/algorithm/55681.png" alt="0"></p><p>在Seata中，AT模式与TCC模式事实上都是两阶段提交的具体实现，他们的区别在于：</p><p>AT 模式基于 支持本地 ACID 事务的关系型数据库：</p><ul><li>一阶段 prepare 行为：在本地事务中，一并提交业务数据更新和相应回滚日志记录。</li><li>二阶段 commit 行为：马上成功结束，自动异步批量清理回滚日志。</li><li>二阶段 rollback 行为：通过回滚日志，自动生成补偿操作，完成数据回滚。</li></ul><p>相应的，TCC 模式不依赖于底层数据资源的事务支持：</p><ul><li>一阶段 prepare 行为：调用自定义的 prepare 逻辑。</li><li>二阶段 commit 行为：调用自定义的 commit 逻辑。</li><li>二阶段 rollback 行为：调用自定义的 rollback 逻辑。</li></ul><blockquote><p>简单点概括，SEATA的TCC模式就是手工的AT模式，它允许你自定义两阶段的处理逻辑而不依赖AT模式的undo_log。</p></blockquote><h3 id="tcc如何控制异常" tabindex="-1"><a class="header-anchor" href="#tcc如何控制异常" aria-hidden="true">#</a> <strong>TCC如何控制异常</strong></h3><p>在 TCC 模型执行的过程中，还可能会出现各种异常，其中最为常见的有空回滚、幂等、悬挂等。TCC 模式是分布式事务中非常重要的事务模式，但是幂等、悬挂和空回滚一直是 TCC 模式需要考虑的问题，Seata 框架在 1.5.1 版本完美解决了这些问题</p><h3 id="空回滚" tabindex="-1"><a class="header-anchor" href="#空回滚" aria-hidden="true">#</a> 空回滚</h3><blockquote><p><strong>那么空回滚是如何产生的呢</strong></p></blockquote><p><img src="/images/algorithm/55759.png" alt="https://note.youdao.com/yws/public/resource/59f135645af771eb7c652f36dc0aae07/xmlnote/EC6A5A7DBE7A4A83976F867CC12BD8A7/55759"></p><p>如上图所示，全局事务开启后，参与者 A 分支注册完成之后会执行参与者一阶段 RPC 方法，如果此时参与者 A 所在的机器发生宕机，网络异常，都会造成 RPC 调用失败，即参与者 A 一阶段方法未成功执行，但是此时全局事务已经开启，Seata 必须要推进到终态，在全局事务回滚时会调用参与者 A 的 Cancel 方法，从而造成空回滚。</p><p><strong>要想防止空回滚，那么必须在 Cancel 方法中识别这是一个空回滚，Seata 是如何做的呢？</strong></p><p>Seata 的做法是新增一个 TCC 事务控制表(tcc_fence_log)，包含事务的 XID 和 BranchID 信息，<strong>在 Try 方法执行时插入一条记录，表示一阶段执行了，执行 Cancel 方法时读取这条记录，如果记录不存在，说明 Try 方法没有执行</strong>。</p><h3 id="如何处理幂等" tabindex="-1"><a class="header-anchor" href="#如何处理幂等" aria-hidden="true">#</a> <strong>如何处理幂等</strong></h3><p>幂等问题指的是 TC 重复进行二阶段提交，因此 Confirm/Cancel 接口需要支持幂等处理，即不会产生资源重复提交或者重复释放。</p><blockquote><p>幂等产生的原因</p></blockquote><p><img src="/images/algorithm/55758.png" alt="https://note.youdao.com/yws/public/resource/59f135645af771eb7c652f36dc0aae07/xmlnote/51946CA854554178849414683E7BE9CC/55758"></p><p>如上图所示，参与者 A 执行完二阶段之后，由于网络抖动或者宕机问题，会造成 TC 收不到参与者 A 执行二阶段的返回结果，TC 会重复发起调用，直到二阶段执行结果成功。</p><p><strong>Seata 是如何处理幂等问题的呢？</strong></p><p>同样的也是在 TCC 事务控制表中增加一个记录状态的字段 status，该字段有 3 个值，分别为：</p><ol><li>tried：1</li><li>committed：2</li><li>rollbacked：3</li></ol><p>二阶段 Confirm/Cancel 方法执行后，将状态改为 committed 或 rollbacked 状态。当重复调用二阶段 Confirm/Cancel 方法时，判断事务状态即可解决幂等问题。</p><h3 id="空悬挂" tabindex="-1"><a class="header-anchor" href="#空悬挂" aria-hidden="true">#</a> 空悬挂</h3><p>悬挂指的是二阶段 Cancel 方法比 一阶段 Try 方法优先执行，由于允许空回滚的原因，在执行完二阶段 Cancel 方法之后直接空回滚返回成功，此时全局事务已结束，但是由于 Try 方法随后执行，这就会造成一阶段 Try 方法预留的资源永远无法提交和释放了。</p><blockquote><p>空悬挂产生的原因</p></blockquote><p><img src="/images/algorithm/55757.png" alt="https://note.youdao.com/yws/public/resource/59f135645af771eb7c652f36dc0aae07/xmlnote/E38EAA625136419C9DA9CEF85CCEEBE2/55757"></p><p>如上图所示，在执行参与者 A 的一阶段 Try 方法时，出现网路拥堵，由于 Seata 全局事务有超时限制，执行 Try 方法超时后，TM 决议全局回滚，回滚完成后如果此时 RPC 请求才到达参与者 A，<strong>执行 Try 方法进行资源预留，从而造成悬挂</strong>。</p><p><strong>Seata 是怎么处理悬挂的呢？</strong></p><p>在 TCC 事务控制表记录状态的字段 status 中增加一个状态：</p><ul><li>suspended：4</li></ul><p>当执行二阶段 Cancel 方法时，如果发现 TCC 事务控制表有相关记录，说明二阶段 Cancel 方法优先一阶段 Try 方法执行，因此插入一条 status=4 状态的记录，当一阶段 Try 方法后面执行时，判断 status=4 ，则说明有二阶段 Cancel 已执行，并返回 false 以阻止一阶段 Try 方法执行成功。</p><hr><h2 id="seata-tcc实战" tabindex="-1"><a class="header-anchor" href="#seata-tcc实战" aria-hidden="true">#</a> Seata TCC实战</h2>',51),e={href:"https://github.com/Q10Viking/learncode/tree/main/seata/learnSeata/seata-tcc",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Lk)("p",null,"用户下单，整个业务逻辑由三个微服务构成：",-1),c=(0,p.Lk)("ul",null,[(0,p.Lk)("li",null,"库存服务：对给定的商品扣除库存数量。"),(0,p.Lk)("li",null,"订单服务：根据采购需求创建订单。"),(0,p.Lk)("li",null,"帐户服务：从用户帐户中扣除余额。")],-1),l=(0,p.Lk)("p",null,[(0,p.Lk)("img",{src:"/images/algorithm/55687.png",alt:"https://note.youdao.com/yws/public/resource/59f135645af771eb7c652f36dc0aae07/xmlnote/EA988AE84CDF43F5BFC7A8E6334BF9A7/55687"})],-1),u=(0,p.Lk)("h3",{id:"环境准备",tabindex:"-1"},[(0,p.Lk)("a",{class:"header-anchor",href:"#环境准备","aria-hidden":"true"},"#"),(0,p.eW)(),(0,p.Lk)("strong",null,"环境准备")],-1),r={href:"https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E",target:"_blank",rel:"noopener noreferrer"},i=(0,p.Fv)('<ul><li>父pom指定微服务版本</li></ul><table><thead><tr><th>Spring Cloud Alibaba Version</th><th>Spring Cloud Version</th><th>Spring Boot Version</th><th>Seata Version</th><th>nacos</th></tr></thead><tbody><tr><td>2.2.9.RELEASE</td><td>Spring Cloud Hoxton.SR12</td><td>2.3.12.RELEASE</td><td>1.5.2</td><td>2.1.0</td></tr></tbody></table><ul><li>启动Seata Server(TC)端，Seata Server使用nacos作为配置中心和注册中心</li><li>启动nacos服务</li></ul><h3 id="解决幂等性的tcc-fence-log表" tabindex="-1"><a class="header-anchor" href="#解决幂等性的tcc-fence-log表" aria-hidden="true">#</a> 解决幂等性的tcc_fence_log表</h3><p>TCC 幂等、悬挂和空回滚问题如何解决？</p><p>TCC 模式中存在的三大问题是幂等、悬挂和空回滚。在 Seata1.5.1 版本中，增加了一张事务控制表，表名是 tcc_fence_log 来解决这个问题。而在@TwoPhaseBusinessAction 注解中提到的属性 useTCCFence 就是来指定是否开启这个机制，这个属性值默认是 false</p>',6),k={href:"https://github.com/seata/seata/blob/1.5.2/script/client/tcc/db/mysql.sql",target:"_blank",rel:"noopener noreferrer"},b=(0,p.Fv)('<div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment">-- -------------------------------- The script use tcc fence  --------------------------------</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>tcc_fence_log<span class="token punctuation">`</span></span>\n<span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span>           <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;global id&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span>     <span class="token keyword">BIGINT</span>        <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;branch id&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>action_name<span class="token punctuation">`</span></span>   <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>   <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;action name&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span>        <span class="token keyword">TINYINT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;status(tried:1;committed:2;rollbacked:3;suspended:4)&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>gmt_create<span class="token punctuation">`</span></span>    <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>   <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;create time&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>gmt_modified<span class="token punctuation">`</span></span>  <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>   <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;update time&#39;</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>xid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>branch_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_gmt_modified<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gmt_modified<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>idx_status<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span>\n<span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8mb4<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>*************************** <span class="token number">1</span>. row ***************************\n         xid: <span class="token number">192.168</span>.135.130:8091:4729163079446176965\n   branch_id: <span class="token number">4729163079446176971</span>\n action_name: debit\n      status: <span class="token number">2</span>\n  gmt_create: <span class="token number">2023</span>-04-21 <span class="token number">16</span>:32:28.473\ngmt_modified: <span class="token number">2023</span>-04-21 <span class="token number">16</span>:32:28.651\n<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>\n\n<span class="token comment"># 其中状态status: tried:1;committed:2;rollbacked:3;suspended:4</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖" aria-hidden="true">#</a> 依赖</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-seata<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>\n  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8888</span>\n<span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">application</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> tcc<span class="token punctuation">-</span>order<span class="token punctuation">-</span>service\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>\n      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>\n<span class="token comment">#        ip: 192.168.135.1:8848</span>\n        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> c3f112d8<span class="token punctuation">-</span>1c5e<span class="token punctuation">-</span>419e<span class="token punctuation">-</span>9c83<span class="token punctuation">-</span>b0b26b987a42\n        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.135.1<span class="token punctuation">:</span><span class="token number">8848</span>\n\n  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>\n    <span class="token key atrule">type</span><span class="token punctuation">:</span> com.alibaba.druid.pool.DruidDataSource\n    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver\n    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//192.168.135.130<span class="token punctuation">:</span>3306/seata_tcc_order<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span>\n    <span class="token key atrule">username</span><span class="token punctuation">:</span> root\n    <span class="token key atrule">password</span><span class="token punctuation">:</span> Root.123456\n    <span class="token key atrule">druid</span><span class="token punctuation">:</span>\n      <span class="token key atrule">initial-size</span><span class="token punctuation">:</span> <span class="token number">10</span>\n      <span class="token key atrule">max-active</span><span class="token punctuation">:</span> <span class="token number">100</span>\n      <span class="token key atrule">min-idle</span><span class="token punctuation">:</span> <span class="token number">10</span>\n      <span class="token key atrule">max-wait</span><span class="token punctuation">:</span> <span class="token number">60000</span>\n      <span class="token key atrule">pool-prepared-statements</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n      <span class="token key atrule">max-pool-prepared-statement-per-connection-size</span><span class="token punctuation">:</span> <span class="token number">20</span>\n      <span class="token key atrule">time-between-eviction-runs-millis</span><span class="token punctuation">:</span> <span class="token number">60000</span>\n      <span class="token key atrule">min-evictable-idle-time-millis</span><span class="token punctuation">:</span> <span class="token number">300000</span>\n      <span class="token key atrule">test-while-idle</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n      <span class="token key atrule">test-on-borrow</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n      <span class="token key atrule">test-on-return</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n      <span class="token key atrule">stat-view-servlet</span><span class="token punctuation">:</span>\n        <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n        <span class="token key atrule">url-pattern</span><span class="token punctuation">:</span> /druid/*\n      <span class="token key atrule">filter</span><span class="token punctuation">:</span>\n        <span class="token key atrule">stat</span><span class="token punctuation">:</span>\n          <span class="token key atrule">log-slow-sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token key atrule">slow-sql-millis</span><span class="token punctuation">:</span> <span class="token number">1000</span>\n          <span class="token key atrule">merge-sql</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n        <span class="token key atrule">wall</span><span class="token punctuation">:</span>\n          <span class="token key atrule">config</span><span class="token punctuation">:</span>\n            <span class="token key atrule">multi-statement-allow</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n<span class="token key atrule">seata</span><span class="token punctuation">:</span>\n  <span class="token key atrule">application-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span>\n  <span class="token comment"># seata 服务分组，要与服务端配置service.vgroup_mapping的后缀对应</span>\n  <span class="token key atrule">tx-service-group</span><span class="token punctuation">:</span> default_tx_group\n  <span class="token key atrule">config</span><span class="token punctuation">:</span>\n    <span class="token key atrule">type</span><span class="token punctuation">:</span> nacos\n    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>\n      <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.135.1<span class="token punctuation">:</span><span class="token number">8848</span>\n      <span class="token key atrule">group</span><span class="token punctuation">:</span> SEATA_GROUP\n      <span class="token key atrule">namespace</span><span class="token punctuation">:</span> c3f112d8<span class="token punctuation">-</span>1c5e<span class="token punctuation">-</span>419e<span class="token punctuation">-</span>9c83<span class="token punctuation">-</span>b0b26b987a42\n      <span class="token key atrule">data-id</span><span class="token punctuation">:</span> seataServer.properties\n  <span class="token key atrule">registry</span><span class="token punctuation">:</span>\n    <span class="token key atrule">type</span><span class="token punctuation">:</span> nacos\n    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>\n      <span class="token key atrule">application</span><span class="token punctuation">:</span> seata<span class="token punctuation">-</span>server\n      <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.135.1<span class="token punctuation">:</span><span class="token number">8848</span>\n      <span class="token key atrule">group</span><span class="token punctuation">:</span> SEATA_GROUP\n      <span class="token key atrule">namespace</span><span class="token punctuation">:</span> c3f112d8<span class="token punctuation">-</span>1c5e<span class="token punctuation">-</span>419e<span class="token punctuation">-</span>9c83<span class="token punctuation">-</span>b0b26b987a42\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h3 id="定义tcc接口" tabindex="-1"><a class="header-anchor" href="#定义tcc接口" aria-hidden="true">#</a> 定义TCC接口</h3><ul><li>@LocalTCC 适用于SpringCloud+Feign模式下的TCC，@LocalTCC一定需要注解在接口上，此接口可以是寻常的业务接口，只要实现了TCC的两阶段提交对应方法便可</li><li>@TwoPhaseBusinessAction 注解try方法，其中name为当前tcc方法的bean名称，写方法名便可（全局唯一），commitMethod指向提交方法，rollbackMethod指向事务回滚方法。指定好三个方法之后，seata会根据全局事务的成功或失败，去帮我们自动调用提交方法或者回滚方法。</li><li>@BusinessActionContextParameter 注解可以将参数传递到二阶段（commitMethod/rollbackMethod）的方法。</li><li>BusinessActionContext 便是指TCC事务上下文</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>seata<span class="token punctuation">.</span>rm<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">BusinessActionContext</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>seata<span class="token punctuation">.</span>rm<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">BusinessActionContextParameter</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>seata<span class="token punctuation">.</span>rm<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">LocalTCC</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>seata<span class="token punctuation">.</span>rm<span class="token punctuation">.</span>tcc<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">TwoPhaseBusinessAction</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span>vo<span class="token punctuation">.</span></span><span class="token class-name">OrderVo</span></span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 通过 @LocalTCC 这个注解，RM 初始化的时候会向 TC 注册一个分支事务。\n */</span>\n<span class="token annotation punctuation">@LocalTCC</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrderService</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * TCC的try方法：保存订单信息，状态为支付中\n     *\n     * 定义两阶段提交，在try阶段通过@TwoPhaseBusinessAction注解定义了分支事务的 resourceId，commit和 cancel 方法\n     *  name = 该tcc的bean名称,全局唯一\n     *  commitMethod = commit 为二阶段确认方法\n     *  rollbackMethod = rollback 为二阶段取消方法\n     *  BusinessActionContextParameter注解 传递参数到二阶段中\n     *  useTCCFence seata1.5.1的新特性，用于解决TCC幂等，悬挂，空回滚问题，需增加日志表tcc_fence_log\n     */</span>\n    <span class="token annotation punctuation">@TwoPhaseBusinessAction</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;prepareSaveOrder&quot;</span><span class="token punctuation">,</span> commitMethod <span class="token operator">=</span> <span class="token string">&quot;commit&quot;</span><span class="token punctuation">,</span> rollbackMethod <span class="token operator">=</span> <span class="token string">&quot;rollback&quot;</span><span class="token punctuation">,</span> useTCCFence <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n    <span class="token class-name">Order</span> <span class="token function">prepareSaveOrder</span><span class="token punctuation">(</span><span class="token class-name">OrderVo</span> orderVo<span class="token punctuation">,</span> <span class="token annotation punctuation">@BusinessActionContextParameter</span><span class="token punctuation">(</span>paramName <span class="token operator">=</span> <span class="token string">&quot;orderId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     *\n     * TCC的confirm方法：订单状态改为支付成功\n     *\n     * 二阶段确认方法可以另命名，但要保证与commitMethod一致\n     * context可以传递try方法的参数\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">actionContext</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token keyword">boolean</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> actionContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * TCC的cancel方法：订单状态改为支付失败\n     * 二阶段取消方法可以另命名，但要保证与rollbackMethod一致\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">actionContext</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token keyword">boolean</span> <span class="token function">rollback</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> actionContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h4 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>\n<span class="token annotation punctuation">@Slf4j</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrderService</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">OrderMapper</span> orderMapper<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Order</span> <span class="token function">prepareSaveOrder</span><span class="token punctuation">(</span><span class="token class-name">OrderVo</span> orderVo<span class="token punctuation">,</span> <span class="token annotation punctuation">@BusinessActionContextParameter</span><span class="token punctuation">(</span>paramName <span class="token operator">=</span> <span class="token string">&quot;orderId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> orderId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 保存订单</span>\n        <span class="token class-name">Order</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        order<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        order<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>orderVo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        order<span class="token punctuation">.</span><span class="token function">setCommodityCode</span><span class="token punctuation">(</span>orderVo<span class="token punctuation">.</span><span class="token function">getCommodityCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        order<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>orderVo<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        order<span class="token punctuation">.</span><span class="token function">setMoney</span><span class="token punctuation">(</span>orderVo<span class="token punctuation">.</span><span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        order<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">OrderStatus</span><span class="token punctuation">.</span><span class="token constant">INIT</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Integer</span> saveOrderRecord <span class="token operator">=</span> orderMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;保存订单{}&quot;</span><span class="token punctuation">,</span> saveOrderRecord <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;成功&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> order<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> actionContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 获取订单id</span>\n        <span class="token keyword">long</span> orderId <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>actionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;orderId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//更新订单状态为支付成功</span>\n        <span class="token class-name">Integer</span> updateOrderRecord <span class="token operator">=</span> orderMapper<span class="token punctuation">.</span><span class="token function">updateOrderStatus</span><span class="token punctuation">(</span>orderId<span class="token punctuation">,</span><span class="token class-name">OrderStatus</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;更新订单id:{} {}&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> updateOrderRecord <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;成功&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">rollback</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> actionContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//获取订单id</span>\n        <span class="token keyword">long</span> orderId <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>actionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;orderId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//更新订单状态为支付失败</span>\n        <span class="token class-name">Integer</span> updateOrderRecord <span class="token operator">=</span> orderMapper<span class="token punctuation">.</span><span class="token function">updateOrderStatus</span><span class="token punctuation">(</span>orderId<span class="token punctuation">,</span><span class="token class-name">OrderStatus</span><span class="token punctuation">.</span><span class="token constant">FAIL</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;更新订单id:{} {}&quot;</span><span class="token punctuation">,</span> orderId<span class="token punctuation">,</span> updateOrderRecord <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;成功&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h4 id="全局事务" tabindex="-1"><a class="header-anchor" href="#全局事务" aria-hidden="true">#</a> 全局事务</h4><p><strong>在全局事务发起者中添加@GlobalTransactional注解</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>\n<span class="token annotation punctuation">@Slf4j</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BusinessServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">BussinessService</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">AccountFeignService</span> accountFeignService<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">StorageFeignService</span> storageFeignService<span class="token punctuation">;</span>\n\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token annotation punctuation">@GlobalTransactional</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;createOrder&quot;</span><span class="token punctuation">,</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Order</span> <span class="token function">saveOrder</span><span class="token punctuation">(</span><span class="token class-name">OrderVo</span> orderVo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;=============用户下单=================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;当前 XID: {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">RootContext</span><span class="token punctuation">.</span><span class="token function">getXID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//获取全局唯一订单号  测试使用</span>\n        <span class="token class-name">Long</span> orderId <span class="token operator">=</span> <span class="token class-name">UUIDGenerator</span><span class="token punctuation">.</span><span class="token function">generateUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//阶段一： 创建订单</span>\n        <span class="token class-name">Order</span> order <span class="token operator">=</span> orderService<span class="token punctuation">.</span><span class="token function">prepareSaveOrder</span><span class="token punctuation">(</span>orderVo<span class="token punctuation">,</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//扣减库存</span>\n        storageFeignService<span class="token punctuation">.</span><span class="token function">deduct</span><span class="token punctuation">(</span>orderVo<span class="token punctuation">.</span><span class="token function">getCommodityCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> orderVo<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//扣减余额</span>\n        accountFeignService<span class="token punctuation">.</span><span class="token function">debit</span><span class="token punctuation">(</span>orderVo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> orderVo<span class="token punctuation">.</span><span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> order<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><hr><h4 id="账户冻结案例" tabindex="-1"><a class="header-anchor" href="#账户冻结案例" aria-hidden="true">#</a> 账户冻结案例</h4><p><img src="/images/algorithm/image-20230421172527736.png" alt="image-20230421172527736"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@LocalTCC</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AccountService</span> <span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**\n     * 用户账户扣款\n     *\n     * 定义两阶段提交，在try阶段通过@TwoPhaseBusinessAction注解定义了分支事务的 resourceId，commit和 cancel 方法\n     *  name = 该tcc的bean名称,全局唯一\n     *  commitMethod = commit 为二阶段确认方法\n     *  rollbackMethod = rollback 为二阶段取消方法\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">userId</span>\n     * <span class="token keyword">@param</span> <span class="token parameter">money</span> 从用户账户中扣除的金额\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@TwoPhaseBusinessAction</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;debit&quot;</span><span class="token punctuation">,</span> commitMethod <span class="token operator">=</span> <span class="token string">&quot;commit&quot;</span><span class="token punctuation">,</span> rollbackMethod <span class="token operator">=</span> <span class="token string">&quot;rollback&quot;</span><span class="token punctuation">,</span> useTCCFence <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n    <span class="token keyword">boolean</span> <span class="token function">debit</span><span class="token punctuation">(</span><span class="token annotation punctuation">@BusinessActionContextParameter</span><span class="token punctuation">(</span>paramName <span class="token operator">=</span> <span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> userId<span class="token punctuation">,</span>\n                  <span class="token annotation punctuation">@BusinessActionContextParameter</span><span class="token punctuation">(</span>paramName <span class="token operator">=</span> <span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 提交事务，二阶段确认方法可以另命名，但要保证与commitMethod一致\n     * context可以传递try方法的参数\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">actionContext</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token keyword">boolean</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> actionContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 回滚事务，二阶段取消方法可以另命名，但要保证与rollbackMethod一致\n     *\n     * <span class="token keyword">@param</span> <span class="token parameter">actionContext</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token keyword">boolean</span> <span class="token function">rollback</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> actionContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><blockquote><p>实现</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>\n<span class="token annotation punctuation">@Slf4j</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AccountServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">AccountService</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">AccountMapper</span> accountMapper<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Transactional</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">debit</span><span class="token punctuation">(</span><span class="token annotation punctuation">@BusinessActionContextParameter</span><span class="token punctuation">(</span>paramName <span class="token operator">=</span> <span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> userId<span class="token punctuation">,</span>\n                         <span class="token annotation punctuation">@BusinessActionContextParameter</span><span class="token punctuation">(</span>paramName <span class="token operator">=</span> <span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> money<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;=============冻结用户账户余额=================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;当前 XID: {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">RootContext</span><span class="token punctuation">.</span><span class="token function">getXID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token function">checkBalance</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;开始冻结用户 {} 余额&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//冻结金额</span>\n        <span class="token class-name">Integer</span> record <span class="token operator">=</span> accountMapper<span class="token punctuation">.</span><span class="token function">freezeBalance</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;冻结用户 {} 余额结果:{}&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">,</span> record <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;操作成功&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;扣减余额失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> actionContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;=============扣减冻结金额=================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> userId <span class="token operator">=</span> actionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> money <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> actionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//扣减冻结金额</span>\n        accountMapper<span class="token punctuation">.</span><span class="token function">reduceFreezeBalance</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">rollback</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> actionContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;=============解冻金额=================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">String</span> userId <span class="token operator">=</span> actionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> money <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> actionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//解冻金额</span>\n        accountMapper<span class="token punctuation">.</span><span class="token function">unfreezeBalance</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">checkBalance</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">,</span> <span class="token keyword">int</span> money<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;检查用户 {} 余额&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Account</span> account <span class="token operator">=</span> accountMapper<span class="token punctuation">.</span><span class="token function">selectByUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> money<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;用户 {} 余额不足，当前余额:{}&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">,</span> account<span class="token punctuation">.</span><span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;余额不足&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><blockquote><p>sql</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Repository</span>\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AccountMapper</span> <span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**\n     * 查询账户\n     * <span class="token keyword">@param</span> <span class="token parameter">userId</span>\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;select id, user_id, money from account_tbl WHERE user_id = #{userId}&quot;</span><span class="token punctuation">)</span>\n    <span class="token class-name">Account</span> <span class="token function">selectByUserId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 扣减余额\n     * <span class="token keyword">@param</span> <span class="token parameter">userId</span> 用户id\n     * <span class="token keyword">@param</span> <span class="token parameter">money</span> 要扣减的金额\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@Update</span><span class="token punctuation">(</span><span class="token string">&quot;update account_tbl set money=money-#{money} where user_id = #{userId}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">int</span> <span class="token function">reduceBalance</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> userId<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 冻结金额  Try: 账户余额-支出余额，冻结余额+支出余额\n     * <span class="token keyword">@param</span> <span class="token parameter">userId</span> 用户id\n     * <span class="token keyword">@param</span> <span class="token parameter">money</span> 要扣减的金额\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@Update</span><span class="token punctuation">(</span><span class="token string">&quot;update account_tbl set money=money-#{money},freeze_money=freeze_money+#{money} where user_id = #{userId}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">int</span> <span class="token function">freezeBalance</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> userId<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 扣减冻结金额  Confirm: 冻结余额-支出余额 （真正的扣减余额）\n     * <span class="token keyword">@param</span> <span class="token parameter">userId</span> 用户id\n     * <span class="token keyword">@param</span> <span class="token parameter">money</span> 要扣减的金额\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@Update</span><span class="token punctuation">(</span><span class="token string">&quot;update account_tbl set freeze_money=freeze_money-#{money} where user_id = #{userId}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">int</span> <span class="token function">reduceFreezeBalance</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> userId<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 解冻金额  Cancel: 账户余额+支出余额，冻结余额-支出余额\n     * <span class="token keyword">@param</span> <span class="token parameter">userId</span> 用户id\n     * <span class="token keyword">@param</span> <span class="token parameter">money</span> 要扣减的金额\n     * <span class="token keyword">@return</span>\n     */</span>\n    <span class="token annotation punctuation">@Update</span><span class="token punctuation">(</span><span class="token string">&quot;update account_tbl set money=money+#{money},freeze_money=freeze_money-#{money} where user_id = #{userId}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">int</span> <span class="token function">unfreezeBalance</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> userId<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h3 id="服务" tabindex="-1"><a class="header-anchor" href="#服务" aria-hidden="true">#</a> 服务</h3><p><img src="/images/algorithm/image-20230421144853834.png" alt="image-20230421144853834"></p><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><p><img src="/images/algorithm/image-20230421163840015.png" alt="image-20230421163840015"></p>',27),m={},d=(0,a(66262).A)(m,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[t,(0,p.Lk)("p",null,[(0,p.Lk)("a",e,[(0,p.eW)("learncode/seata/learnSeata/seata-tcc at main · Q10Viking/learncode (github.com)"),(0,p.bF)(a)])]),o,c,l,u,(0,p.Lk)("p",null,[(0,p.Lk)("a",r,[(0,p.eW)("版本说明 · alibaba/spring-cloud-alibaba Wiki (github.com)"),(0,p.bF)(a)])]),i,(0,p.Lk)("p",null,[(0,p.Lk)("a",k,[(0,p.eW)("seata/mysql.sql at 1.5.2 · seata/seata (github.com)"),(0,p.bF)(a)])]),b],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);