"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[43418],{35413:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-937b512e",path:"/MySQL/30%20%E5%AD%90%E6%9F%A5%E8%AF%A2.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/MySQL/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"子查询",slug:"子查询",children:[]},{level:2,title:"非关联子查询",slug:"非关联子查询",children:[]},{level:2,title:"关联子查询",slug:"关联子查询",children:[{level:3,title:"EXISTS 子查询",slug:"exists-子查询",children:[]},{level:3,title:"NOT EXISTS子查询",slug:"not-exists子查询",children:[]},{level:3,title:"集合比较子查询",slug:"集合比较子查询",children:[]},{level:3,title:"ANY和ALL",slug:"any和all",children:[]}]},{level:2,title:"将子查询作为计算字段👍",slug:"将子查询作为计算字段👍",children:[]},{level:2,title:"测试SQL资源",slug:"测试sql资源",children:[]}],filePathRelative:"MySQL/30 子查询.md"}},4148:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var e=a(20641);const p=(0,e.Fv)('<h2 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询" aria-hidden="true">#</a> 子查询</h2><p>SQL 允许我们进行子查询，也就是嵌套在查询中的查询。这样做的好处是可以让我们进行更复杂的查询，同时更加容易理解查询的过程。因为很多时候，我们无法直接从数据表中得到查询结果，需要从查询结果集中再次进行查询，才能得到想要的结果。<strong>这个“查询结果集”就是子查询</strong>。</p><p><img src="/images/MySQL/image-20230510223802919.png" alt="image-20230510223802919"></p><h2 id="非关联子查询" tabindex="-1"><a class="header-anchor" href="#非关联子查询" aria-hidden="true">#</a> 非关联子查询</h2><blockquote><p>子查询从数据表中查询了数据结果，如果这个数据结果只执行一次，然后这个数据结果作为主查询的条件进行执行，那么这样的子查询叫做非关联子查询</p></blockquote><p>知道哪个球员的身高最高，最高身高是多少，就可以采用子查询的方式：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> player_name<span class="token punctuation">,</span> height <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> height <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">max</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span> <span class="token keyword">FROM</span> player<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">---------------+--------+</span>\n<span class="token operator">|</span> player_name   <span class="token operator">|</span> height <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">---------------+--------+</span>\n<span class="token operator">|</span> 索恩<span class="token operator">-</span>马克     <span class="token operator">|</span>   <span class="token number">2.16</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">---------------+--------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="关联子查询" tabindex="-1"><a class="header-anchor" href="#关联子查询" aria-hidden="true">#</a> 关联子查询</h2><blockquote><p>如果子查询的执行依赖于外部查询，通常情况下都是因为子查询中的表用到了外部的表，并进行了条件关联，因此每执行一次外部查询，子查询都要重新计算一次，这样的子查询就称之为关联子查询</p></blockquote><p>查找每个球队中大于平均身高的球员有哪些，并显示他们的球员姓名、身高以及所在球队 ID</p><p>首先我们需要统计球队的平均身高，即<code>SELECT avg(height) FROM player AS b WHERE a.team_id = b.team_id</code>，然后筛选身高大于这个数值的球员姓名、身高和球队 ID，即：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_id <span class="token keyword">FROM</span> player <span class="token keyword">AS</span> a <span class="token keyword">WHERE</span> height <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">avg</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span> <span class="token keyword">FROM</span> player <span class="token keyword">AS</span> b <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>team_id <span class="token operator">=</span> b<span class="token punctuation">.</span>team_id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">------------------------------------+--------+---------+</span>\n<span class="token operator">|</span> player_name                        <span class="token operator">|</span> height <span class="token operator">|</span> team_id <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">------------------------------------+--------+---------+</span>\n<span class="token operator">|</span> 安德烈<span class="token operator">-</span>德拉蒙德                    <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 索恩<span class="token operator">-</span>马克                          <span class="token operator">|</span>   <span class="token number">2.16</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 扎扎<span class="token operator">-</span>帕楚里亚                      <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 乔恩<span class="token operator">-</span>洛伊尔                        <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 布雷克<span class="token operator">-</span>格里芬                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 雷吉<span class="token operator">-</span>巴洛克                        <span class="token operator">|</span>   <span class="token number">2.01</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 斯坦利<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.01</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 亨利<span class="token operator">-</span>埃伦森                        <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 斯维亚托斯拉夫<span class="token operator">-</span>米凯卢克            <span class="token operator">|</span>   <span class="token number">2.03</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 博扬<span class="token operator">-</span>博格达诺维奇                  <span class="token operator">|</span>   <span class="token number">2.03</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 多曼塔斯<span class="token operator">-</span>萨博尼斯                  <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 迈尔斯<span class="token operator">-</span>特纳                        <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 赛迪斯<span class="token operator">-</span>杨                          <span class="token operator">|</span>   <span class="token number">2.03</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 道格<span class="token operator">-</span>迈克德莫特                    <span class="token operator">|</span>   <span class="token number">2.03</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span> TJ<span class="token operator">-</span>利夫                            <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 凯尔<span class="token operator">-</span>奥奎因                        <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">------------------------------------+--------+---------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><hr><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token function">avg</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span> <span class="token keyword">FROM</span> player <span class="token keyword">AS</span> b <span class="token keyword">WHERE</span> b<span class="token punctuation">.</span>team_id <span class="token operator">=</span> <span class="token number">1001</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-------------+</span>\n<span class="token operator">|</span> <span class="token function">avg</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-------------+</span>\n<span class="token operator">|</span>    <span class="token number">1.987500</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="exists-子查询" tabindex="-1"><a class="header-anchor" href="#exists-子查询" aria-hidden="true">#</a> EXISTS 子查询</h3><blockquote><p>关联子查询通常也会和 EXISTS 一起来使用，EXISTS 子查询用来判断条件是否满足，满足的话为 True，不满足为 False</p></blockquote><p>比如我们想要看出场过的球员都有哪些，并且显示他们的姓名、球员 ID 和球队 ID。在这个统计中，是否出场是通过 player_score 这张表中的球员出场表现来统计的，如果某个球员在 player_score 中有出场记录则代表他出场过，这里就使用到了 EXISTS 子查询，即<code>EXISTS (SELECT player_id FROM player_score WHERE player.player_id = player_score.player_id)</code>，然后将它作为筛选的条件，实际上也是关联子查询，即：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> team_id<span class="token punctuation">,</span> player_name <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> player_id <span class="token keyword">FROM</span> player_score <span class="token keyword">WHERE</span> player<span class="token punctuation">.</span>player_id <span class="token operator">=</span> player_score<span class="token punctuation">.</span>player_id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+---------------------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> team_id <span class="token operator">|</span> player_name               <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+---------------------------+</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10003</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 安德烈<span class="token operator">-</span>德拉蒙德           <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10004</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 索恩<span class="token operator">-</span>马克                 <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10005</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 布鲁斯<span class="token operator">-</span>布朗               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10006</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 兰斯顿<span class="token operator">-</span>加洛韦             <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10007</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 格伦<span class="token operator">-</span>罗宾逊三世           <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10008</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 伊斯梅尔<span class="token operator">-</span>史密斯           <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10009</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 扎扎<span class="token operator">-</span>帕楚里亚             <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10010</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 乔恩<span class="token operator">-</span>洛伊尔               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10022</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 博扬<span class="token operator">-</span>博格达诺维奇         <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10025</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 赛迪斯<span class="token operator">-</span>杨                 <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10024</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 迈尔斯<span class="token operator">-</span>特纳               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10028</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 泰瑞克<span class="token operator">-</span>埃文斯             <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10030</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 科里<span class="token operator">-</span>约瑟夫               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10023</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 多曼塔斯<span class="token operator">-</span>萨博尼斯         <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10029</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 道格<span class="token operator">-</span>迈克德莫特           <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10031</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿龙<span class="token operator">-</span>霍勒迪               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10032</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> TJ<span class="token operator">-</span>利夫                   <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+---------------------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>统计应该为19条数据，验证正确</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> player_id <span class="token keyword">FROM</span> player_score <span class="token keyword">WHERE</span> player<span class="token punctuation">.</span>player_id <span class="token operator">=</span> player_score<span class="token punctuation">.</span>player_id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span>       <span class="token number">19</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="not-exists子查询" tabindex="-1"><a class="header-anchor" href="#not-exists子查询" aria-hidden="true">#</a> NOT EXISTS子查询</h3><p>NOT EXISTS 就是不存在的意思，我们也可以通过 NOT EXISTS 查询不存在于 player_score 表中的球员信息，比如主表中的 player_id 不在子表 player_score 中，判断语句为<code>NOT EXISTS (SELECT player_id FROM player_score WHERE player.player_id = player_score.player_id)</code>。整体的 SQL 语句为</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> team_id<span class="token punctuation">,</span> player_name <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> player_id <span class="token keyword">FROM</span> player_score <span class="token keyword">WHERE</span> player<span class="token punctuation">.</span>player_id <span class="token operator">=</span> player_score<span class="token punctuation">.</span>player_id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> team_id <span class="token operator">|</span> player_name                        <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+</span>\n<span class="token operator">|</span>     <span class="token number">10011</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 布雷克<span class="token operator">-</span>格里芬                      <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10012</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>巴洛克                        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10013</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 卢克<span class="token operator">-</span>肯纳德                        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10014</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 斯坦利<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10015</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 亨利<span class="token operator">-</span>埃伦森                        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10016</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 凯里<span class="token operator">-</span>托马斯                        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10017</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 何塞<span class="token operator">-</span>卡尔德隆                      <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10018</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 斯维亚托斯拉夫<span class="token operator">-</span>米凯卢克            <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10019</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 扎克<span class="token operator">-</span>洛夫顿                        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10020</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 卡林<span class="token operator">-</span>卢卡斯                        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10021</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 维克多<span class="token operator">-</span>奥拉迪波                    <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10026</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 达伦<span class="token operator">-</span>科里森                        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10027</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 韦斯利<span class="token operator">-</span>马修斯                      <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10033</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 凯尔<span class="token operator">-</span>奥奎因                        <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10034</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 埃德蒙<span class="token operator">-</span>萨姆纳                      <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10035</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 达文<span class="token operator">-</span>里德                          <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+------------------------------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>我们统计一下记录</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> player_id <span class="token keyword">FROM</span> player_score <span class="token keyword">WHERE</span> player<span class="token punctuation">.</span>player_id <span class="token operator">=</span> player_score<span class="token punctuation">.</span>player_id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span>       <span class="token number">18</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>上场的19人，没有上场的18人，一共37人，正确（因为我们数据库中只存在了37人）</p></blockquote><hr><h3 id="集合比较子查询" tabindex="-1"><a class="header-anchor" href="#集合比较子查询" aria-hidden="true">#</a> 集合比较子查询</h3><p>集合比较子查询的作用是与另一个查询结果集进行比较，我们可以在子查询中使用 IN、ANY、ALL 和 SOME 操作符，它们的含义和英文意义一样：</p><p><img src="/images/MySQL/image-20230510232006636.png" alt="image-20230510232006636"></p><h4 id="in" tabindex="-1"><a class="header-anchor" href="#in" aria-hidden="true">#</a> IN</h4><p>还是通过上面那个例子，假设我们想要看出场过的球员都有哪些，可以采用 IN 子查询来进行操作：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> team_id<span class="token punctuation">,</span> player_name <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> player_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> player_id <span class="token keyword">FROM</span> player_score <span class="token keyword">WHERE</span> player<span class="token punctuation">.</span>player_id <span class="token operator">=</span> player_score<span class="token punctuation">.</span>player_id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+---------------------------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> team_id <span class="token operator">|</span> player_name               <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+---------------------------+</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10003</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 安德烈<span class="token operator">-</span>德拉蒙德           <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10004</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 索恩<span class="token operator">-</span>马克                 <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10005</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 布鲁斯<span class="token operator">-</span>布朗               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10006</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 兰斯顿<span class="token operator">-</span>加洛韦             <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10007</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 格伦<span class="token operator">-</span>罗宾逊三世           <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10008</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 伊斯梅尔<span class="token operator">-</span>史密斯           <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10009</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 扎扎<span class="token operator">-</span>帕楚里亚             <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10010</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span> 乔恩<span class="token operator">-</span>洛伊尔               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10022</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 博扬<span class="token operator">-</span>博格达诺维奇         <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10025</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 赛迪斯<span class="token operator">-</span>杨                 <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10024</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 迈尔斯<span class="token operator">-</span>特纳               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10028</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 泰瑞克<span class="token operator">-</span>埃文斯             <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10030</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 科里<span class="token operator">-</span>约瑟夫               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10023</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 多曼塔斯<span class="token operator">-</span>萨博尼斯         <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10029</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 道格<span class="token operator">-</span>迈克德莫特           <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10031</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> 阿龙<span class="token operator">-</span>霍勒迪               <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10032</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span> TJ<span class="token operator">-</span>利夫                   <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------+---------------------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>运行结果和上面的是一样的，那么问题来了，既然 IN 和 EXISTS 都可以得到相同的结果，那么我们该使用 IN 还是 EXISTS 呢？</p><p>把这个模式抽象为</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> A <span class="token keyword">WHERE</span> cc <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> cc <span class="token keyword">FROM</span> B <span class="token keyword">WHERE</span> B<span class="token punctuation">.</span>cc<span class="token operator">=</span>A<span class="token punctuation">.</span>cc<span class="token punctuation">)</span>\n<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> A <span class="token keyword">WHERE</span> EXIST <span class="token punctuation">(</span><span class="token keyword">SELECT</span> cc <span class="token keyword">FROM</span> B <span class="token keyword">WHERE</span> B<span class="token punctuation">.</span>cc<span class="token operator">=</span>A<span class="token punctuation">.</span>cc<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>实际上在查询过程中，在我们对 cc 列建立索引的情况下，我们还需要判断表 A 和表 B 的大小。在这里例子当中，表 A 指的是 player 表，表 B 指的是 player_score 表。</p><ul><li>如果表 A 比表 B 大，那么 IN 子查询的效率要比 EXIST 子查询效率高，因为这时 B 表中如果对 cc 列进行了索引，那么 IN 子查询的效率就会比较高。</li><li>如果表 A 比表 B 小，那么使用 EXISTS 子查询效率会更高，因为我们可以使用到 A 表中对 cc 列的索引，而不用从 B 中进行 cc 列的查询</li></ul><blockquote><p>❤️所以IN是使用子查询的索引，exists使用的是外表的索引❤️</p></blockquote><h3 id="any和all" tabindex="-1"><a class="header-anchor" href="#any和all" aria-hidden="true">#</a> ANY和ALL</h3><p>ANY 和 ALL 都需要使用比较符，比较符包括了<code>（&gt;）（=）（&lt;）（&gt;=）（&lt;=）和（&lt;&gt;）</code>等</p><p>查询球员表中，<code>比印第安纳步行者</code>（对应的 team_id 为 1002）中任何一个球员身高高的球员的信息，并且输出他们的球员 ID、球员姓名和球员身高</p><p>首先我们需要找出所有印第安纳步行者队中的球员身高，即<code>SELECT height FROM player WHERE team_id = 1002</code>，然后使用 ANY 子查询即：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_id <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> height <span class="token operator">&gt;</span> <span class="token keyword">ANY</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> height <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> team_id <span class="token operator">=</span> <span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+------------------------------------+--------+---------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> player_name                        <span class="token operator">|</span> height <span class="token operator">|</span> team_id <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+------------------------------------+--------+---------+</span>\n<span class="token operator">|</span>     <span class="token number">10001</span> <span class="token operator">|</span> 韦恩<span class="token operator">-</span>艾灵顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10002</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>杰克逊                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10003</span> <span class="token operator">|</span> 安德烈<span class="token operator">-</span>德拉蒙德                    <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10004</span> <span class="token operator">|</span> 索恩<span class="token operator">-</span>马克                          <span class="token operator">|</span>   <span class="token number">2.16</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10005</span> <span class="token operator">|</span> 布鲁斯<span class="token operator">-</span>布朗                        <span class="token operator">|</span>   <span class="token number">1.96</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10006</span> <span class="token operator">|</span> 兰斯顿<span class="token operator">-</span>加洛韦                      <span class="token operator">|</span>   <span class="token number">1.88</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10007</span> <span class="token operator">|</span> 格伦<span class="token operator">-</span>罗宾逊三世                    <span class="token operator">|</span>   <span class="token number">1.98</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10009</span> <span class="token operator">|</span> 扎扎<span class="token operator">-</span>帕楚里亚                      <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10010</span> <span class="token operator">|</span> 乔恩<span class="token operator">-</span>洛伊尔                        <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10011</span> <span class="token operator">|</span> 布雷克<span class="token operator">-</span>格里芬                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10012</span> <span class="token operator">|</span> 雷吉<span class="token operator">-</span>巴洛克                        <span class="token operator">|</span>   <span class="token number">2.01</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10013</span> <span class="token operator">|</span> 卢克<span class="token operator">-</span>肯纳德                        <span class="token operator">|</span>   <span class="token number">1.96</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10014</span> <span class="token operator">|</span> 斯坦利<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.01</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10015</span> <span class="token operator">|</span> 亨利<span class="token operator">-</span>埃伦森                        <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10016</span> <span class="token operator">|</span> 凯里<span class="token operator">-</span>托马斯                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10017</span> <span class="token operator">|</span> 何塞<span class="token operator">-</span>卡尔德隆                      <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10018</span> <span class="token operator">|</span> 斯维亚托斯拉夫<span class="token operator">-</span>米凯卢克            <span class="token operator">|</span>   <span class="token number">2.03</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10019</span> <span class="token operator">|</span> 扎克<span class="token operator">-</span>洛夫顿                        <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10020</span> <span class="token operator">|</span> 卡林<span class="token operator">-</span>卢卡斯                        <span class="token operator">|</span>   <span class="token number">1.85</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10021</span> <span class="token operator">|</span> 维克多<span class="token operator">-</span>奥拉迪波                    <span class="token operator">|</span>   <span class="token number">1.93</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10022</span> <span class="token operator">|</span> 博扬<span class="token operator">-</span>博格达诺维奇                  <span class="token operator">|</span>   <span class="token number">2.03</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10023</span> <span class="token operator">|</span> 多曼塔斯<span class="token operator">-</span>萨博尼斯                  <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10024</span> <span class="token operator">|</span> 迈尔斯<span class="token operator">-</span>特纳                        <span class="token operator">|</span>   <span class="token number">2.11</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10025</span> <span class="token operator">|</span> 赛迪斯<span class="token operator">-</span>杨                          <span class="token operator">|</span>   <span class="token number">2.03</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10027</span> <span class="token operator">|</span> 韦斯利<span class="token operator">-</span>马修斯                      <span class="token operator">|</span>   <span class="token number">1.96</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10028</span> <span class="token operator">|</span> 泰瑞克<span class="token operator">-</span>埃文斯                      <span class="token operator">|</span>   <span class="token number">1.98</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10029</span> <span class="token operator">|</span> 道格<span class="token operator">-</span>迈克德莫特                    <span class="token operator">|</span>   <span class="token number">2.03</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10030</span> <span class="token operator">|</span> 科里<span class="token operator">-</span>约瑟夫                        <span class="token operator">|</span>   <span class="token number">1.91</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10031</span> <span class="token operator">|</span> 阿龙<span class="token operator">-</span>霍勒迪                        <span class="token operator">|</span>   <span class="token number">1.85</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10032</span> <span class="token operator">|</span> TJ<span class="token operator">-</span>利夫                            <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10033</span> <span class="token operator">|</span> 凯尔<span class="token operator">-</span>奥奎因                        <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10034</span> <span class="token operator">|</span> 埃德蒙<span class="token operator">-</span>萨姆纳                      <span class="token operator">|</span>   <span class="token number">1.96</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10035</span> <span class="token operator">|</span> 达文<span class="token operator">-</span>里德                          <span class="token operator">|</span>   <span class="token number">1.98</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10036</span> <span class="token operator">|</span> 阿利兹<span class="token operator">-</span>约翰逊                      <span class="token operator">|</span>   <span class="token number">2.06</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">|</span>     <span class="token number">10037</span> <span class="token operator">|</span> 伊凯·阿尼博古                      <span class="token operator">|</span>   <span class="token number">2.08</span> <span class="token operator">|</span>    <span class="token number">1002</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+------------------------------------+--------+---------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p>运行结果为 35 条，你发现有 2 个人的身高是不如印第安纳步行者的所有球员的</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> height <span class="token operator">&gt;</span> <span class="token keyword">ANY</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> height <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> team_id <span class="token operator">=</span> <span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span>       <span class="token number">35</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><hr><p>查询比印第安纳步行者（对应的 team_id 为 1002）中所有球员身高都高的球员的信息，并且输出球员 ID、球员姓名和球员身高</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> player_id<span class="token punctuation">,</span> player_name<span class="token punctuation">,</span> height<span class="token punctuation">,</span> team_id <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> height <span class="token operator">&gt;</span> <span class="token keyword">ALL</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> height <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> team_id <span class="token operator">=</span> <span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------------+--------+---------+</span>\n<span class="token operator">|</span> player_id <span class="token operator">|</span> player_name   <span class="token operator">|</span> height <span class="token operator">|</span> team_id <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------------+--------+---------+</span>\n<span class="token operator">|</span>     <span class="token number">10004</span> <span class="token operator">|</span> 索恩<span class="token operator">-</span>马克     <span class="token operator">|</span>   <span class="token number">2.16</span> <span class="token operator">|</span>    <span class="token number">1001</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+---------------+--------+---------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>需要强调的是 ANY、ALL 关键字必须与一个比较操作符一起使用。因为如果你不使用比较操作符，就起不到集合比较的作用，那么使用 ANY 和 ALL 就没有任何意义。</p></blockquote><h2 id="将子查询作为计算字段👍" tabindex="-1"><a class="header-anchor" href="#将子查询作为计算字段👍" aria-hidden="true">#</a> 将子查询作为计算字段👍</h2><p>子查询也可以作为主查询的计算字段。</p><p>比如想查询每个球队的球员数，也就是对应 team 这张表，我需要查询相同的 team_id 在 player 这张表中所有的球员数量是多少。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> team_name<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> player <span class="token keyword">WHERE</span> player<span class="token punctuation">.</span>team_id <span class="token operator">=</span> team<span class="token punctuation">.</span>team_id<span class="token punctuation">)</span> <span class="token keyword">AS</span> player_num <span class="token keyword">FROM</span> team<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------------------+------------+</span>\n<span class="token operator">|</span> team_name             <span class="token operator">|</span> player_num <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------------------+------------+</span>\n<span class="token operator">|</span> 底特律活塞            <span class="token operator">|</span>         <span class="token number">20</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 印第安纳步行者        <span class="token operator">|</span>         <span class="token number">17</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 亚特兰大老鹰          <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------------------+------------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="测试sql资源" tabindex="-1"><a class="header-anchor" href="#测试sql资源" aria-hidden="true">#</a> 测试SQL资源</h2>',55),t={href:"https://github.com/cystanford/sql_nba_data",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Lk)("div",{class:"language-sql ext-sql line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-sql"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"DROP"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"IF"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"EXISTS"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"CREATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"AUTO_INCREMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球员ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球队ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_name"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"varchar"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"255"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(" utf8_general_ci "),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球员姓名'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"float"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"DEFAULT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球员身高'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"PRIMARY"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"KEY"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"USING"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"BTREE"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"UNIQUE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INDEX"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_name"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_name"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"USING"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"BTREE"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"ENGINE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"InnoDB"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8_general_ci ROW_FORMAT "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" Dynamic"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- Records of player"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'韦恩-艾灵顿'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.93"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'雷吉-杰克逊'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.91"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10003"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'安德烈-德拉蒙德'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10004"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'索恩-马克'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.16"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10005"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'布鲁斯-布朗'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.96"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10006"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'兰斯顿-加洛韦'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.88"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10007"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'格伦-罗宾逊三世'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.98"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10008"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'伊斯梅尔-史密斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.83"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10009"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'扎扎-帕楚里亚'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10010"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'乔恩-洛伊尔'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.08"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10011"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'布雷克-格里芬'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.08"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10012"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'雷吉-巴洛克'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.01"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10013"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'卢克-肯纳德'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.96"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10014"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'斯坦利-约翰逊'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.01"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10015"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'亨利-埃伦森'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10016"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'凯里-托马斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.91"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10017"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'何塞-卡尔德隆'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.91"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10018"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'斯维亚托斯拉夫-米凯卢克'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.03"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10019"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'扎克-洛夫顿'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.93"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10020"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'卡林-卢卡斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.85"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10021"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'维克多-奥拉迪波'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.93"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10022"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'博扬-博格达诺维奇'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.03"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10023"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'多曼塔斯-萨博尼斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10024"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'迈尔斯-特纳'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10025"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'赛迪斯-杨'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.03"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10026"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'达伦-科里森'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.83"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10027"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'韦斯利-马修斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.96"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10028"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'泰瑞克-埃文斯'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.98"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10029"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'道格-迈克德莫特'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.03"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10030"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'科里-约瑟夫'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.91"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10031"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'阿龙-霍勒迪'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.85"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10032"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'TJ-利夫'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.08"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10033"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'凯尔-奥奎因'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.08"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10034"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'埃德蒙-萨姆纳'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.96"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10035"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'达文-里德'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.98"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10036"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'阿利兹-约翰逊'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.06"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10037"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'伊凯·阿尼博古'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.08"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"15"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"16"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"17"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"18"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"19"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"20"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"21"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"22"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"23"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"24"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"25"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"26"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"27"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"28"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"29"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"30"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"31"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"32"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"33"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"34"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"35"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"36"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"37"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"38"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"39"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"40"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"41"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"42"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"43"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"44"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"45"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"46"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"47"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"48"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"49"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"50"),(0,e.Lk)("br")])],-1),k=(0,e.Lk)("div",{class:"language-sql ext-sql line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-sql"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"DROP"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"IF"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"EXISTS"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"CREATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球队ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_name"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"varchar"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"255"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(" utf8_general_ci "),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球队名称'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"PRIMARY"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"KEY"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"USING"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"BTREE"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"ENGINE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"InnoDB"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8_general_ci ROW_FORMAT "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" Dynamic"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- Records of team"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'底特律活塞'"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'印第安纳步行者'"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"1003"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'亚特兰大老鹰'"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br")])],-1),c=(0,e.Lk)("div",{class:"language-sql ext-sql line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-sql"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"DROP"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"IF"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"EXISTS"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"CREATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_level"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"varchar"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"255"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(" utf8_general_ci "),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'身高等级'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_lowest"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"float"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'该等级范围中的最低身高'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_highest"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"float"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'该等级范围中的最高身高'"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"ENGINE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"InnoDB"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8_general_ci ROW_FORMAT "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" Dynamic"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- Records of height_grades"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},"'A'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.00"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2.50"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},"'B'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.90"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.99"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},"'C'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.80"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.89"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("height_grades"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token string"},"'D'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.60"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1.79"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br")])],-1),l=(0,e.Lk)("div",{class:"language-sql ext-sql line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-sql"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"DROP"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"IF"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"EXISTS"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"CREATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("game_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'比赛ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'球员ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("is_first"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"tinyint"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'是否首发'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("playing_time"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'该球员本次比赛出场时间'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("rebound"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'篮板球'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("rebound_o"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'前场篮板'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("rebound_d"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'后场篮板'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("assist"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'助攻'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'比分'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("steal"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'抢断'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("blockshot"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'盖帽'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("fault"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'失误'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("foul"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'犯规'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("shoot_attempts"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'总出手'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("shoot_hits"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'命中'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("shoot_3_attempts"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'3分出手'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("shoot_3_hits"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'3分命中'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("shoot_p_attempts"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'罚球出手'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("shoot_p_hits"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'罚球命中'"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"ENGINE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"InnoDB"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8_general_ci ROW_FORMAT "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" Dynamic"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- Records of player_score"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"38"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"26"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"19"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"13"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"30"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"22"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"19"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"8"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10003"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"37"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"17"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"7"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"18"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"18"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"8"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10004"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"42"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"14"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"7"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10005"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"19"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10006"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"23"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"9"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10007"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"13"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"7"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10008"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"20"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10009"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10010"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"7"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10022"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"37"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"7"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"19"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"16"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"7"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10025"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"34"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"9"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"8"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"19"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"12"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"8"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10024"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"34"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"17"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"7"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10028"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"27"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"13"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10030"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"31"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"9"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10023"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"23"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"12"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"8"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"18"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"6"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"8"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10029"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"24"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"8"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10031"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"25"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"5"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"3"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"2"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("player_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"10032"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"4"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"0"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"15"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"16"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"17"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"18"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"19"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"20"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"21"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"22"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"23"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"24"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"25"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"26"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"27"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"28"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"29"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"30"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"31"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"32"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"33"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"34"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"35"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"36"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"37"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"38"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"39"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"40"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"41"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"42"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"43"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"44"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"45"),(0,e.Lk)("br")])],-1),r=(0,e.Lk)("div",{class:"language-sql ext-sql line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-sql"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"DROP"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"IF"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"EXISTS"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"CREATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"TABLE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)("  "),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("game_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'比赛ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("h_team_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'主队ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("v_team_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'客队ID'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("h_team_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'主队得分'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("v_team_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"int"),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"11"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"NOT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'客队得分'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("game_date"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"date"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"DEFAULT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token boolean"},"NULL"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"COMMENT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'比赛时间'"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)("\n  "),(0,e.Lk)("span",{class:"token keyword"},"PRIMARY"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"KEY"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("game_id"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"USING"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"BTREE"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"ENGINE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"InnoDB"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"CHARACTER"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"SET"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8 "),(0,e.Lk)("span",{class:"token keyword"},"COLLATE"),(0,e.eW)(),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" utf8_general_ci ROW_FORMAT "),(0,e.Lk)("span",{class:"token operator"},"="),(0,e.eW)(" Dynamic"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- Records of team_score"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token comment"},"-- ----------------------------"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1001"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"102"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"111"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'2019-04-01'"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n"),(0,e.Lk)("span",{class:"token keyword"},"INSERT"),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"INTO"),(0,e.eW)(),(0,e.Lk)("span",{class:"token identifier"},[(0,e.Lk)("span",{class:"token punctuation"},"`"),(0,e.eW)("team_score"),(0,e.Lk)("span",{class:"token punctuation"},"`")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token keyword"},"VALUES"),(0,e.eW)(),(0,e.Lk)("span",{class:"token punctuation"},"("),(0,e.Lk)("span",{class:"token number"},"10002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1002"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"1003"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"135"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token number"},"134"),(0,e.Lk)("span",{class:"token punctuation"},","),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},"'2019-04-10'"),(0,e.Lk)("span",{class:"token punctuation"},")"),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"4"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"5"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"6"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"7"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"8"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"9"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"10"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"11"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"12"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"13"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"14"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"15"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"16"),(0,e.Lk)("br")])],-1),u=(0,e.Fv)('<blockquote><p>player_score球员比赛成绩表</p></blockquote><p><img src="/images/MySQL/image-20230510224226803.png" alt="image-20230510224226803"></p><p>其中 shoot_attempts 代表总出手的次数，它等于二分球出手和三分球出手次数的总和。比如 2019 年 4 月 1 日，韦恩·艾灵顿在底特律活塞和印第安纳步行者的比赛中，总出手次数为 19，总命中 10，三分球 13 投 4 中，罚球 4 罚 2 中，因此总分 score=(10-4)×2+4×3+2=26，也就是二分球得分 12+ 三分球得分 12+ 罚球得分 2=26。</p><p>需要说明的是，通常在工作中，数据表的字段比较多，一开始创建的时候会知道每个字段的定义，过了一段时间再回过头来看，对当初的定义就不那么确定了，容易混淆字段，解决这一问题最好的方式就是做个说明文档，用实例举例。</p><p>比如 shoot_attempts 是总出手次数（这里的总出手次数 = 二分球出手次数 + 三分球出手次数，不包括罚球的次数），用上面提到的韦恩·艾灵顿的例子做补充说明，再回过头来看这张表的时候，就可以很容易理解每个字段的定义了。</p><hr><ul><li>team_score球队比赛成绩表</li></ul><p><img src="/images/MySQL/image-20230510224941642.png" alt="image-20230510224941642"></p><p>​</p><ul><li>player表,为球员表，一共有 37 个球员</li></ul><p><img src="/images/MySQL/image-20230510210601049.png" alt="image-20230510210601049"></p><ul><li><p>team表,球队表，一共有 3 支球队</p><p><img src="/images/MySQL/image-20230510210925627.png" alt="image-20230510210925627"></p></li><li><p>身高级别表 height_grades</p><p><img src="/images/MySQL/image-20230510211339268.png" alt="image-20230510211339268"></p></li></ul><hr>',13),L={},i=(0,a(66262).A)(L,[["render",function(n,s){const a=(0,e.g2)("OutboundLink"),L=(0,e.g2)("CodeGroupItem"),i=(0,e.g2)("CodeGroup");return(0,e.uX)(),(0,e.CE)(e.FK,null,[p,(0,e.Lk)("p",null,[(0,e.Lk)("a",t,[(0,e.eW)("cystanford/sql_nba_data: NBA球员表 (github.com)"),(0,e.bF)(a)])]),(0,e.bF)(i,null,{default:(0,e.k6)((()=>[(0,e.bF)(L,{title:"play表"},{default:(0,e.k6)((()=>[o])),_:1}),(0,e.bF)(L,{title:"team表"},{default:(0,e.k6)((()=>[k])),_:1}),(0,e.bF)(L,{title:"height_grades表"},{default:(0,e.k6)((()=>[c])),_:1}),(0,e.bF)(L,{title:"player_score球员比赛成绩表"},{default:(0,e.k6)((()=>[l])),_:1}),(0,e.bF)(L,{title:"team_score球队比赛成绩表"},{default:(0,e.k6)((()=>[r])),_:1})])),_:1}),u],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);