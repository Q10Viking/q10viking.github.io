"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[5968],{64033:(s,n,a)=>{a.r(n),a.d(n,{data:()=>p});const p={key:"v-062769c5",path:"/JVM/21%20%E9%9D%99%E6%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E7%B1%BB%E5%90%AF%E5%8A%A8%E7%BA%BF%E7%A8%8B%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/JVM/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"代码问题",slug:"代码问题",children:[]},{level:2,title:"分析",slug:"分析",children:[{level:3,title:"问题发现",slug:"问题发现",children:[]}]},{level:2,title:"修复问题",slug:"修复问题",children:[]}],filePathRelative:"JVM/21 静态初始化类启动线程问题分析.md"}},81647:(s,n,a)=>{a.r(n),a.d(n,{default:()=>t});const p=(0,a(20641).Fv)('<h2 id="代码问题" tabindex="-1"><a class="header-anchor" href="#代码问题" aria-hidden="true">#</a> 代码问题</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainTest</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">CountDownLatch</span> latch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token punctuation">{</span>\n        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            latch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;hzz-thread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;current thread: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            latch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;wake up&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>上面的代码只输出了<code>current thread: main</code>,并没有输出<code>hello world</code>,整个程序用于处于等待的状态。</p><p>从下图可以看到，<code>hzz-thread</code>是启动了的，但是却并没有执行任务，进行解锁main线程。</p><p><img src="/images/jvm/image-20230508163759656.png" alt="image-20230508163759656"></p><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><blockquote><p>反编译<code>javap -p MainTest.class</code></p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>MainTest</span> <span class="token punctuation">{</span>\n  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>CountDownLatch</span> latch<span class="token punctuation">;</span>\n  <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>MainTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> lambda$<span class="token keyword">static</span>$<span class="token function">0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">static</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>可以看到lambda表达式编译之后JVM会处理成一个<strong>私有静态方法</strong>。</p><blockquote><p>查看详细信息<code>javap -v -p MainTest.class</code></p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Classfile</span> <span class="token operator">/</span><span class="token class-name">D</span><span class="token operator">:</span><span class="token operator">/</span><span class="token class-name">Github</span><span class="token operator">/</span><span class="token keyword">static</span><span class="token operator">-</span>thread<span class="token operator">/</span>demo<span class="token operator">/</span>target<span class="token operator">/</span>test<span class="token operator">-</span>classes<span class="token operator">/</span>org<span class="token operator">/</span>hzz<span class="token operator">/</span><span class="token class-name">MainTest</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n  <span class="token class-name">Last</span> modified <span class="token number">2023</span><span class="token operator">-</span><span class="token number">5</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">;</span> size <span class="token number">1862</span> bytes\n  <span class="token constant">MD5</span> checksum f6bbe2f4d431637cb47a638d32460088\n  <span class="token class-name">Compiled</span> from <span class="token string">&quot;MainTest.java&quot;</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>MainTest</span>\n  minor version<span class="token operator">:</span> <span class="token number">0</span>\n  major version<span class="token operator">:</span> <span class="token number">52</span>\n  flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_SUPER</span>\n<span class="token class-name">Constant</span> pool<span class="token operator">:</span>\n    #<span class="token number">1</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">25.</span>#<span class="token number">45</span>       <span class="token comment">// java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>\n    #<span class="token number">2</span> <span class="token operator">=</span> <span class="token class-name">Fieldref</span>           #<span class="token number">46.</span>#<span class="token number">47</span>       <span class="token comment">// java/lang/System.out:Ljava/io/PrintStream;</span>\n    #<span class="token number">3</span> <span class="token operator">=</span> <span class="token class-name">String</span>             #<span class="token number">48</span>           <span class="token comment">// hello world</span>\n    #<span class="token number">4</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">49.</span>#<span class="token number">50</span>       <span class="token comment">// java/io/PrintStream.println:(Ljava/lang/String;)V</span>\n    #<span class="token number">5</span> <span class="token operator">=</span> <span class="token class-name">Fieldref</span>           #<span class="token number">24.</span>#<span class="token number">51</span>       <span class="token comment">// org/hzz/MainTest.latch:Ljava/util/concurrent/CountDownLatch;</span>\n    #<span class="token number">6</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">7.</span>#<span class="token number">52</span>        <span class="token comment">// java/util/concurrent/CountDownLatch.countDown:()V</span>\n    #<span class="token number">7</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">53</span>           <span class="token comment">// java/util/concurrent/CountDownLatch</span>\n    #<span class="token number">8</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">7.</span>#<span class="token number">54</span>        <span class="token comment">// java/util/concurrent/CountDownLatch.&quot;&lt;init&gt;&quot;:(I)V</span>\n    #<span class="token number">9</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">55</span>           <span class="token comment">// java/lang/Thread</span>\n   #<span class="token number">10</span> <span class="token operator">=</span> <span class="token class-name">InvokeDynamic</span>      #<span class="token number">0</span><span class="token operator">:</span>#<span class="token number">60</span>        <span class="token comment">// #0:run:()Ljava/lang/Runnable;</span>\n   #<span class="token number">11</span> <span class="token operator">=</span> <span class="token class-name">String</span>             #<span class="token number">61</span>           <span class="token comment">// hzz-thread</span>\n   #<span class="token number">12</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">9.</span>#<span class="token number">62</span>        <span class="token comment">// java/lang/Thread.&quot;&lt;init&gt;&quot;:(Ljava/lang/Runnable;Ljava/lang/String;)V</span>\n   #<span class="token number">13</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">9.</span>#<span class="token number">63</span>        <span class="token comment">// java/lang/Thread.start:()V</span>\n   #<span class="token number">14</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">64</span>           <span class="token comment">// java/lang/StringBuilder</span>\n   #<span class="token number">15</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">14.</span>#<span class="token number">45</span>       <span class="token comment">// java/lang/StringBuilder.&quot;&lt;init&gt;&quot;:()V</span>\n   #<span class="token number">16</span> <span class="token operator">=</span> <span class="token class-name">String</span>             #<span class="token number">65</span>           <span class="token comment">// current thread:</span>\n   #<span class="token number">17</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">14.</span>#<span class="token number">66</span>       <span class="token comment">// java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>\n   #<span class="token number">18</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">9.</span>#<span class="token number">67</span>        <span class="token comment">// java/lang/Thread.currentThread:()Ljava/lang/Thread;</span>\n   #<span class="token number">19</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">9.</span>#<span class="token number">68</span>        <span class="token comment">// java/lang/Thread.getName:()Ljava/lang/String;</span>\n   #<span class="token number">20</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">14.</span>#<span class="token number">69</span>       <span class="token comment">// java/lang/StringBuilder.toString:()Ljava/lang/String;</span>\n   #<span class="token number">21</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">7.</span>#<span class="token number">70</span>        <span class="token comment">// java/util/concurrent/CountDownLatch.await:()V</span>\n   #<span class="token number">22</span> <span class="token operator">=</span> <span class="token class-name">String</span>             #<span class="token number">71</span>           <span class="token comment">// wake up</span>\n   #<span class="token number">23</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">72</span>           <span class="token comment">// java/lang/InterruptedException</span>\n   #<span class="token number">24</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">73</span>           <span class="token comment">// org/hzz/MainTest</span>\n   #<span class="token number">25</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">74</span>           <span class="token comment">// java/lang/Object</span>\n   #<span class="token number">26</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               latch\n   #<span class="token number">27</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span>concurrent<span class="token operator">/</span><span class="token class-name">CountDownLatch</span><span class="token punctuation">;</span>\n   #<span class="token number">28</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span>\n   #<span class="token number">29</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n   #<span class="token number">30</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Code</span>\n   #<span class="token number">31</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">LineNumberTable</span>\n   #<span class="token number">32</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">LocalVariableTable</span>\n   #<span class="token number">33</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token keyword">this</span>\n   #<span class="token number">34</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Lorg</span><span class="token operator">/</span>hzz<span class="token operator">/</span><span class="token class-name">MainTest</span><span class="token punctuation">;</span>\n   #<span class="token number">35</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               main\n   #<span class="token number">36</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n   #<span class="token number">37</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               args\n   #<span class="token number">38</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>\n   #<span class="token number">39</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               lambda$<span class="token keyword">static</span>$<span class="token number">0</span>\n   #<span class="token number">40</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token generics"><span class="token punctuation">&lt;</span>clinit<span class="token punctuation">&gt;</span></span>\n   #<span class="token number">41</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">StackMapTable</span>\n   #<span class="token number">42</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">72</span>           <span class="token comment">// java/lang/InterruptedException</span>\n   #<span class="token number">43</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">SourceFile</span>\n   #<span class="token number">44</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">MainTest</span><span class="token punctuation">.</span>java\n   #<span class="token number">45</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">28</span><span class="token operator">:</span>#<span class="token number">29</span>       <span class="token comment">// &quot;&lt;init&gt;&quot;:()V</span>\n   #<span class="token number">46</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">75</span>           <span class="token comment">// java/lang/System</span>\n   #<span class="token number">47</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">76</span><span class="token operator">:</span>#<span class="token number">77</span>       <span class="token comment">// out:Ljava/io/PrintStream;</span>\n   #<span class="token number">48</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               hello world\n   #<span class="token number">49</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">78</span>           <span class="token comment">// java/io/PrintStream</span>\n   #<span class="token number">50</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">79</span><span class="token operator">:</span>#<span class="token number">80</span>       <span class="token comment">// println:(Ljava/lang/String;)V</span>\n   #<span class="token number">51</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">26</span><span class="token operator">:</span>#<span class="token number">27</span>       <span class="token comment">// latch:Ljava/util/concurrent/CountDownLatch;</span>\n   #<span class="token number">52</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">81</span><span class="token operator">:</span>#<span class="token number">29</span>       <span class="token comment">// countDown:()V</span>\n   #<span class="token number">53</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>util<span class="token operator">/</span>concurrent<span class="token operator">/</span><span class="token class-name">CountDownLatch</span>\n   #<span class="token number">54</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">28</span><span class="token operator">:</span>#<span class="token number">82</span>       <span class="token comment">// &quot;&lt;init&gt;&quot;:(I)V</span>\n   #<span class="token number">55</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Thread</span>\n   #<span class="token number">56</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">BootstrapMethods</span>\n   #<span class="token number">57</span> <span class="token operator">=</span> <span class="token class-name">MethodHandle</span>       #<span class="token number">6</span><span class="token operator">:</span>#<span class="token number">83</span>        <span class="token comment">// invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Lj</span>\nava<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodHandle</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">CallSite</span><span class="token punctuation">;</span>\n   #<span class="token number">58</span> <span class="token operator">=</span> <span class="token class-name">MethodType</span>         #<span class="token number">29</span>           <span class="token comment">//  ()V</span>\n   #<span class="token number">59</span> <span class="token operator">=</span> <span class="token class-name">MethodHandle</span>       #<span class="token number">6</span><span class="token operator">:</span>#<span class="token number">84</span>        <span class="token comment">// invokestatic org/hzz/MainTest.lambda$static$0:()V</span>\n   #<span class="token number">60</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">85</span><span class="token operator">:</span>#<span class="token number">86</span>       <span class="token comment">// run:()Ljava/lang/Runnable;</span>\n   #<span class="token number">61</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               hzz<span class="token operator">-</span>thread\n   #<span class="token number">62</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">28</span><span class="token operator">:</span>#<span class="token number">87</span>       <span class="token comment">// &quot;&lt;init&gt;&quot;:(Ljava/lang/Runnable;Ljava/lang/String;)V</span>\n   #<span class="token number">63</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">88</span><span class="token operator">:</span>#<span class="token number">29</span>       <span class="token comment">// start:()V</span>\n   #<span class="token number">64</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">StringBuilder</span>\n   #<span class="token number">65</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               current thread<span class="token operator">:</span>\n   #<span class="token number">66</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">89</span><span class="token operator">:</span>#<span class="token number">90</span>       <span class="token comment">// append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>\n   #<span class="token number">67</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">91</span><span class="token operator">:</span>#<span class="token number">92</span>       <span class="token comment">// currentThread:()Ljava/lang/Thread;</span>\n   #<span class="token number">68</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">93</span><span class="token operator">:</span>#<span class="token number">94</span>       <span class="token comment">// getName:()Ljava/lang/String;</span>\n   #<span class="token number">69</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">95</span><span class="token operator">:</span>#<span class="token number">94</span>       <span class="token comment">// toString:()Ljava/lang/String;</span>\n   #<span class="token number">70</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">96</span><span class="token operator">:</span>#<span class="token number">29</span>       <span class="token comment">// await:()V</span>\n   #<span class="token number">71</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               wake up\n   #<span class="token number">72</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">InterruptedException</span>\n   #<span class="token number">73</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               org<span class="token operator">/</span>hzz<span class="token operator">/</span><span class="token class-name">MainTest</span>\n   #<span class="token number">74</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span>\n   #<span class="token number">75</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">System</span>\n   #<span class="token number">76</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               out\n   #<span class="token number">77</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Ljava</span><span class="token operator">/</span>io<span class="token operator">/</span><span class="token class-name">PrintStream</span><span class="token punctuation">;</span>\n   #<span class="token number">78</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>io<span class="token operator">/</span><span class="token class-name">PrintStream</span>\n   #<span class="token number">79</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               println\n   #<span class="token number">80</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n   #<span class="token number">81</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               countDown\n   #<span class="token number">82</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n   #<span class="token number">83</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">97.</span>#<span class="token number">98</span>       <span class="token comment">// java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/Stri</span>\nng<span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodHandle</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">CallSite</span><span class="token punctuation">;</span>\n   #<span class="token number">84</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">24.</span>#<span class="token number">99</span>       <span class="token comment">// org/hzz/MainTest.lambda$static$0:()V</span>\n   #<span class="token number">85</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               run\n   #<span class="token number">86</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Runnable</span><span class="token punctuation">;</span>\n   #<span class="token number">87</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Runnable</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n   #<span class="token number">88</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               start\n   #<span class="token number">89</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               append\n   #<span class="token number">90</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">StringBuilder</span><span class="token punctuation">;</span>\n   #<span class="token number">91</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               currentThread\n   #<span class="token number">92</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Thread</span><span class="token punctuation">;</span>\n   #<span class="token number">93</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               getName\n   #<span class="token number">94</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>\n   #<span class="token number">95</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               toString\n   #<span class="token number">96</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               await\n   #<span class="token number">97</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">100</span>          <span class="token comment">// java/lang/invoke/LambdaMetafactory</span>\n   #<span class="token number">98</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">101</span><span class="token operator">:</span>#<span class="token number">105</span>     <span class="token comment">// metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;</span>\n   #<span class="token number">99</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">39</span><span class="token operator">:</span>#<span class="token number">29</span>       <span class="token comment">// lambda$static$0:()V</span>\n  #<span class="token number">100</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">LambdaMetafactory</span>\n  #<span class="token number">101</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               metafactory\n  #<span class="token number">102</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">107</span>          <span class="token comment">// java/lang/invoke/MethodHandles$Lookup</span>\n  #<span class="token number">103</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Lookup</span>\n  #<span class="token number">104</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">InnerClasses</span>\n  #<span class="token number">105</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodHandles</span>$<span class="token class-name">Lookup</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodHandle</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">CallSite</span><span class="token punctuation">;</span>\n  #<span class="token number">106</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">108</span>          <span class="token comment">// java/lang/invoke/MethodHandles</span>\n  #<span class="token number">107</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodHandles</span>$<span class="token class-name">Lookup</span>\n  #<span class="token number">108</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodHandles</span>\n<span class="token punctuation">{</span>\n  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>CountDownLatch</span> latch<span class="token punctuation">;</span>\n    descriptor<span class="token operator">:</span> <span class="token class-name">Ljava</span><span class="token operator">/</span>util<span class="token operator">/</span>concurrent<span class="token operator">/</span><span class="token class-name">CountDownLatch</span><span class="token punctuation">;</span>\n    flags<span class="token operator">:</span> <span class="token constant">ACC_PRIVATE</span><span class="token punctuation">,</span> <span class="token constant">ACC_STATIC</span>\n\n  <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span></span>MainTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span>\n    <span class="token class-name">Code</span><span class="token operator">:</span>\n      stack<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">1</span>\n         <span class="token number">0</span><span class="token operator">:</span> aload_0\n         <span class="token number">1</span><span class="token operator">:</span> invokespecial #<span class="token number">1</span>                  <span class="token comment">// Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>\n         <span class="token number">4</span><span class="token operator">:</span> <span class="token keyword">return</span>\n      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>\n        line <span class="token number">5</span><span class="token operator">:</span> <span class="token number">0</span>\n      <span class="token class-name">LocalVariableTable</span><span class="token operator">:</span>\n        <span class="token class-name">Start</span>  <span class="token class-name">Length</span>  <span class="token class-name">Slot</span>  <span class="token class-name">Name</span>   <span class="token class-name">Signature</span>\n            <span class="token number">0</span>       <span class="token number">5</span>     <span class="token number">0</span>  <span class="token keyword">this</span>   <span class="token class-name">Lorg</span><span class="token operator">/</span>hzz<span class="token operator">/</span><span class="token class-name">MainTest</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_STATIC</span>\n    <span class="token class-name">Code</span><span class="token operator">:</span>\n      stack<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">1</span>\n         <span class="token number">0</span><span class="token operator">:</span> <span class="token keyword">return</span>\n      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>\n        line <span class="token number">21</span><span class="token operator">:</span> <span class="token number">0</span>\n      <span class="token class-name">LocalVariableTable</span><span class="token operator">:</span>\n        <span class="token class-name">Start</span>  <span class="token class-name">Length</span>  <span class="token class-name">Slot</span>  <span class="token class-name">Name</span>   <span class="token class-name">Signature</span>\n            <span class="token number">0</span>       <span class="token number">1</span>     <span class="token number">0</span>  args   <span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> lambda$<span class="token keyword">static</span>$<span class="token function">0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n    flags<span class="token operator">:</span> <span class="token constant">ACC_PRIVATE</span><span class="token punctuation">,</span> <span class="token constant">ACC_STATIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_SYNTHETIC</span>\n    <span class="token class-name">Code</span><span class="token operator">:</span>\n      stack<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">0</span>\n         <span class="token number">0</span><span class="token operator">:</span> getstatic     #<span class="token number">2</span>                  <span class="token comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span>\n         <span class="token number">3</span><span class="token operator">:</span> ldc           #<span class="token number">3</span>                  <span class="token comment">// String hello world</span>\n         <span class="token number">5</span><span class="token operator">:</span> invokevirtual #<span class="token number">4</span>                  <span class="token comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>\n         <span class="token number">8</span><span class="token operator">:</span> getstatic     #<span class="token number">5</span>                  <span class="token comment">// Field latch:Ljava/util/concurrent/CountDownLatch;</span>\n        <span class="token number">11</span><span class="token operator">:</span> invokevirtual #<span class="token number">6</span>                  <span class="token comment">// Method java/util/concurrent/CountDownLatch.countDown:()V</span>\n        <span class="token number">14</span><span class="token operator">:</span> <span class="token keyword">return</span>\n      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>\n        line <span class="token number">10</span><span class="token operator">:</span> <span class="token number">0</span>\n        line <span class="token number">11</span><span class="token operator">:</span> <span class="token number">8</span>\n        line <span class="token number">12</span><span class="token operator">:</span> <span class="token number">14</span>\n\n  <span class="token keyword">static</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n    flags<span class="token operator">:</span> <span class="token constant">ACC_STATIC</span>\n    <span class="token class-name">Code</span><span class="token operator">:</span>\n      stack<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">0</span>\n         <span class="token number">0</span><span class="token operator">:</span> <span class="token keyword">new</span>           #<span class="token number">7</span>                  <span class="token comment">// class java/util/concurrent/CountDownLatch</span>\n         <span class="token number">3</span><span class="token operator">:</span> dup\n         <span class="token number">4</span><span class="token operator">:</span> iconst_1\n         <span class="token number">5</span><span class="token operator">:</span> invokespecial #<span class="token number">8</span>                  <span class="token comment">// Method java/util/concurrent/CountDownLatch.&quot;&lt;init&gt;&quot;:(I)V</span>\n         <span class="token number">8</span><span class="token operator">:</span> putstatic     #<span class="token number">5</span>                  <span class="token comment">// Field latch:Ljava/util/concurrent/CountDownLatch;</span>\n        <span class="token number">11</span><span class="token operator">:</span> <span class="token keyword">new</span>           #<span class="token number">9</span>                  <span class="token comment">// class java/lang/Thread</span>\n        <span class="token number">14</span><span class="token operator">:</span> dup\n        <span class="token number">15</span><span class="token operator">:</span> invokedynamic #<span class="token number">10</span><span class="token punctuation">,</span>  <span class="token number">0</span>             <span class="token comment">// InvokeDynamic #0:run:()Ljava/lang/Runnable;</span>\n        <span class="token number">20</span><span class="token operator">:</span> ldc           #<span class="token number">11</span>                 <span class="token comment">// String hzz-thread</span>\n        <span class="token number">22</span><span class="token operator">:</span> invokespecial #<span class="token number">12</span>                 <span class="token comment">// Method java/lang/Thread.&quot;&lt;init&gt;&quot;:(Ljava/lang/Runnable;Ljava/lang/String;)V</span>\n        <span class="token number">25</span><span class="token operator">:</span> invokevirtual #<span class="token number">13</span>                 <span class="token comment">// Method java/lang/Thread.start:()V</span>\n        <span class="token number">28</span><span class="token operator">:</span> getstatic     #<span class="token number">2</span>                  <span class="token comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span>\n        <span class="token number">31</span><span class="token operator">:</span> <span class="token keyword">new</span>           #<span class="token number">14</span>                 <span class="token comment">// class java/lang/StringBuilder</span>\n        <span class="token number">34</span><span class="token operator">:</span> dup\n        <span class="token number">35</span><span class="token operator">:</span> invokespecial #<span class="token number">15</span>                 <span class="token comment">// Method java/lang/StringBuilder.&quot;&lt;init&gt;&quot;:()V</span>\n        <span class="token number">38</span><span class="token operator">:</span> ldc           #<span class="token number">16</span>                 <span class="token comment">// String current thread:</span>\n        <span class="token number">40</span><span class="token operator">:</span> invokevirtual #<span class="token number">17</span>                 <span class="token comment">// Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>\n        <span class="token number">43</span><span class="token operator">:</span> invokestatic  #<span class="token number">18</span>                 <span class="token comment">// Method java/lang/Thread.currentThread:()Ljava/lang/Thread;</span>\n        <span class="token number">46</span><span class="token operator">:</span> invokevirtual #<span class="token number">19</span>                 <span class="token comment">// Method java/lang/Thread.getName:()Ljava/lang/String;</span>\n        <span class="token number">49</span><span class="token operator">:</span> invokevirtual #<span class="token number">17</span>                 <span class="token comment">// Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>\n        <span class="token number">52</span><span class="token operator">:</span> invokevirtual #<span class="token number">20</span>                 <span class="token comment">// Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span>\n        <span class="token number">55</span><span class="token operator">:</span> invokevirtual #<span class="token number">4</span>                  <span class="token comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>\n        <span class="token number">58</span><span class="token operator">:</span> getstatic     #<span class="token number">5</span>                  <span class="token comment">// Field latch:Ljava/util/concurrent/CountDownLatch;</span>\n        <span class="token number">61</span><span class="token operator">:</span> invokevirtual #<span class="token number">21</span>                 <span class="token comment">// Method java/util/concurrent/CountDownLatch.await:()V</span>\n        <span class="token number">64</span><span class="token operator">:</span> getstatic     #<span class="token number">2</span>                  <span class="token comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span>\n        <span class="token number">67</span><span class="token operator">:</span> ldc           #<span class="token number">22</span>                 <span class="token comment">// String wake up</span>\n        <span class="token number">69</span><span class="token operator">:</span> invokevirtual #<span class="token number">4</span>                  <span class="token comment">// Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>\n        <span class="token number">72</span><span class="token operator">:</span> <span class="token keyword">goto</span>          <span class="token number">76</span>\n        <span class="token number">75</span><span class="token operator">:</span> astore_0\n        <span class="token number">76</span><span class="token operator">:</span> <span class="token keyword">return</span>\n      <span class="token class-name">Exception</span> table<span class="token operator">:</span>\n         from    <span class="token keyword">to</span>  <span class="token namespace">target</span> type\n            <span class="token number">58</span>    <span class="token number">72</span>    <span class="token number">75</span>   <span class="token class-name">Class</span> java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">InterruptedException</span>\n      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>\n        line <span class="token number">7</span><span class="token operator">:</span> <span class="token number">0</span>\n        line <span class="token number">9</span><span class="token operator">:</span> <span class="token number">11</span>\n        line <span class="token number">12</span><span class="token operator">:</span> <span class="token number">25</span>\n        line <span class="token number">13</span><span class="token operator">:</span> <span class="token number">28</span>\n        line <span class="token number">15</span><span class="token operator">:</span> <span class="token number">58</span>\n        line <span class="token number">16</span><span class="token operator">:</span> <span class="token number">64</span>\n        line <span class="token number">17</span><span class="token operator">:</span> <span class="token number">72</span>\n          stack <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token keyword">class</span> java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">InterruptedException</span> <span class="token punctuation">]</span>\n        frame_type <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">/* same */</span>\n<span class="token punctuation">}</span>\n<span class="token class-name">SourceFile</span><span class="token operator">:</span> <span class="token string">&quot;MainTest.java&quot;</span>\n<span class="token class-name">InnerClasses</span><span class="token operator">:</span>\n     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> #<span class="token number">103</span><span class="token operator">=</span> #<span class="token number">102</span> of #<span class="token number">106</span><span class="token punctuation">;</span> <span class="token comment">//Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles</span>\n<span class="token class-name">BootstrapMethods</span><span class="token operator">:</span>\n  <span class="token number">0</span><span class="token operator">:</span> #<span class="token number">57</span> invokestatic java<span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">LambdaMetafactory</span><span class="token punctuation">.</span>metafactory<span class="token operator">:</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodHandles</span>$<span class="token class-name">Lookup</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodHandle</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">CallSite</span><span class="token punctuation">;</span>\n    <span class="token class-name">Method</span> arguments<span class="token operator">:</span>\n      #<span class="token number">58</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n      #<span class="token number">59</span> invokestatic org<span class="token operator">/</span>hzz<span class="token operator">/</span><span class="token class-name">MainTest</span><span class="token punctuation">.</span>lambda$<span class="token keyword">static</span>$<span class="token number">0</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n      #<span class="token number">58</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br></div></div><p>通过查看static静态代码块执行的内容</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">15</span><span class="token operator">:</span> invokedynamic #<span class="token number">10</span><span class="token punctuation">,</span>  <span class="token number">0</span>             <span class="token comment">// InvokeDynamic #0:run:()Ljava/lang/Runnable;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>找到<code>invokedynamic #10</code>找到常量池第10行</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>#<span class="token number">10</span> <span class="token operator">=</span> <span class="token class-name">InvokeDynamic</span>      #<span class="token number">0</span><span class="token operator">:</span>#<span class="token number">60</span>        <span class="token comment">// #0:run:()Ljava/lang/Runnable;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>其中<code>#0</code>指向<code>BootstrapMethods:</code>的静态工厂方法<code>LambdaMetafactory.metafactory</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">BootstrapMethods</span><span class="token operator">:</span>\n  <span class="token number">0</span><span class="token operator">:</span> #<span class="token number">57</span> invokestatic java<span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">LambdaMetafactory</span><span class="token punctuation">.</span>metafactory<span class="token operator">:</span><span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodHandles</span>$<span class="token class-name">Lookup</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodHandle</span><span class="token punctuation">;</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">MethodType</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span>invoke<span class="token operator">/</span><span class="token class-name">CallSite</span><span class="token punctuation">;</span>\n    <span class="token class-name">Method</span> arguments<span class="token operator">:</span>\n      #<span class="token number">58</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n      #<span class="token number">59</span> invokestatic org<span class="token operator">/</span>hzz<span class="token operator">/</span><span class="token class-name">MainTest</span><span class="token punctuation">.</span>lambda$<span class="token keyword">static</span>$<span class="token number">0</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n      #<span class="token number">58</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>LambdaMetafactory</code>类里的<code>metafactory()</code>方法源码可以看一下：</p><p>该方法会利用 asm 可以为 Lambda 表达式生成内部类，metafactory 方法源码如下</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CallSite</span> <span class="token function">metafactory</span><span class="token punctuation">(</span><span class="token class-name">MethodHandles<span class="token punctuation">.</span>Lookup</span> caller<span class="token punctuation">,</span>\n                                       <span class="token class-name">String</span> invokedName<span class="token punctuation">,</span>\n                                       <span class="token class-name">MethodType</span> invokedType<span class="token punctuation">,</span>\n                                       <span class="token class-name">MethodType</span> samMethodType<span class="token punctuation">,</span>\n                                       <span class="token class-name">MethodHandle</span> implMethod<span class="token punctuation">,</span>\n                                       <span class="token class-name">MethodType</span> instantiatedMethodType<span class="token punctuation">)</span>\n            <span class="token keyword">throws</span> <span class="token class-name">LambdaConversionException</span> <span class="token punctuation">{</span>\n        <span class="token class-name">AbstractValidatingLambdaMetafactory</span> mf<span class="token punctuation">;</span>\n        mf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InnerClassLambdaMetafactory</span><span class="token punctuation">(</span>caller<span class="token punctuation">,</span> invokedType<span class="token punctuation">,</span>\n                                             invokedName<span class="token punctuation">,</span> samMethodType<span class="token punctuation">,</span>\n                                             implMethod<span class="token punctuation">,</span> instantiatedMethodType<span class="token punctuation">,</span>\n                                             <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token constant">EMPTY_CLASS_ARRAY</span><span class="token punctuation">,</span> <span class="token constant">EMPTY_MT_ARRAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        mf<span class="token punctuation">.</span><span class="token function">validateMetafactoryArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> mf<span class="token punctuation">.</span><span class="token function">buildCallSite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>通过<code>LambdaMetafactory.metafactory()</code>，利用asm生成的<code>匿名内部类</code></p><p>为了查看这个内部类，加上生成代理类的参数运行</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-Djdk.internal.lambda.dumpProxyClasses</span> MainTest\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></blockquote><p>生成的<strong>匿名内部类</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>invoke<span class="token punctuation">.</span></span><span class="token class-name">LambdaForm</span><span class="token punctuation">.</span><span class="token class-name">Hidden</span></span><span class="token punctuation">;</span>\n\n<span class="token comment">// $FF: synthetic class</span>\n<span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">MainTest</span>$$<span class="token class-name">Lambda</span>$<span class="token number">1</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">MainTest</span>$$<span class="token class-name">Lambda</span>$<span class="token function">1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Hidden</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MainTest</span><span class="token punctuation">.</span>lambda$<span class="token keyword">static</span>$<span class="token function">0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>由上可见，内部类 <code>MainTest$$Lambda$1</code>实现了 <code>java.lang.Runnable</code>，<code>run()</code>方法即线程启动后执行的方法，</p><p>它会触发执行<code>MainTest.lambda$static$0</code>，即编译<code>MainTest</code>时生成的私有静态方法。</p><h3 id="问题发现" tabindex="-1"><a class="header-anchor" href="#问题发现" aria-hidden="true">#</a> 问题发现</h3><blockquote><p>经过上面的分析，到这里可以看出问题所在了</p></blockquote><p>真正执行线程，字节码指令调用的过程是：①通过内部类执行run()方法--&gt;②调用私有静态方法--&gt;③从而执行了lambda表达式对应的执行代码块。</p><p>由于<code>MainTest</code>这个类在初始化的时候在静态代码块进行了阻塞，导致这个类没有完全走完类加载。而此时新启动的线程又需要重新去加载MainTest的私有静态方法（lambda编译后的方法），导致一直阻塞。因为类的加载只需要一次。</p><h2 id="修复问题" tabindex="-1"><a class="header-anchor" href="#修复问题" aria-hidden="true">#</a> 修复问题</h2><p>由于是类没有完全加载导致的阻塞，所以我们新建一个MainHelper类用于存放MainTest初始化时用到的东西。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainHelper</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CountDownLatch</span> latch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Runnable</span> task <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        latch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>MainTest改进后</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainTest2</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">static</span> <span class="token punctuation">{</span>\n        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">MainHelper</span><span class="token punctuation">.</span>task<span class="token punctuation">,</span><span class="token string">&quot;hzz-thread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;current thread: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            <span class="token class-name">MainHelper</span><span class="token punctuation">.</span>latch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;wake up&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>输出结果</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>current thread: main\nhello world\nwake up\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',36),e={},t=(0,a(66262).A)(e,[["render",function(s,n){return p}]])},66262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,p]of n)a[s]=p;return a}}}]);