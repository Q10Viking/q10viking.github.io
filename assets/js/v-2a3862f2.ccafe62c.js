"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[57454],{22281:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-2a3862f2",path:"/java/46%20%E5%9B%BD%E9%99%85%E5%8C%96.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/java/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"1 Java国际化标准实现",slug:"_1-java国际化标准实现",children:[{level:3,title:"1.1 ResourceBundle核心特性",slug:"_1-1-resourcebundle核心特性",children:[]}]},{level:2,title:"2. ListResourceBundle.java",slug:"_2-listresourcebundle-java",children:[]},{level:2,title:"3 PropertyResourceBundle.java❤️",slug:"_3-propertyresourcebundle-java❤️",children:[]},{level:2,title:"4 Spring 国际化",slug:"_4-spring-国际化",children:[]}],filePathRelative:"java/46 国际化.md"}},1148:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(20641).Fv)('<h2 id="_1-java国际化标准实现" tabindex="-1"><a class="header-anchor" href="#_1-java国际化标准实现" aria-hidden="true">#</a> 1 Java国际化标准实现</h2><img src="/images/java/image-20210205003015053.png" alt="image-20210205003015053"><h3 id="_1-1-resourcebundle核心特性" tabindex="-1"><a class="header-anchor" href="#_1-1-resourcebundle核心特性" aria-hidden="true">#</a> 1.1 ResourceBundle核心特性</h3><img src="/images/java/image-20210205004554282.png" alt="image-20210205004554282"><h4 id="_1-层次性设计体现" tabindex="-1"><a class="header-anchor" href="#_1-层次性设计体现" aria-hidden="true">#</a> 1. 层次性设计体现</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">//\tResourceBundle.java 具有层次性设计的体现</span>\n\t<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">setParent</span><span class="token punctuation">(</span><span class="token class-name">ResourceBundle</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">assert</span> parent <span class="token operator">!=</span> <span class="token constant">NONEXISTENT_BUNDLE</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> parent<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\t<span class="token comment">//\t是否包含key，也体现了层次设计</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">//\t一直父亲找，直到头</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ResourceBundle</span> rb <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> rb <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> rb <span class="token operator">=</span> rb<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">handleKeySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_2-缓存设计体现" tabindex="-1"><a class="header-anchor" href="#_2-缓存设计体现" aria-hidden="true">#</a> 2. 缓存设计体现</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ResourceBundle</span> <span class="token function">getBundleImpl</span><span class="token punctuation">(</span><span class="token class-name">String</span> baseName<span class="token punctuation">,</span> <span class="token class-name">Locale</span> locale<span class="token punctuation">,</span>\n                                                <span class="token class-name">ClassLoader</span> loader<span class="token punctuation">,</span> <span class="token class-name">Control</span> control<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    \t\n        <span class="token class-name">CacheKey</span> cacheKey <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CacheKey</span><span class="token punctuation">(</span>baseName<span class="token punctuation">,</span> locale<span class="token punctuation">,</span> loader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ResourceBundle</span> bundle <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Quick lookup of the cache.从缓存中尝试查找</span>\n        <span class="token class-name">BundleReference</span> bundleRef <span class="token operator">=</span> cacheList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>bundleRef <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            bundle <span class="token operator">=</span> bundleRef<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            bundleRef <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        \n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="_2-listresourcebundle-java" tabindex="-1"><a class="header-anchor" href="#_2-listresourcebundle-java" aria-hidden="true">#</a> 2. ListResourceBundle.java</h2><ol><li>hardcode硬编码的形式</li></ol><p>在java安全中有许多的子实现类</p><p><img src="/images/java/image-20210205003436560.png" alt="image-20210205003436560"></p><p>如AuthResources_zh_CN.java</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthResources_zh_CN</span> <span class="token keyword">extends</span> <span class="token class-name">ListResourceBundle</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> contents <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token punctuation">{</span>\n        <span class="token punctuation">{</span><span class="token string">&quot;invalid.null.input.value&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;无效的空输入: {0}&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span><span class="token string">&quot;number.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;编号 &quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> \n        <span class="token punctuation">{</span><span class="token string">&quot;provided.null.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;提供的名称为空值&quot;</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    \n     <span class="token keyword">public</span> <span class="token class-name">AuthResources_zh_CN</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> contents<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="_3-propertyresourcebundle-java❤️" tabindex="-1"><a class="header-anchor" href="#_3-propertyresourcebundle-java❤️" aria-hidden="true">#</a> 3 PropertyResourceBundle.java❤️</h2><ol><li>基于properties文件</li><li><strong>Locale对象</strong></li></ol><p><img src="/images/java/image-20210205012323300.png" alt="image-20210205012323300"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResourceBundleDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>\n        <span class="token function">printMsg</span><span class="token punctuation">(</span><span class="token class-name">Locale</span><span class="token punctuation">.</span><span class="token constant">SIMPLIFIED_CHINESE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">printMsg</span><span class="token punctuation">(</span><span class="token class-name">Locale</span><span class="token punctuation">.</span><span class="token constant">ENGLISH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span>  <span class="token function">printMsg</span><span class="token punctuation">(</span><span class="token class-name">Locale</span> locale<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>\n        <span class="token class-name">ResourceBundle</span> resourceBundle <span class="token operator">=</span> <span class="token class-name">ResourceBundle</span><span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> locale<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> value <span class="token operator">=</span> resourceBundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> utf8Value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;ISO-8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>utf8Value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token doc-comment comment">/**\n 黄壮壮\n -----------------------\n huangzhuangzhuang\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="_4-spring-国际化" tabindex="-1"><a class="header-anchor" href="#_4-spring-国际化" aria-hidden="true">#</a> 4 Spring 国际化</h2><p><strong>Spring国际化是java的国际化与java文本格式的结合</strong></p>',20),e={},t=(0,a(66262).A)(e,[["render",function(n,s){return p}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);