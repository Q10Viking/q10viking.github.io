"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[12385],{86156:(e,n,t)=>{t.r(n),t.d(n,{data:()=>l});const l={key:"v-6a267e1e",path:"/spring/05%20Bean%E5%88%9B%E5%BB%BA.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/spring/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[],filePathRelative:"spring/05 Bean创建.md"}},25656:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});var l=t(20641);const a=(0,l.Lk)("ol",null,[(0,l.Lk)("li",null,"非懒加载的单例Bean是在Spring启动的时候创建的"),(0,l.Lk)("li",null,"懒加载的单例bean是在getBean的时候创建的"),(0,l.Lk)("li",null,'@Scope("prototype")原型Bean是在每次getBean时都会创建')],-1),r=(0,l.Lk)("hr",null,null,-1),i=(0,l.Lk)("p",null,"扫描bean（生成BeanDefinition），创建，注入，初始化，BeanPostProcessor(这是针对所有bean的)，在这里可以实现AOP,@Value的实现，扩展点，就是可以对bean做很多的工作，如可以自定义注解，来实现更多的功能。",-1),u={},o=(0,t(66262).A)(u,[["render",function(e,n){return(0,l.uX)(),(0,l.CE)(l.FK,null,[a,r,i],64)}]])},66262:(e,n)=>{n.A=(e,n)=>{const t=e.__vccOpts||e;for(const[e,l]of n)t[e]=l;return t}}}]);