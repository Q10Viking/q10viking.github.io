"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[36973],{36925:(t,r,e)=>{e.r(r),e.d(r,{data:()=>n});const n={key:"v-44a61946",path:"/MySQL/51%20%E4%BB%80%E4%B9%88%E6%98%AF%E7%B4%A2%E5%BC%95%E4%B8%8B%E6%8E%A8.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/MySQL/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[],filePathRelative:"MySQL/51 什么是索引下推.md"}},77523:(t,r,e)=>{e.r(r),e.d(r,{default:()=>s});const n=(0,e(20641).Fv)("<p>索引下推（Index Condition Pushdown，简称ICP）是一种<strong>数据库查询优化技术</strong>，它利用了数据库引擎中的索引和过滤条件，将<strong>部分过滤工作</strong>下推到<strong>存储引擎</strong>层面进行处理，从而<strong>减少不必要的数据读取和传输（减少回表的次数）</strong>。</p><p>在传统的查询执行过程中，数据库引擎首先根据索引定位到符合过滤条件的数据行，并将这些行读取到内存中，然后再进行进一步的过滤操作。而索引下推则在这一步骤中尽可能地将过滤操作下推到存储引擎层面，避免将不符合条件的数据行读取到内存中。</p><p>通过索引下推，数据库系统可以在存储引擎层面根据索引和过滤条件提前过滤掉不符合条件的数据，减少了需要传递给查询引擎的数据量和内存消耗。这样可以大大减少磁盘 I/O 和数据传输的开销，提升查询性能和整体系统效率。</p><p>需要注意的是，索引下推并不是对所有类型的查询都适用，它更适用于复杂查询条件、多列条件的查询中，能够有效地减少不必要的数据读取和传输。</p>",4),o={},s=(0,e(66262).A)(o,[["render",function(t,r){return n}]])},66262:(t,r)=>{r.A=(t,r)=>{const e=t.__vccOpts||t;for(const[t,n]of r)e[t]=n;return e}}}]);