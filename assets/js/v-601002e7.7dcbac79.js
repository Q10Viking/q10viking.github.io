"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[43987],{34553:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-601002e7",path:"/nacos/12%20nacos%E9%85%8D%E7%BD%AE%E4%BC%98%E5%85%88%E7%BA%A7%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/nacos/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"入口",slug:"入口",children:[]},{level:2,title:"扩展点",slug:"扩展点",children:[{level:3,title:"源码中文件加载顺序",slug:"源码中文件加载顺序",children:[]}]},{level:2,title:"接口调用nacos注册中心",slug:"接口调用nacos注册中心",children:[]},{level:2,title:"监听",slug:"监听",children:[]},{level:2,title:"RefreshScope的原理",slug:"refreshscope的原理",children:[]},{level:2,title:"配置变化客户端是如何感知的？",slug:"配置变化客户端是如何感知的",children:[]},{level:2,title:"配置变化其他集群是如何感知的？同步",slug:"配置变化其他集群是如何感知的-同步",children:[]},{level:2,title:"服务端注册配置",slug:"服务端注册配置",children:[]}],filePathRelative:"nacos/12 nacos配置优先级源码分析.md"}},5144:(n,a,s)=>{s.r(a),s.d(a,{default:()=>r});var e=s(20641);const t=(0,e.Fv)('<p>https://www.processon.com/view/link/603f3d2fe401fd641adb51f1</p><h2 id="入口" tabindex="-1"><a class="header-anchor" href="#入口" aria-hidden="true">#</a> 入口</h2><p>springboot加载配置： org.springframework.boot.env.PropertySourceLoader 接口，有properties和yml形式的实现</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PropertySourceLoader</span> <span class="token punctuation">{</span>\n\n\t<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getFileExtensions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token doc-comment comment">/**\n\t\t这就是加载配置文件的方法\n\t */</span>\n\t<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PropertySource</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Resource</span> resource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="扩展点" tabindex="-1"><a class="header-anchor" href="#扩展点" aria-hidden="true">#</a> 扩展点</h2><p><strong>ApplicationContextInitializer</strong></p><p>Spring的扩展点之一，在ConfigurableApplicationContext#refresh之前调用，通常用于需要对应用上下文做初始化的web应用中，比如根据上下文环境注册或激活配置文件</p><h3 id="源码中文件加载顺序" tabindex="-1"><a class="header-anchor" href="#源码中文件加载顺序" aria-hidden="true">#</a> 源码中文件加载顺序</h3><p><img src="/images/nacos/image-20210822200600855.png" alt="image-20210822200600855"></p><h2 id="接口调用nacos注册中心" tabindex="-1"><a class="header-anchor" href="#接口调用nacos注册中心" aria-hidden="true">#</a> 接口调用nacos注册中心</h2><p>拉取配置的数据</p><p>ConfigServer</p><p><img src="/images/nacos/image-20210822201610433.png" alt="image-20210822201610433"></p><h2 id="监听" tabindex="-1"><a class="header-anchor" href="#监听" aria-hidden="true">#</a> 监听</h2><p>NacosContextRefresher</p><p><img src="/images/nacos/image-20210822203343721.png" alt="image-20210822203343721"></p><h2 id="refreshscope的原理" tabindex="-1"><a class="header-anchor" href="#refreshscope的原理" aria-hidden="true">#</a> RefreshScope的原理</h2>',17),p={href:"https://blog.csdn.net/long9870/article/details/100544690?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RefreshScope</span>   <span class="token comment">// 会将这个bean进行销毁，下次获取则重新从beanFactory中哪，从原料beanDefinition从新生产，这样就能注入新的value了</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span><span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;${common.value}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="/images/nacos/image-20210822212151316.png" alt="image-20210822212151316"></p><h2 id="配置变化客户端是如何感知的" tabindex="-1"><a class="header-anchor" href="#配置变化客户端是如何感知的" aria-hidden="true">#</a> 配置变化客户端是如何感知的？</h2><ol><li>Nacos服务端，首先会更新服务端的配置数据文件，然后发布一个<strong>NotifyCenter</strong>.publishEvent事件</li><li>异步解耦这个事件，</li></ol><h2 id="配置变化其他集群是如何感知的-同步" tabindex="-1"><a class="header-anchor" href="#配置变化其他集群是如何感知的-同步" aria-hidden="true">#</a> 配置变化其他集群是如何感知的？同步</h2><h2 id="服务端注册配置" tabindex="-1"><a class="header-anchor" href="#服务端注册配置" aria-hidden="true">#</a> 服务端注册配置</h2><p>会更新文件在服务器文件中，然后发布事件来</p>',7),c={},r=(0,s(66262).A)(c,[["render",function(n,a){const s=(0,e.g2)("OutboundLink");return(0,e.uX)(),(0,e.CE)(e.FK,null,[t,(0,e.Lk)("p",null,[(0,e.eW)("会将该bean进行销毁，"),(0,e.Lk)("a",p,[(0,e.eW)("Spring bean销毁的过程"),(0,e.bF)(s)])]),l],64)}]])},66262:(n,a)=>{a.A=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);