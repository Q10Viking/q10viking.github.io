"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[59615],{73636:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-1623f522",path:"/webdev/08%20vite.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/webdev/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"背景",slug:"背景",children:[]},{level:2,title:"使用vite❤️",slug:"使用vite❤️",children:[]},{level:2,title:"依赖预构建",slug:"依赖预构建",children:[]},{level:2,title:"配置文件",slug:"配置文件",children:[]},{level:2,title:"环境变量",slug:"环境变量",children:[]},{level:2,title:"css处理",slug:"css处理",children:[{level:3,title:"js语法学习",slug:"js语法学习",children:[]}]},{level:2,title:"commonjs规范的原理",slug:"commonjs规范的原理",children:[]}],filePathRelative:"webdev/08 vite.md"}},94921:(n,s,a)=>{a.r(s),a.d(s,{default:()=>h});var e=a(20641);const t=(0,e.Lk)("div",{class:"custom-container tip"},[(0,e.Lk)("p",{class:"custom-container-title"},"TIP"),(0,e.Lk)("p",null,"前端非常好的开箱即用的工具")],-1),p=(0,e.Lk)("h2",{id:"背景",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#背景","aria-hidden":"true"},"#"),(0,e.eW)(" 背景")],-1),o=(0,e.Lk)("p",null,"在默认情况下, 我们的esmodule去导入资源的时候, 要么是绝对路径, 要么是相对路径",-1),l=(0,e.Lk)("div",{class:"language-html ext-html line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-html"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"<"),(0,e.eW)("body")]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("\n    "),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"<"),(0,e.eW)("script")]),(0,e.eW)(),(0,e.Lk)("span",{class:"token attr-name"},"src"),(0,e.Lk)("span",{class:"token attr-value"},[(0,e.Lk)("span",{class:"token punctuation attr-equals"},"="),(0,e.Lk)("span",{class:"token punctuation"},'"'),(0,e.eW)("./app.js"),(0,e.Lk)("span",{class:"token punctuation"},'"')]),(0,e.eW)(),(0,e.Lk)("span",{class:"token attr-name"},"type"),(0,e.Lk)("span",{class:"token attr-value"},[(0,e.Lk)("span",{class:"token punctuation attr-equals"},"="),(0,e.Lk)("span",{class:"token punctuation"},'"'),(0,e.eW)("module"),(0,e.Lk)("span",{class:"token punctuation"},'"')]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.Lk)("span",{class:"token script"}),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"</"),(0,e.eW)("script")]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("\n "),(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token tag"},[(0,e.Lk)("span",{class:"token punctuation"},"</"),(0,e.eW)("body")]),(0,e.Lk)("span",{class:"token punctuation"},">")]),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"2"),(0,e.Lk)("br"),(0,e.Lk)("span",{class:"line-number"},"3"),(0,e.Lk)("br")])],-1),c=(0,e.Lk)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Lk)("pre",{class:"language-javascript"},[(0,e.Lk)("code",null,[(0,e.Lk)("span",{class:"token keyword"},"import"),(0,e.eW)(),(0,e.Lk)("span",{class:"token string"},'"./count.js"'),(0,e.Lk)("span",{class:"token punctuation"},";"),(0,e.eW)("\n")])]),(0,e.Lk)("div",{class:"line-numbers"},[(0,e.Lk)("span",{class:"line-number"},"1"),(0,e.Lk)("br")])],-1),i=(0,e.Fv)('<p>浏览器实现了esmodule，能够支持导入<code>count.js</code></p><p><img src="/images/webdev/image-20220928124855584.png" alt="image-20220928124855584"></p><p>如果我们像这样导入，浏览器esmodule则不会去node_modules查找</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;./count.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">&quot;lodash&quot;</span><span class="token punctuation">;</span>  <span class="token comment">// 浏览器不会去node_modules中找lodash</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="/images/webdev/image-20220928125145177.png" alt="image-20220928125145177"></p><blockquote><p>既然我们现在的最佳实践就是node_modules, 那为什么es官方在我们导入非绝对路径和非相对路径的资源的时候不默认帮我们 搜寻node_modules呢？假设浏览器做了这个事情，那么会导致性能下降，因为依赖也可能引入更多的import。会形成一个关系网图。</p></blockquote><h2 id="使用vite❤️" tabindex="-1"><a class="header-anchor" href="#使用vite❤️" aria-hidden="true">#</a> 使用vite❤️</h2><p>在上面的项目中我们安装vite,开箱即用</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> vite\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>配置一下<code>package.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span> \n    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build&quot;</span><span class="token punctuation">,</span> \n    <span class="token property">&quot;preview&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite preview&quot;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>运行可以看到，解决我们项目中引入<code>lodash</code>的问题。原因时，vite对路径进行了处理。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 源码</span>\n<span class="token keyword">import</span> <span class="token string">&quot;./count.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">&quot;lodash&quot;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// vite处理成</span>\n<span class="token keyword">import</span> <span class="token string">&quot;/count.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> __vite__cjsImport1_lodash <span class="token keyword">from</span> <span class="token string">&quot;/node_modules/.vite/deps/lodash.js?v=b4eb8a8a&quot;</span><span class="token punctuation">;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="依赖预构建" tabindex="-1"><a class="header-anchor" href="#依赖预构建" aria-hidden="true">#</a> 依赖预构建</h2>',14),u={href:"https://vitejs.dev/guide/dep-pre-bundling.html",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Fv)('<ol><li><p>兼容CommonJs和UMD，vite会将他们转换成 ESM（esmodule）</p></li><li><p>提高性能：Vite converts ESM dependencies with many internal modules into a single module to improve subsequent page load performance。将许多模块变成一个文件，减少网络请求（官网举了一个lodash-es的例子）</p></li></ol><p>比如我们配置<code>vite.config.js</code>,不对lodash-es进行预构建。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">optimizeDeps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;lodash-es&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>可以看到发送了很多http请求加载模块</p><p><img src="/images/webdev/image-20220928135336799.png" alt="image-20220928135336799"></p><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h2>',7),k={href:"https://vitejs.dev/guide/env-and-mode.html#env-variables-and-modes",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.bilibili.com/video/BV1GN4y1M7P5?p=8&vd_source=83b77a4d29913d39a25316cf0ee47e54",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Fv)("<p>代码环境:</p><ol><li>开发环境</li><li>测试环境</li><li>预发布环境</li><li>灰度环境</li><li>生产环境</li></ol><blockquote><p>vite使用dotenv这个第三方库来读取<code>.env</code>文件，并解析，最后挂在到<code>process</code>对象上。（process是node中的）</p></blockquote>",3),b={href:"https://vitejs.dev/config/#environment-variables",target:"_blank",rel:"noopener noreferrer"},v=(0,e.Fv)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig<span class="token punctuation">,</span> loadEnv <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> command<span class="token punctuation">,</span> mode <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;mode///&quot;</span><span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;process.env///&quot;</span><span class="token punctuation">,</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 拿不到</span>\n\n  <span class="token comment">// Load env file based on `mode` in the current working directory.</span>\n  <span class="token comment">// Set the third parameter to &#39;&#39; to load all env regardless of the `VITE_` prefix.</span>\n  <span class="token comment">// 会加载当前项目路径下的.env.[model]文件</span>\n  <span class="token keyword">const</span> env <span class="token operator">=</span> <span class="token function">loadEnv</span><span class="token punctuation">(</span>mode<span class="token punctuation">,</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;env///&quot;</span><span class="token punctuation">,</span> env<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Vite 在一个特殊的 <strong><code>import.meta.env</code></strong> 对象上暴露环境变量。</p><h2 id="css处理" tabindex="-1"><a class="header-anchor" href="#css处理" aria-hidden="true">#</a> css处理</h2><blockquote><p>Vite处理css的原理</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;index.css&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>vite处理css模块化module</p><h3 id="js语法学习" tabindex="-1"><a class="header-anchor" href="#js语法学习" aria-hidden="true">#</a> js语法学习</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// a.js</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token comment">// </span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token keyword">default</span> <span class="token keyword">as</span> a<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./a.js&quot;</span>\n<span class="token comment">// 等价</span>\n<span class="token keyword">import</span> a <span class="token keyword">from</span> <span class="token string">&quot;./a.js&quot;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> a <span class="token operator">=</span> a<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>使用node开发一个静态资源服务器 js中import</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>content-type:text/javascript\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="commonjs规范的原理" tabindex="-1"><a class="header-anchor" href="#commonjs规范的原理" aria-hidden="true">#</a> commonjs规范的原理</h2><blockquote><p>node中的__dirname是怎么来的。</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">exports<span class="token punctuation">,</span>require<span class="token punctuation">,</span>module<span class="token punctuation">,</span>__filename<span class="token punctuation">,</span>__dirname</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">// 我们就可以使用</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;__dirname&quot;</span><span class="token punctuation">,</span>__dirname<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',13),g={},h=(0,a(66262).A)(g,[["render",function(n,s){const a=(0,e.g2)("CodeGroupItem"),g=(0,e.g2)("CodeGroup"),h=(0,e.g2)("OutboundLink");return(0,e.uX)(),(0,e.CE)(e.FK,null,[t,p,o,(0,e.bF)(g,null,{default:(0,e.k6)((()=>[(0,e.bF)(a,{title:"index.html"},{default:(0,e.k6)((()=>[l])),_:1}),(0,e.bF)(a,{title:"app.js"},{default:(0,e.k6)((()=>[c])),_:1})])),_:1}),i,(0,e.Lk)("p",null,[(0,e.eW)("根据官网的描述"),(0,e.Lk)("a",u,[(0,e.eW)("Dependency Pre-Bundling | Vite (vitejs.dev)"),(0,e.bF)(h)]),(0,e.eW)(" 它主要解决两个问题")]),r,(0,e.Lk)("p",null,[(0,e.Lk)("a",k,[(0,e.eW)("Env Variables and Modes | Vite (vitejs.dev)"),(0,e.bF)(h)])]),(0,e.Lk)("blockquote",null,[(0,e.Lk)("p",null,[(0,e.eW)("环境变量: 会根据当前的代码环境产生值的变化的变量就叫做环境变量 ---来自"),(0,e.Lk)("a",d,[(0,e.eW)("vite环境变量处理_哔哩哔哩_bilibili"),(0,e.bF)(h)])])]),m,(0,e.Lk)("p",null,[(0,e.eW)("根据官网"),(0,e.Lk)("a",b,[(0,e.eW)("Configuring Vite | environment-variables"),(0,e.bF)(h)]),(0,e.eW)("描述,默认是没有将env文件解析挂在到process上的。")]),v],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);