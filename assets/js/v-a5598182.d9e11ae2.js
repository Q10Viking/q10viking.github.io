"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[26915],{73424:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-a5598182",path:"/ElasticStack/32%20es%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/ElasticStack/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"1. 集群搭建",slug:"_1-集群搭建",children:[]},{level:2,title:"2. 查看是否安装成功",slug:"_2-查看是否安装成功",children:[{level:3,title:"2.1 linux控制台",slug:"_2-1-linux控制台",children:[]},{level:3,title:"2.2 Kibana测试",slug:"_2-2-kibana测试",children:[]}]},{level:2,title:"3. Elasticsearch-head插件",slug:"_3-elasticsearch-head插件",children:[{level:3,title:"3.1 安装node环境",slug:"_3-1-安装node环境",children:[]},{level:3,title:"3.2 安装elasticsearch-head插件",slug:"_3-2-安装elasticsearch-head插件",children:[]},{level:3,title:"3.1 启动",slug:"_3-1-启动",children:[]}]},{level:2,title:"4 .集群状态",slug:"_4-集群状态",children:[]}],filePathRelative:"ElasticStack/32 es集群搭建.md"}},48261:(s,n,a)=>{a.r(n),a.d(n,{default:()=>t});const e=(0,a(20641).Fv)('<h2 id="_1-集群搭建" tabindex="-1"><a class="header-anchor" href="#_1-集群搭建" aria-hidden="true">#</a> 1. 集群搭建</h2><p>本案例搭建三台集群（但由于实际操作发现内存不足只安装了两台），es的安装主要参考单机版本</p><p>配置集群，主要修改配置文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>cluster.name: my-application\t\t<span class="token comment">#\t集群名称保持一致</span>\nnode.name: node1 \t\t\t<span class="token comment"># 各自节点的名称\tnode.name: node2 node.name: node3   注意不要带上减号，如node-1</span>\nnetwork.host: <span class="token number">0.0</span>.0.0\t<span class="token comment"># 允许所有IP访问</span>\ndiscovery.seed_hosts: <span class="token punctuation">[</span><span class="token string">&quot;IP1&quot;</span>, <span class="token string">&quot;IP2&quot;</span>, <span class="token string">&quot;IP3&quot;</span><span class="token punctuation">]</span> <span class="token comment"># 添加集群的IP discovery.seed_hosts: [&quot;192.168.88.173&quot;,&quot;192.168.88.174&quot;,&quot;192.168.88.175&quot;]</span>\ncluster.initial_master_nodes: <span class="token punctuation">[</span><span class="token string">&quot;节点1名称&quot;</span>, <span class="token string">&quot;节点2名称&quot;</span>, <span class="token string">&quot;节点3名称&quot;</span><span class="token punctuation">]</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>**注意： ** vmware克隆的虚拟机，需要将之前安装的elasticsearch的生成数据删除</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>path.data: /usr/local/es/elasticsearch-7.6.1/data\n目录下删除 nodes\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_2-查看是否安装成功" tabindex="-1"><a class="header-anchor" href="#_2-查看是否安装成功" aria-hidden="true">#</a> 2. 查看是否安装成功</h2><h3 id="_2-1-linux控制台" tabindex="-1"><a class="header-anchor" href="#_2-1-linux控制台" aria-hidden="true">#</a> 2.1 linux控制台</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token string">&quot;http://192.168.88.174:9200/_cluster/health?pretty&quot;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;cluster_name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;my-application&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;status&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span>\t\t<span class="token comment">//\t为绿色</span>\n  <span class="token property">&quot;timed_out&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\t\n  <span class="token property">&quot;number_of_nodes&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\t<span class="token comment">//\t节点</span>\n  <span class="token property">&quot;number_of_data_nodes&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;active_primary_shards&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;active_shards&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;relocating_shards&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;initializing_shards&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;unassigned_shards&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;delayed_unassigned_shards&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;number_of_pending_tasks&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;number_of_in_flight_fetch&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;task_max_waiting_in_queue_millis&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;active_shards_percent_as_number&quot;</span> <span class="token operator">:</span> <span class="token number">100.0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_2-2-kibana测试" tabindex="-1"><a class="header-anchor" href="#_2-2-kibana测试" aria-hidden="true">#</a> 2.2 Kibana测试</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>GET   _cat/nodes?v\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="/images/elasticsearch/image-20210502230249387.png" alt="image-20210502230249387"></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>GET   _cat/health?v\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="/images/elasticsearch/image-20210502230347481.png" alt="image-20210502230347481"></p><h2 id="_3-elasticsearch-head插件" tabindex="-1"><a class="header-anchor" href="#_3-elasticsearch-head插件" aria-hidden="true">#</a> 3. Elasticsearch-head插件</h2><ol><li>elasticsearch-head这个插件是es提供的一个用于图形化界面查看的一个插件工具，可以安装上这个插件之后，通过这个插件来实现我们通过浏览器查看es当中的数据</li></ol><p>在192.168.88.173这台机器上安装即可</p><h3 id="_3-1-安装node环境" tabindex="-1"><a class="header-anchor" href="#_3-1-安装node环境" aria-hidden="true">#</a> 3.1 安装node环境</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 下载node</span>\n<span class="token function">wget</span> https://npm.taobao.org/mirrors/node/v8.1.0/node-v8.1.0-linux-x64.tar.gz\n<span class="token comment"># 解压</span>\n<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> node-v8.1.0-linux-x64.tar.gz\n<span class="token comment"># 创建软连接</span>\n<span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/es/node-v8.1.0-linux-x64/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm\n<span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/es/node-v8.1.0-linux-x64/bin/node /usr/local/bin/node\n\n<span class="token comment"># 添加环境变量</span>\n<span class="token function">vi</span> /etc/profile\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">NODE_HOME</span><span class="token operator">=</span>/usr/local/es/node-v8.1.0-linux-x64\n<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>:<span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$NODE_HOME</span>/bin\n\n<span class="token comment"># 生效文件</span>\n<span class="token builtin class-name">source</span> /etc/profile\n\n<span class="token comment"># 验证</span>\n<span class="token function">node</span> <span class="token parameter variable">-v</span>\n<span class="token function">npm</span> <span class="token parameter variable">-v</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_3-2-安装elasticsearch-head插件" tabindex="-1"><a class="header-anchor" href="#_3-2-安装elasticsearch-head插件" aria-hidden="true">#</a> 3.2 安装elasticsearch-head插件</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 解压</span>\n<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> elasticsearch-head-compile-after.tar.gz\n<span class="token comment"># 修改Gruntfile.js这个文件</span>\n<span class="token builtin class-name">cd</span> /usr/local/es/elasticsearch-head\n<span class="token function">vim</span> Gruntfile.js\n\n<span class="token comment">#============修改IP地址===================</span>\nhostname: <span class="token string">&#39;192.168.88.173&#39;</span>\n<span class="token comment">#========================================</span>\n\n<span class="token comment"># 修改 app.js</span>\n<span class="token builtin class-name">cd</span> /usr/local/es/elasticsearch-head/_site\n<span class="token function">vim</span> app.js\n在Vim中输入「:4354」，定位到第4354行，修改 http://localhost:9200为http://192.168.88.173:9200\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_3-1-启动" tabindex="-1"><a class="header-anchor" href="#_3-1-启动" aria-hidden="true">#</a> 3.1 启动</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/es/elasticsearch-head/node_modules/grunt/bin/\n\n<span class="token comment"># 前台启动</span>\n./grunt server\n\n<span class="token comment">#==============启动后的效果==================================</span>\nRunning <span class="token string">&quot;connect:server&quot;</span> <span class="token punctuation">(</span>connect<span class="token punctuation">)</span> task\nWaiting forever<span class="token punctuation">..</span>.\nStarted connect web server on http://192.168.88.173:9100\n\n<span class="token comment"># 后台启动</span>\n<span class="token function">nohup</span> ./grunt server <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><img src="/images/elasticsearch/image-20210502234442951.png" alt="image-20210502234442951"></p><h2 id="_4-集群状态" tabindex="-1"><a class="header-anchor" href="#_4-集群状态" aria-hidden="true">#</a> 4 .集群状态</h2><p><strong>如何快速了解集群的健康状况？green、yellow、red？</strong></p><p>green：每个索引的primary shard和replica shard都是active状态的</p><p>yellow：每个索引的primary shard都是active状态的，但是部分replica shard不是active状态，处于不可用的状态</p><p>red：不是所有索引的primary shard都是active状态的，部分索引有数据丢失了</p><h4 id="_4-1-黄色状态" tabindex="-1"><a class="header-anchor" href="#_4-1-黄色状态" aria-hidden="true">#</a> 4.1 黄色状态</h4><p>集群什么情况会处于一个yellow状态？</p><ol><li>假设现在就一台linux服务器，就启动了一个es进程，相当于就只有一个node。</li><li>现在es中有一个index，就是kibana自己内置建立的index。<strong>由于默认的配置是给每个index分配1个primary shard和1个replica shard，而且primary shard和replica shard不能在同一台机器上（为了容错）</strong>。</li><li>现在kibana自己建立的index是1个primary shard和1个replica shard。当前就一个node，所以只有1个primary shard被分配了和启动了，但是一个replica shard没有第二台机器去启动。</li></ol><p>测试：启动第二个es进程，就会在es集群中有2个node，然后那1个replica shard就会自动分配过去，然后cluster status就会变成green状态</p>',34),p={},t=(0,a(66262).A)(p,[["render",function(s,n){return e}]])},66262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);