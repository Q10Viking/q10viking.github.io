"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[72663],{21089:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-095edbf4",path:"/springboot/14%20%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E5%A4%84%E7%90%86.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/springboot/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"@ControllerAdvice分析",slug:"controlleradvice分析",children:[]},{level:2,title:"模板类ResponseEntityExceptionHandler",slug:"模板类responseentityexceptionhandler",children:[{level:3,title:"使用👍👍👍",slug:"使用👍👍👍",children:[]}]},{level:2,title:"不使用模板",slug:"不使用模板",children:[]},{level:2,title:"模板对比优缺点",slug:"模板对比优缺点",children:[{level:3,title:"总结❤️",slug:"总结❤️",children:[]}]}],filePathRelative:"springboot/14 错误信息处理.md"}},87882:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var t=a(20641);const p={href:"https://github.com/Q10Viking/learncode/tree/main/ddd/multi-layers",target:"_blank",rel:"noopener noreferrer"},e=(0,t.Fv)('<h2 id="controlleradvice分析" tabindex="-1"><a class="header-anchor" href="#controlleradvice分析" aria-hidden="true">#</a> @ControllerAdvice分析</h2><blockquote><p>异常处理是针对Controller层的，尤其是参数检验异常，体现更加明显</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ControllerAdviceBean</span>#findAnnotatedBeans，会从容器中找出所有标注了<span class="token annotation punctuation">@ControllerAdvice</span>的bean\n然后找到这个类上标注了<span class="token annotation punctuation">@ExceptionHandler</span>的注解，将异常与这个方法形成映射<span class="token class-name">Map</span><span class="token punctuation">,</span>存储在<span class="token class-name">ExceptionHandlerMethodResolver</span>类\n\n当controller抛出异常的时候就能根据异常找到对应的方法，进行反射调用执行。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="模板类responseentityexceptionhandler" tabindex="-1"><a class="header-anchor" href="#模板类responseentityexceptionhandler" aria-hidden="true">#</a> 模板类ResponseEntityExceptionHandler</h2><blockquote><p>Spring web模块提供了一个模板，那就是抽象类<code>ResponseEntityExceptionHandler</code></p><p>里面有一个方法定义了常见的异常处理</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpRequestMethodNotSupportedException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">HttpMediaTypeNotSupportedException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">HttpMediaTypeNotAcceptableException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">MissingPathVariableException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">MissingServletRequestParameterException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">ServletRequestBindingException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">ConversionNotSupportedException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">TypeMismatchException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">HttpMessageNotReadableException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">HttpMessageNotWritableException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">MethodArgumentNotValidException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">MissingServletRequestPartException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">BindException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">NoHandlerFoundException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n\t\t\t<span class="token class-name">AsyncRequestTimeoutException</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t<span class="token annotation punctuation">@Nullable</span>\n\t<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleException</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">,</span> <span class="token class-name">WebRequest</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n\t\t<span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">HttpRequestMethodNotSupportedException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">METHOD_NOT_ALLOWED</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleHttpRequestMethodNotSupported</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpRequestMethodNotSupportedException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">HttpMediaTypeNotSupportedException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">UNSUPPORTED_MEDIA_TYPE</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleHttpMediaTypeNotSupported</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpMediaTypeNotSupportedException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">HttpMediaTypeNotAcceptableException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">NOT_ACCEPTABLE</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleHttpMediaTypeNotAcceptable</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpMediaTypeNotAcceptableException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">MissingPathVariableException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">INTERNAL_SERVER_ERROR</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleMissingPathVariable</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MissingPathVariableException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">MissingServletRequestParameterException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleMissingServletRequestParameter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MissingServletRequestParameterException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">ServletRequestBindingException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleServletRequestBindingException</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ServletRequestBindingException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">ConversionNotSupportedException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">INTERNAL_SERVER_ERROR</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleConversionNotSupported</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ConversionNotSupportedException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">TypeMismatchException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleTypeMismatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TypeMismatchException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">HttpMessageNotReadableException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleHttpMessageNotReadable</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpMessageNotReadableException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">HttpMessageNotWritableException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">INTERNAL_SERVER_ERROR</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleHttpMessageNotWritable</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpMessageNotWritableException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">MethodArgumentNotValidException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleMethodArgumentNotValid</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MethodArgumentNotValidException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">MissingServletRequestPartException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleMissingServletRequestPart</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MissingServletRequestPartException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">BindException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleBindException</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">BindException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">NoHandlerFoundException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">NOT_FOUND</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleNoHandlerFoundException</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">NoHandlerFoundException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">AsyncRequestTimeoutException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">SERVICE_UNAVAILABLE</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token function">handleAsyncRequestTimeoutException</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AsyncRequestTimeoutException</span><span class="token punctuation">)</span> ex<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token comment">// Unknown exception, typically a wrapper with a common MVC exception as cause</span>\n\t\t\t<span class="token comment">// (since @ExceptionHandler type declarations also match first-level causes):</span>\n\t\t\t<span class="token comment">// We only deal with top-level MVC exceptions here, so let&#39;s rethrow the given</span>\n\t\t\t<span class="token comment">// exception for further processing through the HandlerExceptionResolver chain.</span>\n\t\t\t<span class="token keyword">throw</span> ex<span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><h3 id="使用👍👍👍" tabindex="-1"><a class="header-anchor" href="#使用👍👍👍" aria-hidden="true">#</a> 使用👍👍👍</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestControllerAdvice</span>\n<span class="token annotation punctuation">@Slf4j</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExceptionHandler</span> <span class="token keyword">extends</span> <span class="token class-name">ResponseEntityExceptionHandler</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 由于在json的时候，取的是body，所以这里需要重写handleExceptionInternal方法\n     * 默认的是直接设置为了null\n     * json后的效果\n     * <span class="token punctuation">{</span>\n     * \t&quot;code&quot;: &quot;405&quot;,\n     * \t&quot;msg&quot;: &quot;Allow:\\&quot;GET\\&quot;&quot;,\n     * \t&quot;error&quot;: &quot;405 method not allowed&quot;\n     * <span class="token punctuation">}</span>\n     */</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleExceptionInternal</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">,</span> <span class="token class-name">Object</span> body<span class="token punctuation">,</span> <span class="token class-name">HttpHeaders</span> headers<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span> status<span class="token punctuation">,</span> <span class="token class-name">WebRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>body <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            body <span class="token operator">=</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>\n                    status<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">,</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;&quot;</span><span class="token operator">+</span>status<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    headers<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> headers<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">handleExceptionInternal</span><span class="token punctuation">(</span>ex<span class="token punctuation">,</span> body<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token doc-comment comment">/**---------------------以下为定制的异常-------------------------------------------*/</span>\n\n    <span class="token doc-comment comment">/**\n     * 参数校验异常\n     */</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleMethodArgumentNotValid</span><span class="token punctuation">(</span><span class="token class-name">MethodArgumentNotValidException</span> exception<span class="token punctuation">,</span> <span class="token class-name">HttpHeaders</span> headers<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span> status<span class="token punctuation">,</span> <span class="token class-name">WebRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;校验失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> objectBody <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        objectBody<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Current Timestamp&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        objectBody<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Status&quot;</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Get all errors</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> exceptionalErrors <span class="token operator">=</span> exception<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">getFieldErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;:&quot;</span><span class="token operator">+</span>x<span class="token punctuation">.</span><span class="token function">getDefaultMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        objectBody<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Errors&quot;</span><span class="token punctuation">,</span> exceptionalErrors<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>objectBody<span class="token punctuation">,</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><blockquote><p>参数校验异常检车</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/save&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span> <span class="token annotation punctuation">@Valid</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserDTO</span> userDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    userService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>userDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;新增用户成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="/images/springboot/image-20230522004103055.png" alt="image-20230522004103055"></p><blockquote><p>默认的测试，比如允许的方法是get,但是我们使用了post方法</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;hello111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="/images/springboot/image-20230522004245186.png" alt="image-20230522004245186"></p><h2 id="不使用模板" tabindex="-1"><a class="header-anchor" href="#不使用模板" aria-hidden="true">#</a> 不使用模板</h2><blockquote><p>当然我们也可以不使用这个模板自己定义一个类，在类的方法上标注@ExceptionHandler注解</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestControllerAdvice</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleException</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">,</span> <span class="token class-name">WebRequest</span> request<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">String</span> requestURI <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ServletWebRequest</span><span class="token punctuation">)</span> request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">StringBuilder</span> msgBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        msgBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;您请求的URI:&quot;</span><span class="token operator">+</span>requestURI<span class="token operator">+</span><span class="token string">&quot;发生了异常，异常信息在data中：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        msgBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;如果这不是您的请求，请忽略。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        msgBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;如果是您的请求，请联系管理员。Q10Viking，服务器发生异常，请联系管理员！hzz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token operator">+</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">INTERNAL_SERVER_ERROR</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>msgBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="模板对比优缺点" tabindex="-1"><a class="header-anchor" href="#模板对比优缺点" aria-hidden="true">#</a> 模板对比优缺点</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>首先，我建议是使用模板的,虽然网上搜素，大多是不适用模板的。</p><p>需要注意的是我们在使用模板的时候，需要处理一下body改为我们自己定义的数据格式，因为json序列化的时候取的是ResponseEntity的body.</p><p>而spring提供的这个模板，默认body是设置为null的</p></div><ol><li><p>模板</p><ol><li>优点：默认handler了许多spring常见的异常</li><li>缺点需要我们自己处理一下body，以及Exception全局异常，模板没有帮我们处理，需要我们自己也处理一下使用@ExceptionHandler(Exception.class)</li></ol></li><li><p>不使用模板，那么我们就需要自己全部@ExceptionHandler(关心的异常.class)</p><ol><li>既然使用这个注解，我们也可以放入到实现模板的类中，所以还是建议使用模板</li></ol></li></ol><blockquote><p>基于以上分析，我建议是使用模板的</p></blockquote><h3 id="总结❤️" tabindex="-1"><a class="header-anchor" href="#总结❤️" aria-hidden="true">#</a> 总结❤️</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>hzz<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span><span class="token class-name">Result</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpHeaders</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpStatus</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">ResponseEntity</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">HttpRequestMethodNotSupportedException</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">MethodArgumentNotValidException</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestControllerAdvice</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">ServletWebRequest</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">WebRequest</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseEntityExceptionHandler</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedHashMap</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@RestControllerAdvice</span>\n<span class="token annotation punctuation">@Slf4j</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExceptionHandler</span> <span class="token keyword">extends</span> <span class="token class-name">ResponseEntityExceptionHandler</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 由于在json的时候，取的是body，所以这里需要重写handleExceptionInternal方法\n     * 默认的是直接设置为了null\n     * json后的效果\n     * <span class="token punctuation">{</span>\n     * \t&quot;code&quot;: &quot;405&quot;,\n     * \t&quot;msg&quot;: &quot;Allow:\\&quot;GET\\&quot;&quot;,\n     * \t&quot;error&quot;: &quot;405 method not allowed&quot;\n     * <span class="token punctuation">}</span>\n     */</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleExceptionInternal</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">,</span> <span class="token class-name">Object</span> body<span class="token punctuation">,</span> <span class="token class-name">HttpHeaders</span> headers<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span> status<span class="token punctuation">,</span> <span class="token class-name">WebRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>body <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            body <span class="token operator">=</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>\n                    status<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">,</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;&quot;</span><span class="token operator">+</span>status<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    headers<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> headers<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">handleExceptionInternal</span><span class="token punctuation">(</span>ex<span class="token punctuation">,</span> body<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> status<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token doc-comment comment">/**---------------------以下为定制的异常-------------------------------------------*/</span>\n\n    <span class="token doc-comment comment">/**\n     * 参数校验异常\n     */</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleMethodArgumentNotValid</span><span class="token punctuation">(</span><span class="token class-name">MethodArgumentNotValidException</span> exception<span class="token punctuation">,</span> <span class="token class-name">HttpHeaders</span> headers<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span> status<span class="token punctuation">,</span> <span class="token class-name">WebRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;校验失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> objectBody <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        objectBody<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Current Timestamp&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        objectBody<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Status&quot;</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Get all errors</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> exceptionalErrors <span class="token operator">=</span> exception<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">getFieldErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;:&quot;</span><span class="token operator">+</span>x<span class="token punctuation">.</span><span class="token function">getDefaultMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        objectBody<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Errors&quot;</span><span class="token punctuation">,</span> exceptionalErrors<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>objectBody<span class="token punctuation">,</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token doc-comment comment">/**---------------------以下是扩展的异常--------------------------------------*/</span>\n    <span class="token annotation punctuation">@org.springframework.web.bind.annotation.ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleMySelfException</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">,</span> <span class="token class-name">WebRequest</span> request<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">String</span> requestURI <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ServletWebRequest</span><span class="token punctuation">)</span> request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">StringBuilder</span> msgBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        msgBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;您请求的URI:&quot;</span><span class="token operator">+</span>requestURI<span class="token operator">+</span><span class="token string">&quot;发生了异常，异常信息在data中：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        msgBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;如果这不是您的请求，请忽略。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        msgBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;如果是您的请求，请联系管理员。Q10Viking，服务器发生异常，请联系管理员！hzz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token operator">+</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">INTERNAL_SERVER_ERROR</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>msgBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br></div></div><blockquote><p>测试扩展异常</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/exception&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">exception</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;测试异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="/images/springboot/image-20230522005402215.png" alt="image-20230522005402215"></p>',26),o={},c=(0,a(66262).A)(o,[["render",function(n,s){const a=(0,t.g2)("OutboundLink");return(0,t.uX)(),(0,t.CE)(t.FK,null,[(0,t.Lk)("p",null,[(0,t.Lk)("a",p,[(0,t.eW)("Source Code"),(0,t.bF)(a)])]),e],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);