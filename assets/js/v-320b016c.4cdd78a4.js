"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[40973],{59677:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-320b016c",path:"/Docker/15%20k8s%E9%83%A8%E7%BD%B2nginx.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Docker/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"部署一个nginx",slug:"部署一个nginx",children:[]},{level:2,title:"查看",slug:"查看",children:[]},{level:2,title:"访问",slug:"访问",children:[]},{level:2,title:"windows修改hosts文件",slug:"windows修改hosts文件",children:[]},{level:2,title:"命令小结",slug:"命令小结",children:[]}],filePathRelative:"Docker/15 k8s部署nginx.md"}},75147:(n,e,s)=>{s.r(e),s.d(e,{default:()=>x});var a=s(20641);const p=(0,a.Fv)('<blockquote><p>搭建好了k8s，我们来部署一个nginx服务，来初步使用以下k8s</p></blockquote><h2 id="部署一个nginx" tabindex="-1"><a class="header-anchor" href="#部署一个nginx" aria-hidden="true">#</a> 部署一个nginx</h2><p>在k8s-master机器上执行</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 创建一次deployment部署</span>\nkubectl create deployment nginx <span class="token parameter variable">--image</span><span class="token operator">=</span>nginx\n<span class="token comment"># --port是service的虚拟ip对应的端口，系统会随机暴露一个端口</span>\nkubectl expose deployment nginx <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">80</span> <span class="token parameter variable">--type</span><span class="token operator">=</span>NodePort  \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="查看" tabindex="-1"><a class="header-anchor" href="#查看" aria-hidden="true">#</a> 查看</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 查看Nginx的pod和service信息</span>\nkubectl get pod,svc <span class="token parameter variable">-o</span> wide\n<span class="token punctuation">[</span>root@k8s-master ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pod,svc -o wide</span>\nNAME                        READY   STATUS    RESTARTS   AGE   IP           NODE        NOMINATED NODE   READINESS GATES\npod/nginx                   <span class="token number">1</span>/1     Running   <span class="token number">1</span>          10h   <span class="token number">10.244</span>.2.5   k8s-node2   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>\npod/nginx-f89759699-9c4hm   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          11m   <span class="token number">10.244</span>.1.6   k8s-node1   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>\n\nNAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>        AGE    SELECTOR\nservice/kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1       <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP        10h    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>\nservice/nginx        NodePort    <span class="token number">10.108</span>.139.46   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>:31448/TCP   9m6s   <span class="token assign-left variable">app</span><span class="token operator">=</span>nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>上面有两个nginx，pod/nginx是kubenetes自带的，pod/nginx-f89759699-9c4hm 是我们刚刚创建的。 可以看到我们的nginx部署到了k8s-node1节点，暴露的端口是31448。</p><p>在dashboard上查看</p></blockquote><p><img src="/images/Docker/image-20230425094011935.png" alt="image-20230425094011935"></p><h2 id="访问" tabindex="-1"><a class="header-anchor" href="#访问" aria-hidden="true">#</a> 访问</h2>',9),r={href:"http://192.168.135.132:31448/",target:"_blank",rel:"noopener noreferrer"},t=(0,a.Lk)("p",null,[(0,a.Lk)("strong",null,"访问Nginx地址"),(0,a.eW)(),(0,a.Lk)("code",null,"http://任意节点的ip:图中Nginx的对外映射端口")],-1),o={href:"http://192.168.135.130:31448/",target:"_blank",rel:"noopener noreferrer"},l={href:"http://192.168.135.132:31448/",target:"_blank",rel:"noopener noreferrer"},c={href:"http://192.168.135.135:31448/",target:"_blank",rel:"noopener noreferrer"},i=(0,a.Lk)("h2",{id:"windows修改hosts文件",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#windows修改hosts文件","aria-hidden":"true"},"#"),(0,a.eW)(" windows修改hosts文件")],-1),k=(0,a.Lk)("blockquote",null,[(0,a.Lk)("p",null,"上面的过程中使用ip来进行访问非常不方便，在windows下修改hosts文件。这里用的软件是SwitchHosts")],-1),b=(0,a.Lk)("p",null,[(0,a.Lk)("img",{src:"/images/Docker/image-20230425094911081.png",alt:"image-20230425094911081"})],-1),u=(0,a.Lk)("p",null,"修改之后就能通过域名进行访问了",-1),d={href:"http://k8s-master:31448/",target:"_blank",rel:"noopener noreferrer"},m={href:"http://k8s-node1:31448/",target:"_blank",rel:"noopener noreferrer"},h={href:"http://k8s-node1:31448/",target:"_blank",rel:"noopener noreferrer"},g=(0,a.Fv)('<h2 id="命令小结" tabindex="-1"><a class="header-anchor" href="#命令小结" aria-hidden="true">#</a> 命令小结</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 创建一次deployment部署</span>\nkubectl create deployment nginx <span class="token parameter variable">--image</span><span class="token operator">=</span>nginx\n<span class="token comment"># --port是service的虚拟ip对应的端口，系统会随机暴露一个端口</span>\nkubectl expose deployment nginx <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">80</span> <span class="token parameter variable">--type</span><span class="token operator">=</span>NodePort\n<span class="token comment">#查看pod和service信息</span>\nkubectl get pod,svc <span class="token parameter variable">-o</span> wide\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',2),v={},x=(0,s(66262).A)(v,[["render",function(n,e){const s=(0,a.g2)("OutboundLink");return(0,a.uX)(),(0,a.CE)(a.FK,null,[p,(0,a.Lk)("p",null,[(0,a.eW)("虽然nginx的pod部署在了k8s-node1节点对应的ip地址为"),(0,a.Lk)("a",r,[(0,a.eW)("http://192.168.135.132:31448/"),(0,a.bF)(s)]),(0,a.eW)("，但是,我们能够从master，k8s-node2上都能访问到。因为kubunetes默认安装了nginx，它有反向代理的功能。")]),t,(0,a.Lk)("p",null,[(0,a.Lk)("a",o,[(0,a.eW)("http://192.168.135.130:31448/"),(0,a.bF)(s)])]),(0,a.Lk)("p",null,[(0,a.Lk)("a",l,[(0,a.eW)("http://192.168.135.132:31448/"),(0,a.bF)(s)])]),(0,a.Lk)("p",null,[(0,a.Lk)("a",c,[(0,a.eW)("http://192.168.135.135:31448/"),(0,a.bF)(s)])]),i,k,b,u,(0,a.Lk)("p",null,[(0,a.Lk)("a",d,[(0,a.eW)("http://k8s-master:31448/"),(0,a.bF)(s)])]),(0,a.Lk)("p",null,[(0,a.Lk)("a",m,[(0,a.eW)("http://k8s-node1:31448/"),(0,a.bF)(s)])]),(0,a.Lk)("p",null,[(0,a.Lk)("a",h,[(0,a.eW)("http://k8s-node2:31448/"),(0,a.bF)(s)])]),g],64)}]])},66262:(n,e)=>{e.A=(n,e)=>{const s=n.__vccOpts||n;for(const[n,a]of e)s[n]=a;return s}}}]);