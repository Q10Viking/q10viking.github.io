"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[80543],{68137:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-ca07b76c",path:"/Redis/09%20Set%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Redis/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Set常用操作",slug:"set常用操作",children:[]},{level:2,title:"Set运算操作",slug:"set运算操作",children:[]}],filePathRelative:"Redis/09 Set常用操作命令.md"}},51006:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(20641).Fv)('<h2 id="set常用操作" tabindex="-1"><a class="header-anchor" href="#set常用操作" aria-hidden="true">#</a> Set常用操作</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token constant">SADD</span>  key  member  <span class="token punctuation">[</span>member <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\t\t\t<span class="token comment">//往集合key中存入元素，元素存在则忽略，若key不存在则新建\t\t\t\t\t</span>\n<span class="token constant">SREM</span>  key  member  <span class="token punctuation">[</span>member <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\t\t\t<span class="token comment">//从集合key中删除元素</span>\n<span class="token constant">SMEMBERS</span>  key\t\t\t\t\t\t   <span class="token comment">//获取集合key中所有元素</span>\n<span class="token constant">SCARD</span>  key\t\t\t\t\t  \t\t   <span class="token comment">//获取集合key的元素个数</span>\n<span class="token constant">SISMEMBER</span>  key  member\t\t\t\t    <span class="token comment">//判断member元素是否存在于集合key中</span>\n<span class="token constant">SRANDMEMBER</span>  key  <span class="token punctuation">[</span>count<span class="token punctuation">]</span>\t\t\t\t<span class="token comment">//从集合key中选出count个元素，元素不从key中删除</span>\n<span class="token constant">SPOP</span>  key  <span class="token punctuation">[</span>count<span class="token punctuation">]</span>\t\t\t     \t\t<span class="token comment">//从集合key中选出count个元素，元素从key中删除</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="set运算操作" tabindex="-1"><a class="header-anchor" href="#set运算操作" aria-hidden="true">#</a> Set运算操作</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token constant">SINTER</span>  key  <span class="token punctuation">[</span>key <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> \t\t\t\t\t\t\t<span class="token comment">//交集运算</span>\n<span class="token constant">SINTERSTORE</span>  destination  key  <span class="token punctuation">[</span>key <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\t\t\t <span class="token comment">//将交集结果存入新集合destination中</span>\n<span class="token constant">SUNION</span>  key  <span class="token punctuation">[</span>key <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> \t\t\t\t\t\t    <span class="token comment">//并集运算</span>\n<span class="token constant">SUNIONSTORE</span>  destination  key  <span class="token punctuation">[</span>key <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\t\t <span class="token comment">//将并集结果存入新集合destination中</span>\n<span class="token constant">SDIFF</span>  key  <span class="token punctuation">[</span>key <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> \t\t\t\t\t\t    <span class="token comment">//差集运算</span>\n<span class="token constant">SDIFFSTORE</span>  destination  key  <span class="token punctuation">[</span>key <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\t\t\t <span class="token comment">//将差集结果存入新集合destination中</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="/images/Redis/image-20211114061839333.png" alt=""></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>SINTER set1 set2 set3 -&gt; { c }\nSUNION set1 set2 set3 -&gt; { a,b,c,d,e }\nSDIFF set1 set2 set3 -&gt; { a }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',6),e={},p=(0,a(66262).A)(e,[["render",function(n,s){return t}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);