"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[24915],{29424:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-3e528914",path:"/springsecurity/04%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/springsecurity/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"自定义登录页面",slug:"自定义登录页面",children:[{level:3,title:"自定义登录",slug:"自定义登录",children:[]},{level:3,title:"自定义用户名和密码参数名",slug:"自定义用户名和密码参数名",children:[]}]},{level:2,title:"自定义登录成功处理器",slug:"自定义登录成功处理器",children:[]},{level:2,title:"自定义登录失败处理器",slug:"自定义登录失败处理器",children:[]}],filePathRelative:"springsecurity/04 自定义登录页面.md"}},67611:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(20641).Fv)('<p>spring security 登录之后，如果之前是访问资源的，那么再登录之后，就会跳转到访问资源</p><p>如果直接是登录，那么就会跳转到主页。此时我们应该自定义一个主页index.html</p><p>如果想自定义登录成功后跳转到指定的页面，那么我们可以自己实现自定义成功后的跳转逻辑和页面。</p><p>https://www.processon.com/view/link/627cbea61e08530753406efc</p><p>自定义的话那就实现：AuthenticationSuccessHandler</p><h2 id="自定义登录页面" tabindex="-1"><a class="header-anchor" href="#自定义登录页面" aria-hidden="true">#</a> 自定义登录页面</h2><p>默认登录页面通过DefaultLoginPageGeneratingFilter#generateLoginPageHtml生成</p><h3 id="自定义登录" tabindex="-1"><a class="header-anchor" href="#自定义登录" aria-hidden="true">#</a> 自定义登录</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>\n<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n    http<span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//表单提交</span>\n        <span class="token punctuation">.</span><span class="token function">loginPage</span><span class="token punctuation">(</span><span class="token string">&quot;/login.html&quot;</span><span class="token punctuation">)</span> <span class="token comment">//自定义登录页面</span>\n        <span class="token punctuation">.</span><span class="token function">loginProcessingUrl</span><span class="token punctuation">(</span><span class="token string">&quot;/user/login&quot;</span><span class="token punctuation">)</span> <span class="token comment">//登录访问路径，必须和表单提交接口一样</span>\n        <span class="token punctuation">.</span><span class="token function">successForwardUrl</span><span class="token punctuation">(</span><span class="token string">&quot;/main&quot;</span><span class="token punctuation">)</span> <span class="token comment">//认证成功之后转发的路径,必须是Post请求</span>\n        <span class="token punctuation">.</span><span class="token function">failureForwardUrl</span><span class="token punctuation">(</span><span class="token string">&quot;/toerror&quot;</span><span class="token punctuation">)</span> <span class="token comment">//认证失败之后转发的路径,必须是Post请求</span>\n        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token comment">//设置哪些路径可以直接访问，不需要认证</span>\n        <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">&quot;/user/login&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/login.html&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/error.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//需要认证</span>\n        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//关闭csrf防护</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginController</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/main&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;redirect:/main.html&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/toerror&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;redirect:/error.html&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="自定义用户名和密码参数名" tabindex="-1"><a class="header-anchor" href="#自定义用户名和密码参数名" aria-hidden="true">#</a> 自定义用户名和密码参数名</h3><p>当进行登录时会执行 UsernamePasswordAuthenticationFilter 过滤器</p><ul><li>usernamePasrameter ：账户参数名</li><li>passwordParameter ：密码参数名</li><li>postOnly=true ：默认情况下只允许POST请求</li></ul><p><img src="/images/springsecurity/image-20210826105111494.png" alt="image-20210826105111494"></p><p>可以通过usernameParameter和passwordParameter设置，必须保证和前端表单的name值一致</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>http<span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//表单提交</span>\n    <span class="token punctuation">.</span><span class="token function">usernameParameter</span><span class="token punctuation">(</span><span class="token string">&quot;username1212&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">passwordParameter</span><span class="token punctuation">(</span><span class="token string">&quot;password1212&quot;</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="自定义登录成功处理器" tabindex="-1"><a class="header-anchor" href="#自定义登录成功处理器" aria-hidden="true">#</a> 自定义登录成功处理器</h2><p><img src="/images/springsecurity/image-20210826105231270.png" alt="image-20210826105231270"></p><p>比如想实现登录成功后重定向其他页面，可以利用AuthenticationSuccessHandler接口实现自定义的认 证成功控制器。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAuthenticationSuccessHandler</span> <span class="token keyword">implements</span>\n    <span class="token class-name">AuthenticationSuccessHandler</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> redirectUrl<span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token class-name">MyAuthenticationSuccessHandler</span><span class="token punctuation">(</span><span class="token class-name">String</span> redirectUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>redirectUrl <span class="token operator">=</span> redirectUrl<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAuthenticationSuccess</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>\n                                        <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span>\n    <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>\n        response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span>redirectUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//</span>\nhttp<span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//表单提交</span>\n    <span class="token punctuation">.</span><span class="token function">loginPage</span><span class="token punctuation">(</span><span class="token string">&quot;/login.html&quot;</span><span class="token punctuation">)</span> <span class="token comment">//自定义登录页面</span>\n    <span class="token punctuation">.</span><span class="token function">loginProcessingUrl</span><span class="token punctuation">(</span><span class="token string">&quot;/user/login&quot;</span><span class="token punctuation">)</span> <span class="token comment">//登录访问路径，必须和表单提交接口一样</span>\n    <span class="token punctuation">.</span><span class="token function">successHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyAuthenticationSuccessHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/main.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="自定义登录失败处理器" tabindex="-1"><a class="header-anchor" href="#自定义登录失败处理器" aria-hidden="true">#</a> 自定义登录失败处理器</h2><p>同样的，当登录认证失败后，想做一些事情，可以实现AuthenticationFailureHandler接口。</p><p><img src="/images/springsecurity/image-20210826105415582.png" alt="image-20210826105415582"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAuthenticationFailureHandler</span> <span class="token keyword">implements</span>\n    <span class="token class-name">AuthenticationFailureHandler</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> redirectUrl<span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token class-name">MyAuthenticationFailureHandler</span><span class="token punctuation">(</span><span class="token class-name">String</span> redirectUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>redirectUrl <span class="token operator">=</span> redirectUrl<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAuthenticationFailure</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>\n                                        <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">AuthenticationException</span> exception<span class="token punctuation">)</span> <span class="token keyword">throws</span>\n        <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>\n        response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span>redirectUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>http<span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//表单提交</span>\n    <span class="token punctuation">.</span><span class="token function">loginPage</span><span class="token punctuation">(</span><span class="token string">&quot;/login.html&quot;</span><span class="token punctuation">)</span> <span class="token comment">//自定义登录页面</span>\n    <span class="token punctuation">.</span><span class="token function">loginProcessingUrl</span><span class="token punctuation">(</span><span class="token string">&quot;/user/login&quot;</span><span class="token punctuation">)</span> <span class="token comment">//登录访问路径，必须和表单提交接口一样</span>\n    <span class="token punctuation">.</span><span class="token function">successHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyAuthenticationSuccessHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/main.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">failureHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyAuthenticationFailureHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/error.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',26),t={},e=(0,a(66262).A)(t,[["render",function(n,s){return p}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);