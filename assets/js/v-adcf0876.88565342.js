"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[33243],{68538:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-adcf0876",path:"/seata/01%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"@Transactional",slug:"transactional",children:[]},{level:2,title:"多数据源的分布式事务",slug:"多数据源的分布式事务",children:[]},{level:2,title:"seata源码启动",slug:"seata源码启动",children:[]}],filePathRelative:"seata/01 源码分析环境准备.md"}},86079:(a,n,s)=>{s.r(n),s.d(n,{default:()=>p});const t=(0,s(20641).Fv)('<h2 id="transactional" tabindex="-1"><a class="header-anchor" href="#transactional" aria-hidden="true">#</a> @Transactional</h2><p>springboot 没有被指事务平台管理器，它是如何拿到的？</p><h2 id="多数据源的分布式事务" tabindex="-1"><a class="header-anchor" href="#多数据源的分布式事务" aria-hidden="true">#</a> 多数据源的分布式事务</h2><p>seata使用注册中心nacos</p><h2 id="seata源码启动" tabindex="-1"><a class="header-anchor" href="#seata源码启动" aria-hidden="true">#</a> seata源码启动</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mvn compile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>io.seata.server.Server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>我本地使用的是mysql8，而seata使用的是mysql5的jdbc驱动，需要自己引入该依赖。在D:\\learncode\\seata\\seata-1.4.0\\server\\pom.xml</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.0.19<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',9),e={},p=(0,s(66262).A)(e,[["render",function(a,n){return t}]])},66262:(a,n)=>{n.A=(a,n)=>{const s=a.__vccOpts||a;for(const[a,t]of n)s[a]=t;return s}}}]);