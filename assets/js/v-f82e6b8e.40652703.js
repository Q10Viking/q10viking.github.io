"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[72444],{18331:(e,r,l)=>{l.r(r),l.d(r,{data:()=>a});const a={key:"v-f82e6b8e",path:"/ElasticStack/27%20%E7%A9%BA%E9%97%B4%E5%90%91%E9%87%8F%E6%A8%A1%E5%9E%8B.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/ElasticStack/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"query 向量",slug:"query-向量",children:[]},{level:2,title:"doc 向量",slug:"doc-向量",children:[]},{level:2,title:"向量模型",slug:"向量模型",children:[]}],filePathRelative:"ElasticStack/27 空间向量模型.md"}},8281:(e,r,l)=>{l.r(r),l.d(r,{default:()=>c});const a=(0,l(20641).Fv)('<h2 id="query-向量" tabindex="-1"><a class="header-anchor" href="#query-向量" aria-hidden="true">#</a> query 向量</h2><p>hello world --&gt; es会根据hello world在所有doc中的评分情况，计算出一个query vector，query向量</p><p>hello这个term，给的基于所有doc的一个评分就是3</p><p>world这个term，给的基于所有doc的一个评分就是6</p><p>query vector 就是 [3, 6]</p><h2 id="doc-向量" tabindex="-1"><a class="header-anchor" href="#doc-向量" aria-hidden="true">#</a> doc 向量</h2><p>3个doc，一个包含hello，一个包含world，一个包含hello 以及 world</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>会给每一个doc，拿每个term计算出一个分数来，hello有一个分数，world有一个分数，再拿所有term的分数组成一个doc vector\n\ndoc1：包含hello --&gt; [3, 0]\ndoc2：包含world --&gt; [0, 6]\ndoc3：包含hello, world --&gt; [3, 6]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><h2 id="向量模型" tabindex="-1"><a class="header-anchor" href="#向量模型" aria-hidden="true">#</a> 向量模型</h2><p>画在一个图中，取每个doc vector对query vector的弧度，给出每个doc对多个term的总分数；弧度越大，分数越低; 弧度越小，分数越高</p><p>如果是多个term，那么就是线性代数来计算，无法用图表示</p><p><img src="/images/elasticsearch/3783" alt="img"></p>',13),t={},c=(0,l(66262).A)(t,[["render",function(e,r){return a}]])},66262:(e,r)=>{r.A=(e,r)=>{const l=e.__vccOpts||e;for(const[e,a]of r)l[e]=a;return l}}}]);