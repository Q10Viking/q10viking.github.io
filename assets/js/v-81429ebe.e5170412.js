"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[69114],{55722:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-81429ebe",path:"/ShardingJDBC/07%20SPI%E6%89%A9%E5%B1%95%E7%82%B9.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/ShardingJDBC/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"SPI",slug:"spi",children:[]},{level:2,title:"实战扩展主键生成策略",slug:"实战扩展主键生成策略",children:[{level:3,title:"配置使用",slug:"配置使用",children:[]}]},{level:2,title:"测试",slug:"测试",children:[]}],filePathRelative:"ShardingJDBC/07 SPI扩展点.md"}},38407:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var e=a(20641);const p=(0,e.Lk)("h2",{id:"spi",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#spi","aria-hidden":"true"},"#"),(0,e.eW)(" SPI")],-1),t=(0,e.Lk)("p",null,"ShardingSphere保留了大量的SPI扩展接口，对主流程封闭、对 SPI开放",-1),o=(0,e.Lk)("h2",{id:"实战扩展主键生成策略",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#实战扩展主键生成策略","aria-hidden":"true"},"#"),(0,e.eW)(" 实战扩展主键生成策略")],-1),c={href:"https://github.com/Q10Viking/springcloudalibaba/tree/main/shardingjdbc/_06-SPI",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Fv)('<p>仿造UUIDShardingKeyGenerator使用自己的生成策略</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyKeyGenerator</span> <span class="token keyword">implements</span> <span class="token class-name">ShardingKeyGenerator</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> <span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">AtomicLong</span> atomicLong <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicLong</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">LocalDateTime</span> now <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> time <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;HHmmssSSS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Long</span> key <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>time <span class="token operator">+</span> atomicLong<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;生成Key: &quot;</span><span class="token operator">+</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> key<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;MYKEY&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">Properties</span> <span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setProperties</span><span class="token punctuation">(</span><span class="token class-name">Properties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>properties <span class="token operator">=</span> properties<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><img src="/images/ShardingJDBC/image-20230327180245248.png" alt="image-20230327180245248"></p><p><code>org.apache.shardingsphere.spi.keygen.ShardingKeyGenerator</code>文件写入扩展的类</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>org.hzz.spiextension.MyKeyGenerator\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="配置使用" tabindex="-1"><a class="header-anchor" href="#配置使用" aria-hidden="true">#</a> 配置使用</h3><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token comment">#配置真实的数据源</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.names</span><span class="token punctuation">=</span><span class="token value attr-value">m1,m2</span>\n\n<span class="token key attr-name">spring.shardingsphere.datasource.m1.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m1.drive-class</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.cj.jdbc.Driver</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m1.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://192.168.135.130:3306/coursedb?serverTimezone=UTC</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m1.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m1.password</span><span class="token punctuation">=</span><span class="token value attr-value">Root.123456</span>\n\n\n<span class="token key attr-name">spring.shardingsphere.datasource.m2.type</span><span class="token punctuation">=</span><span class="token value attr-value">com.alibaba.druid.pool.DruidDataSource</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m2.drive-class</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.cj.jdbc.Driver</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m2.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://192.168.135.130:3306/coursedb2?serverTimezone=UTC</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m2.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>\n<span class="token key attr-name">spring.shardingsphere.datasource.m2.password</span><span class="token punctuation">=</span><span class="token value attr-value">Root.123456</span>\n\n<span class="token comment"># 指定表的分布情况 配置表在哪个数据库里，表名是什么。水平分表，分两个表：</span>\n<span class="token comment">#m1.course_1,m1.course_2</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.actual-data-nodes</span><span class="token punctuation">=</span><span class="token value attr-value">m$-&gt;{1..2}.course_$-&gt;{1..2}</span>\n\n<span class="token comment"># 指定表的主键生成策略</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.key-generator.column</span><span class="token punctuation">=</span><span class="token value attr-value">cid</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.key-generator.type</span><span class="token punctuation">=</span><span class="token value attr-value">MYKEY</span>\n\n<span class="token comment">#指定分片策略</span>\n<span class="token comment"># 数据分片策略</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.database-strategy.inline.algorithm-expression</span><span class="token punctuation">=</span><span class="token value attr-value">m$-&gt;{cid%2+1}</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.database-strategy.inline.sharding-column</span><span class="token punctuation">=</span><span class="token value attr-value">cid</span>\n<span class="token comment"># 表分片策略</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression</span><span class="token punctuation">=</span><span class="token value attr-value">course_$-&gt;{(cid%4).intdiv(2)+1}</span>\n<span class="token key attr-name">spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column</span><span class="token punctuation">=</span><span class="token value attr-value">cid</span>\n<span class="token comment"># 打开日志输出</span>\n<span class="token key attr-name">spring.shardingsphere.props.sql.show</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Course</span> course <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Course</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        course<span class="token punctuation">.</span><span class="token function">setCname</span><span class="token punctuation">(</span><span class="token string">&quot;SPI&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        course<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span><span class="token number">100l</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        course<span class="token punctuation">.</span><span class="token function">setCstatus</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        courseMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>course<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="/images/ShardingJDBC/image-20230327180548193.png" alt="image-20230327180548193"></p>',10),r={},u=(0,a(66262).A)(r,[["render",function(n,s){const a=(0,e.g2)("OutboundLink");return(0,e.uX)(),(0,e.CE)(e.FK,null,[p,t,o,(0,e.Lk)("p",null,[(0,e.Lk)("a",c,[(0,e.eW)("Source Code"),(0,e.bF)(a)])]),l],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);