"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[31964],{56075:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-1b661253",path:"/springboot/05%20%E5%A4%96%E7%BD%AEtomcat%E7%9A%84SPI.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/springboot/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[],filePathRelative:"springboot/05 外置tomcat的SPI.md"}},76230:(n,a,s)=>{s.r(a),s.d(a,{default:()=>p});const t=(0,s(20641).Fv)('<p>外置tomcat的SPI在SpringBoot的使用</p><p>SpringServletContainerInitiallizer实现了这个类javax.servlet.ServletContainerInitializer，tomcat会通过SPI调用onStartup方法，tomcat传入实现了WebApplicationInitailizer的类@HandlerTypes(WebApplicationInitailizer.class)</p><p>在处理WebApplicationInitailizer这个类的实现AbstractDispatcherServletInitializer类的过程中，向tomcat的context配置了DispatchServlet</p><hr><p>需要用户自己操作的</p><p>运行项目的main方法是通过自定义一个类，实现<strong>SpringBootServletInitializer</strong>类，告诉它启动类，然后运行我们的启动类的main方法</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\n<span class="token comment">// 通过tomcat提供的服务接口来实现SpringBootServletInitializer实现了WebApplicationInitailizer</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TomcatStartSpringBootApplication</span> <span class="token keyword">extends</span> <span class="token class-name">SpringBootServletInitializer</span><span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token class-name">SpringApplication</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">SpringApplicationBuilder</span> builder<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">sources</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',7),e={},p=(0,s(66262).A)(e,[["render",function(n,a){return t}]])},66262:(n,a)=>{a.A=(n,a)=>{const s=n.__vccOpts||n;for(const[n,t]of a)s[n]=t;return s}}}]);