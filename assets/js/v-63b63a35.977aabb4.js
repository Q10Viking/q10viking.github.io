"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[85973],{37208:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-63b63a35",path:"/vue3/05%20%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/vue3/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Computed properties",slug:"computed-properties",children:[]},{level:2,title:"Computed Properties vs Method",slug:"computed-properties-vs-method",children:[]},{level:2,title:"Computed Setter",slug:"computed-setter",children:[]}],filePathRelative:"vue3/05 计算属性.md"}},38705:(s,n,a)=>{a.r(n),a.d(n,{default:()=>c});var e=a(20641);const t=(0,e.Fv)('<h2 id="computed-properties" tabindex="-1"><a class="header-anchor" href="#computed-properties" aria-hidden="true">#</a> Computed properties</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>它是属性而不是方法，vue会缓存其值</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t<span class="token function">total</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fisrtName <span class="token operator">+</span><span class="token string">&#39; &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="/images/vue3/202112021900737.jpg" alt="202112021900737"></p><h2 id="computed-properties-vs-method" tabindex="-1"><a class="header-anchor" href="#computed-properties-vs-method" aria-hidden="true">#</a> Computed Properties vs Method</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><strong>computed properties are cached based on their reactive dependencies.</strong></p><p>当computed和method都能实现的功能，建议使用computed，因为有缓存，更加高效</p></div><p><strong>Method</strong>: 只要页面重新渲染，如其他的值改变，方法就会重新调用（a method invocation will <strong>always</strong> run the function whenever a re-render happens.）</p>',7),p=(0,e.Lk)("p",null,[(0,e.Lk)("strong",null,"Computed Properties"),(0,e.eW)("当计算属性依赖的内容（在data中的值）发生变更时，才会重新执行计算，其他值改变不会触发")],-1),o=(0,e.Fv)('<h2 id="computed-setter" tabindex="-1"><a class="header-anchor" href="#computed-setter" aria-hidden="true">#</a> Computed Setter</h2><p>Computed properties are by default getter-only, but you can also provide a setter when you need it:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>\n<span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">fullName</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// getter</span>\n    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// setter</span>\n    <span class="token function">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> names <span class="token operator">=</span> newValue<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> names<span class="token punctuation">[</span>names<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// ...</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>',3),r={},c=(0,a(66262).A)(r,[["render",function(s,n){const a=(0,e.g2)("common-codepen-snippet");return(0,e.uX)(),(0,e.CE)(e.FK,null,[t,(0,e.bF)(a,{title:"computed-proterties1",slug:"dyVoMVB"}),p,(0,e.bF)(a,{title:"computed-proterties-2",slug:"oNGXxJN"}),o],64)}]])},66262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);