"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[86020],{90466:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-63a1b056",path:"/rabbitmq/14%20TTL.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/rabbitmq/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"TTL",slug:"ttl",children:[{level:3,title:"队列设置ttl",slug:"队列设置ttl",children:[]},{level:3,title:"消息设置ttl",slug:"消息设置ttl",children:[]}]},{level:2,title:"Spring的配置",slug:"spring的配置",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],filePathRelative:"rabbitmq/14 TTL.md"}},5626:(a,n,s)=>{s.r(n),s.d(n,{default:()=>p});const t=(0,s(20641).Fv)('<h2 id="ttl" tabindex="-1"><a class="header-anchor" href="#ttl" aria-hidden="true">#</a> TTL</h2><ol><li>TTL 全称 Time To Live（存活时间/过期时间）。</li><li><strong>当消息到达存活时间后，还没有被消费，会被自动清除。</strong></li><li>RabbitMQ可以对消息设置过期时间，也可以对整个队列（Queue）设置过期时间</li></ol><h3 id="队列设置ttl" tabindex="-1"><a class="header-anchor" href="#队列设置ttl" aria-hidden="true">#</a> 队列设置ttl</h3><p><img src="/images/RabbitMQ/image-20211031063750080.png" alt="image-20211031063750080"></p><h3 id="消息设置ttl" tabindex="-1"><a class="header-anchor" href="#消息设置ttl" aria-hidden="true">#</a> 消息设置ttl</h3><p><img src="/images/RabbitMQ/image-20211031064246588.png" alt="image-20211031064246588"></p><h2 id="spring的配置" tabindex="-1"><a class="header-anchor" href="#spring的配置" aria-hidden="true">#</a> Spring的配置</h2><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>    <span class="token comment">&lt;!--ttl--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rabbit:</span>queue</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test_queue_ttl<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test_queue_ttl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--设置queue的参数--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rabbit:</span>queue-arguments</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--x-message-ttl指队列的过期时间--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x-message-ttl<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java.lang.Integer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">rabbit:</span>queue-arguments</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">rabbit:</span>queue</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><ol><li>设置队列过期时间使用参数：x-message-ttl，单位：ms(毫秒)，会<strong>对整个队列消息统一过期</strong>。</li><li>设置消息过期时间使用参数：expiration。单位：ms(毫秒)，<strong>当该消息在队列头部时（消费时），会单独判断这一消息是否过期</strong>⭐。</li><li>如果两者都进行了设置，以时间短的为准。</li></ol>',10),e={},p=(0,s(66262).A)(e,[["render",function(a,n){return t}]])},66262:(a,n)=>{n.A=(a,n)=>{const s=a.__vccOpts||a;for(const[a,t]of n)s[a]=t;return s}}}]);