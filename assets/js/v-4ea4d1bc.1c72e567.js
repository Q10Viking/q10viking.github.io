"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[46242],{14221:(a,n,e)=>{e.r(n),e.d(n,{data:()=>s});const s={key:"v-4ea4d1bc",path:"/golang/20%20map.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/golang/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Hash Table",slug:"hash-table",children:[]},{level:2,title:"Map",slug:"map",children:[{level:3,title:"删除key/valule对",slug:"删除key-valule对",children:[]},{level:3,title:"测试key是否存在",slug:"测试key是否存在",children:[]},{level:3,title:"遍历map",slug:"遍历map",children:[]}]}],filePathRelative:"golang/20 map.md"}},79346:(a,n,e)=>{e.r(n),e.d(n,{default:()=>t});const s=(0,e(20641).Fv)('<h2 id="hash-table" tabindex="-1"><a class="header-anchor" href="#hash-table" aria-hidden="true">#</a> Hash Table</h2><p><img src="/images/golang/image-20230326162633150.png" alt="image-20230326162633150"></p><h2 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><blockquote><p>Hash Table的实现</p></blockquote><p><img src="/images/golang/image-20230326163004127.png" alt="image-20230326163004127"></p><p>也可以通过字面量创建</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>idMap <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span>\n\t<span class="token string">&quot;hzz&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1193094618@qq.com&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="删除key-valule对" tabindex="-1"><a class="header-anchor" href="#删除key-valule对" aria-hidden="true">#</a> 删除key/valule对</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token function">delete</span><span class="token punctuation">(</span>idMap<span class="token punctuation">,</span><span class="token string">&quot;hzz&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="测试key是否存在" tabindex="-1"><a class="header-anchor" href="#测试key是否存在" aria-hidden="true">#</a> 测试key是否存在</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// id is value ,p is presence of key</span>\nid<span class="token punctuation">,</span>p <span class="token operator">:=</span> idMap<span class="token punctuation">[</span><span class="token string">&quot;hzz&quot;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="遍历map" tabindex="-1"><a class="header-anchor" href="#遍历map" aria-hidden="true">#</a> 遍历map</h3><p><img src="/images/golang/image-20230326163504667.png" alt="image-20230326163504667"></p>',13),l={},t=(0,e(66262).A)(l,[["render",function(a,n){return s}]])},66262:(a,n)=>{n.A=(a,n)=>{const e=a.__vccOpts||a;for(const[a,s]of n)e[a]=s;return e}}}]);