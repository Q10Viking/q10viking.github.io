"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[71450],{28576:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-45dfd28c",path:"/ElasticStack/16%20%E5%8F%AC%E5%9B%9E%E7%8E%87%E4%B8%8E%E7%B2%BE%E5%87%86%E5%BA%A6%E7%9A%84%E5%B9%B3%E8%A1%A1%E5%A4%84%E7%90%86.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/ElasticStack/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"介绍",slug:"介绍",children:[]},{level:2,title:"测试",slug:"测试",children:[]}],filePathRelative:"ElasticStack/16 召回率与精准度的平衡处理.md"}},97120:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(20641).Fv)('<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><ol><li><p>召回率：召回率就是搜索结果比率，如：索引A中有100个document，搜索时返回多少个document，就是召回率（recall）。</p></li><li><p>精准度：就是搜索结果的准确率，如：搜索条件为hello java，在搜索结果中尽可能让短语匹配和hello java离的近的结果排序靠前，就是精准度（precision）。</p></li></ol><p>如果在搜索的时候，只使用match phrase语法，会导致召回率底下，因为搜索结果中必须包含短语</p><p>如果在搜索的时候，只使用match语法，会导致精准度底下，因为搜索结果排序是根据相关度分数算法计算得到。</p><p>那么<strong>如果需要在结果中兼顾召回率和精准度的时候，就需要将match和proximity(接近) search混合使用，来得到搜索结果</strong>。</p><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><p>数据准备</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>POST /test_a/_doc/<span class="token number">3</span>\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;f&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello, java is very good, spark is also very good&quot;</span>\n<span class="token punctuation">}</span>\n\nPOST /test_a/_doc/<span class="token number">4</span>\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;f&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java and spark, development language &quot;</span>\n<span class="token punctuation">}</span>\n\nPOST /test_a/_doc/<span class="token number">5</span>\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;f&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Java Spark is a fast and general-purpose cluster computing system. It provides high-level APIs in Java, Scala, Python and R, and an optimized engine that supports general execution graphs.&quot;</span>\n<span class="token punctuation">}</span>\n\nPOST /test_a/_doc/<span class="token number">6</span>\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;f&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java spark and, development language &quot;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>测试用例</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>GET /test_a/_search\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;match&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;f&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java spark&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>从搜索结果上看，基本上都搜索出来了，召回率很高，但是精准度却非常低</p></blockquote><p><img src="/images/elasticsearch/image-20220813022039617.png" alt="image-20220813022039617"></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>GET /test_a/_search\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;bool&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;must&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token property">&quot;match&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">&quot;f&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java spark&quot;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;should&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token property">&quot;match_phrase&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">&quot;f&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java spark&quot;</span><span class="token punctuation">,</span>\n              <span class="token property">&quot;slop&quot;</span><span class="token operator">:</span> <span class="token number">50</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><blockquote><p>可以看到结合近似搜索，在排序上精准度提高了</p></blockquote><p><img src="/images/elasticsearch/image-20220813022310802.png" alt="image-20220813022310802"></p>',15),e={},t=(0,a(66262).A)(e,[["render",function(n,s){return p}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);