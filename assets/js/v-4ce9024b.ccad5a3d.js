"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[67425],{80460:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-4ce9024b",path:"/golang/03%20%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7.html",title:"",lang:"zh-CN",frontmatter:{"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"变量声明",slug:"变量声明",children:[]},{level:2,title:"Array vs Slice",slug:"array-vs-slice",children:[{level:3,title:"Slice操作",slug:"slice操作",children:[]}]},{level:2,title:"For Loop",slug:"for-loop",children:[]},{level:2,title:"Function Receiver",slug:"function-receiver",children:[]}],filePathRelative:"golang/03 基本特性.md"}},55815:(n,a,s)=>{s.r(a),s.d(a,{default:()=>l});const e=(0,s(20641).Fv)('<h2 id="变量声明" tabindex="-1"><a class="header-anchor" href="#变量声明" aria-hidden="true">#</a> 变量声明</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> card <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;Ace of Spades&quot;</span>\n<span class="token comment">// 等同，简化写法，并且是推荐的写法</span>\ncard <span class="token operator">:=</span> <span class="token string">&quot;Ace of Spades&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="array-vs-slice" tabindex="-1"><a class="header-anchor" href="#array-vs-slice" aria-hidden="true">#</a> Array vs Slice</h2><p><img src="/images/golang/202112072021734.jpg" alt="202112072021734"></p><p><img src="/images/golang/202112072023426.jpg" alt="202112072023426"></p><h3 id="slice操作" tabindex="-1"><a class="header-anchor" href="#slice操作" aria-hidden="true">#</a> Slice操作</h3><p><img src="/images/golang/202112072119288.jpg" alt="202112072119288"></p><p><img src="/images/golang/202112072122556.jpg" alt="202112072122556"></p><h2 id="for-loop" tabindex="-1"><a class="header-anchor" href="#for-loop" aria-hidden="true">#</a> For Loop</h2><p><img src="/images/golang/202112072029315.jpg" alt="202112072029315"></p><h2 id="function-receiver" tabindex="-1"><a class="header-anchor" href="#function-receiver" aria-hidden="true">#</a> Function Receiver</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>go语言中没有Class面向对象这一说，而是使用Function receiver的方式</p></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> deck <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>\n<span class="token keyword">func</span> <span class="token punctuation">(</span>d deck<span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment">//... ... </span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',13),i={},l=(0,s(66262).A)(i,[["render",function(n,a){return e}]])},66262:(n,a)=>{a.A=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);