"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[42332],{15730:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-d72b8124",path:"/zk/12%20zk%E5%AE%9E%E7%8E%B0%E4%B8%BB%E4%BB%8E%E9%80%89%E4%B8%BE.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/zk/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Master-Worker协同服务",slug:"master-worker协同服务",children:[]},{level:2,title:"Master选举",slug:"master选举",children:[]},{level:2,title:"实现思路",slug:"实现思路",children:[{level:3,title:"代码实现",slug:"代码实现",children:[]}]},{level:2,title:"模拟多节点客户端竞选",slug:"模拟多节点客户端竞选",children:[]},{level:2,title:"测试",slug:"测试",children:[]}],filePathRelative:"zk/12 zk实现主从选举.md"}},66042:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var p=a(20641);const e=(0,p.Fv)('<h2 id="master-worker协同服务" tabindex="-1"><a class="header-anchor" href="#master-worker协同服务" aria-hidden="true">#</a> Master-Worker协同服务</h2><blockquote><p>设计一个master-worker的组成员管理系统，要求系统中只能有一个master , master能实时获取系统中worker的情况。</p><p>保证组里面只有一个master的设计思路（master-slave选举可以用这种方式）</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#master1</span>\ncreate <span class="token parameter variable">-e</span> /master <span class="token string">&quot;m1:2223&quot;</span>  \n\n<span class="token comment">#master2</span>\ncreate <span class="token parameter variable">-e</span> /master <span class="token string">&quot;m2:2223&quot;</span>   <span class="token comment"># /master已经存在，创建失败</span>\nNode already exists: /master\n<span class="token comment">#监听/master节点</span>\n<span class="token function">stat</span> <span class="token parameter variable">-w</span> /master\n<span class="token comment">#当master2收到/master节点删除通知后可以再次发起创建节点操作。</span>\n<span class="token comment"># 比如说，master1客户端下线，由于是临时节点，会被zk删除。</span>\ncreate <span class="token parameter variable">-e</span> /master <span class="token string">&quot;m2:2223&quot;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><img src="/images/zk/image-20230428164253874.png" alt="image-20230428164253874"></p><blockquote><p>master监控worker状态的设计思路</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#master服务</span>\ncreate /workers\n<span class="token comment">#让master服务监控/workers下的子节点</span>\n<span class="token function">ls</span> <span class="token parameter variable">-w</span> /workers\n\n<span class="token comment">#worker1</span>\ncreate <span class="token parameter variable">-e</span> /workers/w1 <span class="token string">&quot;w1:2224&quot;</span> <span class="token comment">#创建子节点，master服务会收到子节点变化通知</span>\n\n<span class="token comment">#master服务</span>\n<span class="token function">ls</span> <span class="token parameter variable">-w</span> /workers\n<span class="token comment">#worker2</span>\ncreate <span class="token parameter variable">-e</span> /workers/w2 <span class="token string">&quot;w2:2224&quot;</span>  <span class="token comment">#创建子节点，master服务会收到子节点变化通知</span>\n\n<span class="token comment">#master服务</span>\n<span class="token function">ls</span> <span class="token parameter variable">-w</span> /workers\n<span class="token comment">#worker2</span>\nquit  <span class="token comment">#worker2退出，master服务会收到子节点变化通知</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="master选举" tabindex="-1"><a class="header-anchor" href="#master选举" aria-hidden="true">#</a> Master选举</h2><p>随着分布式应用的的不断深入，需要对集群管理逐步透明化监控集群和作业状态，可以充分利ZK的独有特性。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>使用 zk 实现 Master 选举的原理是，集群中所有主机都向 zk 中创建相同路径下的某持久节点注册子节点列表变更 watcher 监听，并在该节点下持久相同名称的临时节点，谁创建成功谁就是 Master。</p><p>当 Master 宕机，该临时节点消失，此时会触发其他主机 watcher 回调的执行。watcher回调会重新抢注该节点下的临时节点，谁注册成功谁就是 Master。即可以实现 Master 宕机后的自动重新选举。</p></div><h2 id="实现思路" tabindex="-1"><a class="header-anchor" href="#实现思路" aria-hidden="true">#</a> 实现思路</h2><ol><li>节点尝试创建主节点的临时节点</li><li>创建成功,则为主节点</li><li>创建失败,则启动对主节点的监听,并getdata主节点信息</li><li>监听节点监听到主节点发生的下线情况,则重新进行选举</li></ol><h3 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h3>',12),t={href:"https://github.com/Q10Viking/learncode/tree/main/zookeeper/select-master",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Selection</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">ServerInfo</span> serverInfo<span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">LEADER_PREFIX</span> <span class="token operator">=</span> <span class="token string">&quot;/hzzApp&quot;</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">LEADER_PATH</span> <span class="token operator">=</span> <span class="token string">&quot;/hzzApp/leader&quot;</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> timeout <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">ZooKeeper</span> zooKeeper<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">int</span> index<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> started <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Selection</span><span class="token punctuation">(</span><span class="token class-name">String</span> ip<span class="token punctuation">,</span><span class="token keyword">int</span> port<span class="token punctuation">,</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>serverInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerInfo</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>port<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>index <span class="token operator">=</span> serverInfo<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        zooKeeper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZooKeeper</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:2181&quot;</span><span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>serverInfo <span class="token operator">+</span> <span class="token string">&quot;监听到事件:&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;---&quot;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>serverInfo <span class="token operator">+</span> <span class="token string">&quot;连接到了zookeeper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            started <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>started<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// 创建父节点 /hzzApp</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>zooKeeper<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token constant">LEADER_PREFIX</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            zooKeeper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token constant">LEADER_PREFIX</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">ZooDefs<span class="token punctuation">.</span>Ids</span><span class="token punctuation">.</span><span class="token constant">OPEN_ACL_UNSAFE</span><span class="token punctuation">,</span> <span class="token class-name">CreateMode</span><span class="token punctuation">.</span><span class="token constant">PERSISTENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            <span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// 创建临时节点 /hzzApp/leader</span>\n            <span class="token class-name">String</span> path <span class="token operator">=</span> zooKeeper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token constant">LEADER_PATH</span><span class="token punctuation">,</span>\n                    objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsBytes</span><span class="token punctuation">(</span>serverInfo<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token class-name">ZooDefs<span class="token punctuation">.</span>Ids</span><span class="token punctuation">.</span><span class="token constant">OPEN_ACL_UNSAFE</span><span class="token punctuation">,</span> <span class="token class-name">CreateMode</span><span class="token punctuation">.</span><span class="token constant">EPHEMERAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">//竞选成功</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>serverInfo <span class="token operator">+</span> <span class="token string">&quot;竞选主节点成功,当前节点id:&quot;</span> <span class="token operator">+</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>serverInfo <span class="token operator">+</span> <span class="token string">&quot;竞选主节点失败,当前节点已存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">//竞选失败,增加对主节点变动的监听</span>\n            zooKeeper<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token constant">LEADER_PATH</span><span class="token punctuation">,</span> event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token string">&quot;监听到事件:&quot;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;检测到节点变动,&quot;</span> <span class="token operator">+</span> serverInfo <span class="token operator">+</span> <span class="token string">&quot;进行竞选&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                    <span class="token comment">//重新竞选</span>\n                    <span class="token function">selection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 节点主动下线</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            zooKeeper<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>serverInfo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;节点下线&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><h2 id="模拟多节点客户端竞选" tabindex="-1"><a class="header-anchor" href="#模拟多节点客户端竞选" aria-hidden="true">#</a> 模拟多节点客户端竞选</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client1</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Selection</span> selection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Selection</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.135.130&quot;</span><span class="token punctuation">,</span> <span class="token number">8081</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        selection<span class="token punctuation">.</span><span class="token function">selection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addShutdownHook</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>selection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Selection</span> selection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Selection</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.135.130&quot;</span><span class="token punctuation">,</span> <span class="token number">8082</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        selection<span class="token punctuation">.</span><span class="token function">selection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addShutdownHook</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>selection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client3</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Selection</span> selection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Selection</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.135.135&quot;</span><span class="token punctuation">,</span> <span class="token number">8081</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        selection<span class="token punctuation">.</span><span class="token function">selection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addShutdownHook</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>selection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><blockquote><p>启动三个客户端，发现客户端1竞选当选为Leader,并且在zk上成功注册了服务信息</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 客户端1</span>\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.130, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8081</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>监听到事件:---SyncConnected\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.130, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8081</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>连接到了zookeeper\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.130, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8081</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>竞选主节点成功,当前节点id:/hzzApp/leader\n\n<span class="token comment"># 客户端2</span>\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.130, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8082</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>监听到事件:---SyncConnected\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.130, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8082</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>连接到了zookeeper\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.130, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8082</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>竞选主节点失败,当前节点已存在\n\n<span class="token comment"># 客户端3</span>\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.135, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8081</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>监听到事件:---SyncConnected\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.135, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8081</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>连接到了zookeeper\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.135, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8081</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>竞选主节点失败,当前节点已存在\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><img src="/images/zk/image-20230427184747958.png" alt="image-20230427184747958"></p><blockquote><p>现在停止掉leader节点client1,然后再继续观察</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 客户端2</span>\n<span class="token number">2</span>监听到事件:NodeDeleted\n检测到节点变动,ServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.130, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8082</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>进行竞选\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.130, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8082</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>竞选主节点成功,当前节点id:/hzzApp/leader\n\n<span class="token comment"># 客户端3</span>\n<span class="token number">3</span>监听到事件:NodeDeleted\n检测到节点变动,ServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.135, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8081</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>进行竞选\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.135, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8081</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>竞选主节点失败,当前节点已存在\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="/images/zk/image-20230427193223531.png" alt="image-20230427193223531"></p><blockquote><p>现在停止掉leader节点client2,然后再继续观察</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 客户端3</span>\n<span class="token number">3</span>监听到事件:NodeDeleted\n检测到节点变动,ServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.135, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8081</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>进行竞选\nServerInfo<span class="token punctuation">(</span>ip<span class="token operator">=</span><span class="token number">192.168</span>.135.135, <span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">8081</span>, <span class="token assign-left variable">index</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>竞选主节点成功,当前节点id:/hzzApp/leader\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="/images/zk/image-20230427193447578.png" alt="image-20230427193447578"></p><blockquote><p>客户端全部停止</p></blockquote><p><img src="/images/zk/image-20230427193703985.png" alt="image-20230427193703985"></p>',17),c={},l=(0,a(66262).A)(c,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[e,(0,p.Lk)("p",null,[(0,p.Lk)("a",t,[(0,p.eW)("Source Code"),(0,p.bF)(a)])]),o],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);