"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[77729],{55353:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-633c6844",path:"/golang/04%20%E5%AD%97%E7%AC%A6%E4%B8%B2.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/golang/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"字符串长度",slug:"字符串长度",children:[]}],filePathRelative:"golang/04 字符串.md"}},9875:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(20641).Fv)('<h2 id="字符串长度" tabindex="-1"><a class="header-anchor" href="#字符串长度" aria-hidden="true">#</a> 字符串长度</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>遇到计算字符个数，比如说用户名字多长，博客多长这种字符个数,用 <strong>utf8.RuneCountInString</strong></p></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main\n\n<span class="token keyword">import</span> <span class="token string">&quot;unicode/utf8&quot;</span>\n\n<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// 反引号</span>\n\t<span class="token function">println</span><span class="token punctuation">(</span><span class="token string">`First Line\n\t\t\tAnother line.`</span><span class="token punctuation">)</span>\n\n\t<span class="token function">println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token string">&quot;静默&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                       <span class="token comment">// 6</span>\n\t<span class="token function">println</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">RuneCountInString</span><span class="token punctuation">(</span><span class="token string">&quot;静默&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 2</span>\n\t<span class="token function">println</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">RuneCountInString</span><span class="token punctuation">(</span><span class="token string">&quot;Hi 静默&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 5</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',3),p={},e=(0,a(66262).A)(p,[["render",function(n,s){return t}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);