"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[20380],{70681:(t,e,r)=>{r.r(e),r.d(e,{data:()=>n});const n={key:"v-74a51ef3",path:"/JVM/24%20%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E4%B8%8E%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/JVM/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[],filePathRelative:"JVM/24 内存溢出与内存泄漏.md"}},26721:(t,e,r)=>{r.r(e),r.d(e,{default:()=>s});var n=r(20641);const l=(0,n.Lk)("p",null,"内存溢出是指程序尝试分配更多内存空间，而可用内存已经用尽，因此无法满足分配的请求。它通常发生在程序执行期间，例如创建新对象或递归调用时，需要分配内存，但没有足够的内存可供分配。内存溢出通常导致程序崩溃或抛出OutOfMemoryError异常。",-1),u=(0,n.Lk)("p",null,[(0,n.eW)("内存泄漏是指程序分配了一些内存，但在不再需要这些内存时没有释放它们。它通常不会导致程序立即崩溃，但随着时间的推移，占用的内存不断增加，最终可能导致程序变得非常缓慢或耗尽系统资源。内存泄漏通常是由于程序中的"),(0,n.Lk)("strong",null,"错误代码"),(0,n.eW)("、"),(0,n.Lk)("strong",null,"不正确的引用管理"),(0,n.eW)("或"),(0,n.Lk)("strong",null,"资源未正确关闭"),(0,n.eW)("等原因引起的。")],-1),o=(0,n.Lk)("p",null,"防内存溢出通常需要分配足够的内存，而预防内存泄漏需要确保及时释放不再需要的内存。调试和解决内存泄漏问题通常更具挑战性，因为它们不会立即导致程序失败，而且可能需要工具和技术来识别和解决。",-1),a={},s=(0,r(66262).A)(a,[["render",function(t,e){return(0,n.uX)(),(0,n.CE)(n.FK,null,[l,u,o],64)}]])},66262:(t,e)=>{e.A=(t,e)=>{const r=t.__vccOpts||t;for(const[t,n]of e)r[t]=n;return r}}}]);