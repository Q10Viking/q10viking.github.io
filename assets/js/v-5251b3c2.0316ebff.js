"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[80605],{5855:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-5251b3c2",path:"/Redis/25%20%E5%93%A8%E5%85%B5%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Redis/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"哨兵高可用架构",slug:"哨兵高可用架构",children:[]},{level:2,title:"搭建哨兵架构",slug:"搭建哨兵架构",children:[{level:3,title:"启动架构❤️",slug:"启动架构❤️",children:[]}]},{level:2,title:"哨兵的信息",slug:"哨兵的信息",children:[]},{level:2,title:"Jedis访问测试哨兵架构",slug:"jedis访问测试哨兵架构",children:[]},{level:2,title:"SpringBoot测试哨兵架构❤️",slug:"springboot测试哨兵架构❤️",children:[{level:3,title:"配置",slug:"配置",children:[]},{level:3,title:"测试",slug:"测试",children:[]},{level:3,title:"模拟master节点失败",slug:"模拟master节点失败",children:[]}]}],filePathRelative:"Redis/25 哨兵高可用架构.md"}},89740:(n,s,a)=>{a.r(s),a.d(s,{default:()=>b});var e=a(20641);const p=(0,e.Fv)('<h2 id="哨兵高可用架构" tabindex="-1"><a class="header-anchor" href="#哨兵高可用架构" aria-hidden="true">#</a> <strong>哨兵高可用架构</strong></h2><blockquote><p>sentinel哨兵是特殊的redis服务，不提供读写服务，<strong>主要用来监控redis实例节点</strong>。</p></blockquote><p>**哨兵机制：**使用Redis 哨兵来监控主节点和从节点的状态。哨兵是一组独立运行的进程，它会监控Redis实例的健康状态，并在主节点出现故障时自动进行故障转移。它还能够监控从节点，并在需要时将其提升为主节点。</p><p><img src="/images/Redis/80634.png" alt=""></p><p>哨兵架构下client端<strong>第一次从哨兵找出redis的主节点</strong>，后续就直接访问redis的主节点，不会每次都通过sentinel代理访问redis的主节点，当redis的主节点发生变化，哨兵会第一时间感知到，并且将新的redis主节点通知给client端(这里面redis的client端一般都实现了订阅功能，订阅sentinel发布的节点变动消息)</p><p>Redis 哨兵机制由多个相互独立的进程组成，这些进程使用 TCP/IP 协议相互通信，实现 Redis 节点的监控和故障转移。哨兵机制的关键进程包括：</p><ol><li>**sentinel：**主进程，用于监控 Redis 节点的状态，并执行故障转移操作。</li><li>**monitor：**哨兵进程，用于监控 Redis 的主节点和从节点是否正常工作，并在需要时通知其他哨兵进程和客户端。</li><li>**judge：**哨兵进程，用于对节点的健康状况进行评估，并根据预定义的阈值决定是否要将一个不健康的节点标记为“主观下线”。</li><li>**failover：**哨兵进程，负责执行故障转移操作，将主节点故障时选举出来的从节点晋升为新的主节点，并通知其他 Redis 节点更新配置信息。</li></ol><h2 id="搭建哨兵架构" tabindex="-1"><a class="header-anchor" href="#搭建哨兵架构" aria-hidden="true">#</a> <strong>搭建哨兵架构</strong></h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">1</span>、复制一份sentinel.conf文件\n<span class="token function">cp</span> sentinel.conf ./config/sentinel-26379.config\n\n<span class="token number">2</span>、将相关配置修改为如下值：\nport <span class="token number">26379</span>\ndaemonize <span class="token function">yes</span>\npidfile <span class="token string">&quot;/var/run/redis-sentinel-26379.pid&quot;</span>\nlogfile <span class="token string">&quot;26379.log&quot;</span>\n<span class="token function">dir</span> <span class="token string">&quot;/usr/redis/redis-6.2.6/data/26379&quot;</span>\n<span class="token comment"># sentinel monitor &lt;master-redis-name&gt; &lt;master-redis-ip&gt; &lt;master-redis-port&gt; &lt;quorum&gt;</span>\n<span class="token comment"># quorum是一个数字，指明当有多少个sentinel认为一个master失效时(值一般为：sentinel总数/2 + 1)，master才算真正失效</span>\nsentinel monitor mymaster <span class="token number">192.168</span>.187.135 <span class="token number">6379</span> <span class="token number">2</span>   <span class="token comment"># mymaster这个名字随便取，客户端访问时会用到</span>\n\n<span class="token number">3</span>、启动sentinel哨兵实例\nsrc/redis-sentinel ./config/sentinel-26379.config\n\n<span class="token number">4</span>、查看sentinel的info信息\nsrc/redis-cli <span class="token parameter variable">-p</span> <span class="token number">26379</span>\n<span class="token number">127.0</span>.0.1:2637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>info\n可以看到Sentinel的info里已经识别出了redis的主从\n\n<span class="token number">5</span>、可以自己再配置两个sentinel，端口26380和26381，注意上述配置文件里的对应数字都要修改\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><blockquote><p>注意：复制文件时最好不要复制已经启动了的哨兵实例的配置文件，因为redis会自动在启动的哨兵实例的配置文件中添加了一些数据。所以还是复制之前的文件进行修改</p></blockquote><p><img src="/images/Redis/image-20211114113147362.png" alt=""></p><h3 id="启动架构❤️" tabindex="-1"><a class="header-anchor" href="#启动架构❤️" aria-hidden="true">#</a> 启动架构❤️</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 启动master-slave架构</span>\n<span class="token builtin class-name">cd</span> /usr/redis/redis-6.2.6\nsrc/redis-server redis.conf   <span class="token comment"># 启动6379（主）</span>\nsrc/redis-server ./config/redis-6380.config <span class="token comment"># 启动6380（从）</span>\nsrc/redis-server ./config/redis-6381.config <span class="token comment"># 启动6381（从）</span>\n\n<span class="token comment"># 启动哨兵</span>\nsrc/redis-sentinel ./config/sentinel-26379.config\nsrc/redis-sentinel ./config/sentinel-26380.config\nsrc/redis-sentinel ./config/sentinel-26381.config\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="/images/Redis/image-20220809004810342.png" alt="image-20220809004810342"></p><p>查看启动的效果，sentinel的info已经识别了redis主从</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>src/redis-cli <span class="token parameter variable">-p</span> <span class="token number">26379</span>\n<span class="token number">127.0</span>.0.1:2637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>info\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="/images/Redis/image-20211114112922183.png" alt=""></p><hr><h2 id="哨兵的信息" tabindex="-1"><a class="header-anchor" href="#哨兵的信息" aria-hidden="true">#</a> 哨兵的信息</h2><p>哨兵架构启动成功后，Redis会在各自的配置文件中保存各个哨兵之间的信息,如sentinel-26379.config</p><p><img src="/images/Redis/image-20211115060721992.png" alt=""></p><h2 id="jedis访问测试哨兵架构" tabindex="-1"><a class="header-anchor" href="#jedis访问测试哨兵架构" aria-hidden="true">#</a> Jedis访问测试哨兵架构</h2>',22),t={class:"custom-container tip"},o=(0,e.Lk)("p",{class:"custom-container-title"},"TIP",-1),l={href:"https://github.com/Q10Viking/learncode/blob/main/redis/_01_java_redis/src/main/java/org/hzz/SentinelApp.java",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SentinelApp</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">JedisPoolConfig</span> jedisPoolConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        jedisPoolConfig<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        jedisPoolConfig<span class="token punctuation">.</span><span class="token function">setMaxIdle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        jedisPoolConfig<span class="token punctuation">.</span><span class="token function">setMinIdle</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// sentinel monitor mymaster 192.168.187.135 6379 2   # mymaster这个名字随便取，客户端访问时会用到</span>\n        <span class="token class-name">String</span> masterName <span class="token operator">=</span> <span class="token string">&quot;mymaster&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> sentinels <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        sentinels<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HostAndPort</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.187.135&quot;</span><span class="token punctuation">,</span><span class="token number">26379</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        sentinels<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HostAndPort</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.187.135&quot;</span><span class="token punctuation">,</span><span class="token number">26380</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        sentinels<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HostAndPort</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.187.135&quot;</span><span class="token punctuation">,</span><span class="token number">26381</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//JedisSentinelPool其实本质跟JedisPool类似，都是与redis主节点建立的连接池</span>\n        <span class="token comment">//⭐JedisSentinelPool并不是说与sentinel建立的连接池，而是通过sentinel发现redis主节点并与其建立连接⭐</span>\n        <span class="token class-name">JedisSentinelPool</span> jedisSentinelPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisSentinelPool</span><span class="token punctuation">(</span>masterName<span class="token punctuation">,</span> sentinels<span class="token punctuation">,</span> jedisPoolConfig<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token keyword">try</span><span class="token punctuation">{</span>\n            jedis <span class="token operator">=</span> jedisSentinelPool<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> res <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;test:greeting&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello Sentinel by 静默&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;test:greeting&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">// ...</span>\n        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>jedis <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token comment">//注意这里不是关闭连接，在JedisPool模式下，Jedis会被归还给资源池。</span>\n                jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/**\n * 八月 09, 2022 1:06:05 上午 redis.clients.jedis.JedisSentinelPool initSentinels\n * 信息: Trying to find master from available Sentinels...\n * 八月 09, 2022 1:06:05 上午 redis.clients.jedis.JedisSentinelPool initSentinels\n * 信息: Redis master running at 192.168.187.135:6381, starting Sentinel listeners...\n * 八月 09, 2022 1:06:05 上午 redis.clients.jedis.JedisSentinelPool initPool\n * 信息: Created JedisPool to master at 192.168.187.135:6381\n * OK\n * Hello Sentinel by 静默\n */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="springboot测试哨兵架构❤️" tabindex="-1"><a class="header-anchor" href="#springboot测试哨兵架构❤️" aria-hidden="true">#</a> SpringBoot测试哨兵架构❤️</h2>',2),i={class:"custom-container tip"},r=(0,e.Lk)("p",{class:"custom-container-title"},"TIP",-1),u={href:"https://github.com/Q10Viking/learncode/tree/main/redis/_02_springboot_sentinel",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Fv)('<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">redis</span><span class="token punctuation">:</span>\n    <span class="token key atrule">timeout</span><span class="token punctuation">:</span> <span class="token number">3000</span>\n    <span class="token key atrule">database</span><span class="token punctuation">:</span> <span class="token number">0</span>\n    <span class="token key atrule">sentinel</span><span class="token punctuation">:</span>\n      <span class="token key atrule">master</span><span class="token punctuation">:</span> mymaster\n      <span class="token key atrule">nodes</span><span class="token punctuation">:</span> 192.168.187.135<span class="token punctuation">:</span><span class="token number">26379</span><span class="token punctuation">,</span>192.168.187.135<span class="token punctuation">:</span><span class="token number">26380</span><span class="token punctuation">,</span>192.168.187.135<span class="token punctuation">:</span><span class="token number">26381</span> <span class="token comment"># 哨兵的地址</span>\n    <span class="token key atrule">lettuce</span><span class="token punctuation">:</span>    <span class="token comment"># springboot中使用的redis连接池为lettuce不是jedis</span>\n      <span class="token key atrule">pool</span><span class="token punctuation">:</span>\n        <span class="token key atrule">max-active</span><span class="token punctuation">:</span> <span class="token number">100</span>\n        <span class="token key atrule">max-idle</span><span class="token punctuation">:</span> <span class="token number">50</span>\n        <span class="token key atrule">min-idle</span><span class="token punctuation">:</span> <span class="token number">10</span>\n        <span class="token key atrule">max-wait</span><span class="token punctuation">:</span> <span class="token number">1000</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/sentinel&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SentinelController</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span>  <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">SentinelController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">StringRedisTemplate</span> redisTemplate<span class="token punctuation">;</span>\n\n    <span class="token comment">// 访问 http://localhost:8080/sentinel/test?name=hzz</span>\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSentinel</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span>  <span class="token punctuation">{</span>\n        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">try</span><span class="token punctuation">{</span>\n                redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;test:sentinel&quot;</span><span class="token punctuation">,</span>name<span class="token operator">+</span><span class="token string">&quot;(&quot;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                i<span class="token operator">++</span><span class="token punctuation">;</span>\n                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;add success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2_000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;error====&gt;&quot;</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="模拟master节点失败" tabindex="-1"><a class="header-anchor" href="#模拟master节点失败" aria-hidden="true">#</a> 模拟master节点失败</h3><ol><li><p>master节点停止掉</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 从哨兵info中找到master\nps -ef | grep redis\nkill master进程号\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>哨兵会从剩下的两个salve中，选举一个成为master,此时的它是slave的时候是只读的，现在成为master节点后就可以写读了，而另外一个仍然还是slave,只能读</p></li></ol><p><img src="/images/Redis/image-20211114114957226.png" alt=""></p><p>springboot中的日志,哨兵重新选举后的master</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">2021</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">06</span><span class="token operator">:</span><span class="token number">45.798</span>  <span class="token constant">INFO</span> <span class="token number">4876</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>xecutorLoop<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">i<span class="token punctuation">.</span>l<span class="token punctuation">.</span>core<span class="token punctuation">.</span>protocol<span class="token punctuation">.</span></span>ConnectionWatchdog</span>     <span class="token operator">:</span> <span class="token class-name">Reconnecting</span><span class="token punctuation">,</span> last destination was <span class="token number">192.168</span><span class="token number">.187</span><span class="token number">.135</span><span class="token operator">:</span><span class="token number">6379</span>\n<span class="token number">2021</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">14</span> <span class="token number">12</span><span class="token operator">:</span><span class="token number">06</span><span class="token operator">:</span><span class="token number">45.806</span>  <span class="token constant">INFO</span> <span class="token number">4876</span> <span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">[</span>ioEventLoop<span class="token operator">-</span><span class="token number">4</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token class-name"><span class="token namespace">i<span class="token punctuation">.</span>l<span class="token punctuation">.</span>core<span class="token punctuation">.</span>protocol<span class="token punctuation">.</span></span>ReconnectionHandler</span>    <span class="token operator">:</span> <span class="token class-name">Reconnected</span> <span class="token keyword">to</span> <span class="token number">192.168</span><span class="token number">.187</span><span class="token number">.135</span><span class="token operator">:</span><span class="token number">6381</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>端口6379的master节点挂了，springboot重试一会之后，重新连接上了新的端口为6381的master节点</p>',10),m={},b=(0,a(66262).A)(m,[["render",function(n,s){const a=(0,e.g2)("OutboundLink");return(0,e.uX)(),(0,e.CE)(e.FK,null,[p,(0,e.Lk)("div",t,[o,(0,e.Lk)("p",null,[(0,e.Lk)("a",l,[(0,e.eW)("Source Code SentinelApp.java"),(0,e.bF)(a)])])]),c,(0,e.Lk)("div",i,[r,(0,e.Lk)("p",null,[(0,e.Lk)("a",u,[(0,e.eW)("Source Code springboot_sentinel_redis"),(0,e.bF)(a)])])]),k],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);