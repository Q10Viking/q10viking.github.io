"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[58622],{73409:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-41899052",path:"/zk/02%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/zk/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"help",slug:"help",children:[]},{level:2,title:"查看节点列表",slug:"查看节点列表",children:[{level:3,title:"查看目录下的所有节点",slug:"查看目录下的所有节点",children:[]}]},{level:2,title:"获取节点下的数据",slug:"获取节点下的数据",children:[{level:3,title:"查看节点的状态",slug:"查看节点的状态",children:[]}]},{level:2,title:"stat查看节点状态",slug:"stat查看节点状态",children:[]},{level:2,title:"更新设置节点下的数据",slug:"更新设置节点下的数据",children:[]},{level:2,title:"删除节点",slug:"删除节点",children:[]},{level:2,title:"创建节点❤️",slug:"创建节点❤️",children:[{level:3,title:"临时节点",slug:"临时节点",children:[]},{level:3,title:"顺序节点",slug:"顺序节点",children:[]},{level:3,title:"临时顺序节点⭐",slug:"临时顺序节点⭐",children:[]},{level:3,title:"容器节点",slug:"容器节点",children:[]},{level:3,title:"TTL节点",slug:"ttl节点",children:[]}]}],filePathRelative:"zk/02 常用命令.md"}},52987:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var e=a(20641);const p={href:"https://zookeeper.apache.org/doc/r3.6.0/zookeeperCLI.html",target:"_blank",rel:"noopener noreferrer"},t=(0,e.Fv)('<h2 id="help" tabindex="-1"><a class="header-anchor" href="#help" aria-hidden="true">#</a> help</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">15</span><span class="token punctuation">]</span> <span class="token builtin class-name">help</span>\nZooKeeper <span class="token parameter variable">-server</span> host:port -client-configuration properties-file cmd args\n        addWatch <span class="token punctuation">[</span>-m mode<span class="token punctuation">]</span> path <span class="token comment"># optional mode is one of [PERSISTENT, PERSISTENT_RECURSIVE] - default is PERSISTENT_RECURSIVE</span>\n        addauth scheme auth\n        close\n        config <span class="token punctuation">[</span>-c<span class="token punctuation">]</span> <span class="token punctuation">[</span>-w<span class="token punctuation">]</span> <span class="token punctuation">[</span>-s<span class="token punctuation">]</span>\n        connect host:port\n        create <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-e<span class="token punctuation">]</span> <span class="token punctuation">[</span>-c<span class="token punctuation">]</span> <span class="token punctuation">[</span>-t ttl<span class="token punctuation">]</span> path <span class="token punctuation">[</span>data<span class="token punctuation">]</span> <span class="token punctuation">[</span>acl<span class="token punctuation">]</span>\n        delete <span class="token punctuation">[</span>-v version<span class="token punctuation">]</span> path\n        deleteall path <span class="token punctuation">[</span>-b batch size<span class="token punctuation">]</span>\n        delquota <span class="token punctuation">[</span>-n<span class="token operator">|</span>-b<span class="token operator">|</span>-N<span class="token operator">|</span>-B<span class="token punctuation">]</span> path\n        get <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-w<span class="token punctuation">]</span> path\n        getAcl <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> path\n        getAllChildrenNumber path\n        getEphemerals path\n        <span class="token function">history</span>\n        listquota path\n        <span class="token function">ls</span> <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-w<span class="token punctuation">]</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> path\n        printwatches on<span class="token operator">|</span>off\n        quit\n        reconfig <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-v version<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>-file path<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token punctuation">[</span>-members <span class="token assign-left variable">serverID</span><span class="token operator">=</span>host:port1:port2<span class="token punctuation">;</span>port3<span class="token punctuation">[</span>,<span class="token punctuation">..</span>.<span class="token punctuation">]</span>*<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token punctuation">[</span>-add <span class="token assign-left variable">serverId</span><span class="token operator">=</span>host:port1:port2<span class="token punctuation">;</span>port3<span class="token punctuation">[</span>,<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">]</span>* <span class="token punctuation">[</span>-remove serverId<span class="token punctuation">[</span>,<span class="token punctuation">..</span>.<span class="token punctuation">]</span>*<span class="token punctuation">]</span>\n        redo cmdno\n        removewatches path <span class="token punctuation">[</span>-c<span class="token operator">|</span>-d<span class="token operator">|</span>-a<span class="token punctuation">]</span> <span class="token punctuation">[</span>-l<span class="token punctuation">]</span>\n        <span class="token builtin class-name">set</span> <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-v version<span class="token punctuation">]</span> path data\n        setAcl <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-v version<span class="token punctuation">]</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> path acl\n        setquota -n<span class="token operator">|</span>-b<span class="token operator">|</span>-N<span class="token operator">|</span>-B val path\n        <span class="token function">stat</span> <span class="token punctuation">[</span>-w<span class="token punctuation">]</span> path\n        <span class="token function">sync</span> path\n        version\n        <span class="token function">whoami</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="查看节点列表" tabindex="-1"><a class="header-anchor" href="#查看节点列表" aria-hidden="true">#</a> 查看节点列表</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 查看根目录下的节点</span>\n<span class="token function">ls</span> /\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="查看目录下的所有节点" tabindex="-1"><a class="header-anchor" href="#查看目录下的所有节点" aria-hidden="true">#</a> 查看目录下的所有节点</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 遍历查看 test目录下的所有子目录</span>\n<span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">15</span><span class="token punctuation">]</span> <span class="token function">ls</span> <span class="token parameter variable">-R</span> /test\n/test\n/test/0000000000\n/test/0000000001\n/test/0000000000/0000000000\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="获取节点下的数据" tabindex="-1"><a class="header-anchor" href="#获取节点下的数据" aria-hidden="true">#</a> 获取节点下的数据</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>get /ephemeral\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="查看节点的状态" tabindex="-1"><a class="header-anchor" href="#查看节点的状态" aria-hidden="true">#</a> 查看节点的状态</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">17</span><span class="token punctuation">]</span> get <span class="token parameter variable">-s</span> /seq\nnull\ncZxid <span class="token operator">=</span> 0x5\t\t\t\t\t\t\t\t<span class="token comment">#创建znode的事务ID（Zxid的值)</span>\nctime <span class="token operator">=</span> Wed Nov <span class="token number">17</span> <span class="token number">16</span>:23:40 EST <span class="token number">2021</span>\t  <span class="token comment">#znode创建时间</span>\nmZxid <span class="token operator">=</span> 0x5\t\t\t\t\t\t\t\t<span class="token comment"># 最后修改znode的事务ID。</span>\nmtime <span class="token operator">=</span> Wed Nov <span class="token number">17</span> <span class="token number">16</span>:23:40 EST <span class="token number">2021</span>\t  <span class="token comment"># znode最近修改时间。</span>\npZxid <span class="token operator">=</span> 0x7\t\t\t\t\t\t\t\t<span class="token comment"># 最后添加或删除子节点的事务ID（子节点列表发生变化才会发生改变）。</span>\ncversion <span class="token operator">=</span> <span class="token number">2</span>\t\t\t\t\t\t\t<span class="token comment"># znode的子节点结果集版本（一个节点的子节点增加、删除都会影响这个版本）。</span>\ndataVersion <span class="token operator">=</span> <span class="token number">0</span>\t\t\t\t\t\t\t<span class="token comment"># znode的当前数据版本。</span>\naclVersion <span class="token operator">=</span> <span class="token number">0</span>\t\t\t\t\t\t\t<span class="token comment"># 表示对此znode的acl版本。</span>\nephemeralOwner <span class="token operator">=</span> 0x0\t\t\t\t\t<span class="token comment"># znode是临时znode时，表示znode所有者的 session ID。 如果znode不是临时znode，则该字段设置为零。</span>\ndataLength <span class="token operator">=</span> <span class="token number">0</span>\t\t\t\t\t\t    <span class="token comment"># znode数据字段的长度。</span>\nnumChildren <span class="token operator">=</span> <span class="token number">2</span>\t\t\t\t\t\t    <span class="token comment"># znode的子znode的数量。 </span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="stat查看节点状态" tabindex="-1"><a class="header-anchor" href="#stat查看节点状态" aria-hidden="true">#</a> stat查看节点状态</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">stat</span> /test‐node\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><p>cZxid ：Znode创建的事务id。</p></li><li><p>ctime：节点创建时的时间戳。</p></li><li><p>mZxid ：Znode被修改的事务id，即每次对znode的修改都会更新mZxid。</p><ul><li>对于zk来说，每次的变化都会产生一个唯一的事务id，zxid（ZooKeeper Transaction Id），通过zxid，可以确定更新操作的先后顺序。例如，如果zxid1小于zxid2，说明zxid1操作先于zxid2发生，zxid对于整个zk都是唯一的，即使操作的是不同的znode。</li></ul></li><li><p>pZxid: 表示该节点的子节点列表最后一次修改的事务ID，添加子节点或删除子节点就会影响子节点列表，但是修改子节点的数据内容则不影响该ID（注意: 只有子节点列表变更了才会变更pzxid，子节点内容变更不会影响pzxid）</p></li><li><p>mtime：节点最新一次更新发生时的时间戳.</p></li><li><p>cversion ：子节点的版本号。当znode的子节点有变化时，cversion 的值就会增加1。</p></li><li><p>dataVersion：数据版本号，每次对节点进行set操作，dataVersion的值都会增加1（即使设置的是相同的数据），可有效避免了数据更新时出现的先后顺序问题。</p></li><li><p>ephemeralOwner:如果该节点为临时节点, ephemeralOwner值表示与该节点绑定的session id。如果不是, ephemeralOwner值为0(持久节点)。</p><ul><li>在client和server通信之前,首先需要建立连接,该连接称为session。连接建立后,如果发生连接超时、授权失败,或者显式关闭连接,连接便处于closed状态, 此时session结束。</li></ul></li><li><p>dataLength ： 数据的长度</p></li><li><p>numChildren ：子节点的数量（只统计直接子节点的数量）</p></li></ul><h2 id="更新设置节点下的数据" tabindex="-1"><a class="header-anchor" href="#更新设置节点下的数据" aria-hidden="true">#</a> 更新设置节点下的数据</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code> <span class="token builtin class-name">set</span> /ephemeral xxx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="删除节点" tabindex="-1"><a class="header-anchor" href="#删除节点" aria-hidden="true">#</a> 删除节点</h2><blockquote><p>**delete 命令只能一层一层删除。**提示：新版本可以通过 deleteall 命令递归删除</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> delete /ephemeral\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="创建节点❤️" tabindex="-1"><a class="header-anchor" href="#创建节点❤️" aria-hidden="true">#</a> 创建节点❤️</h2><blockquote><p>默认是创建持久化节点</p></blockquote><ul><li><strong>创建节点时，必须要带上全路径</strong></li><li></li></ul><img src="/images/zk/25510.png" alt="img"><h3 id="临时节点" tabindex="-1"><a class="header-anchor" href="#临时节点" aria-hidden="true">#</a> 临时节点</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>create <span class="token parameter variable">-e</span> /ephemeral data\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="/images/zk/image-20210429185829067.png" alt=""></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 临时节点关闭时，在zookeeper的logs/zookeeper-root-server-haproxy.out 会追加</span>\n<span class="token comment"># tail -f zookeeper-root-server-haproxy.out</span>\n<span class="token number">2021</span>-04-29 07:22:20,620 <span class="token punctuation">[</span>myid:<span class="token punctuation">]</span> - WARN  <span class="token punctuation">[</span>NIOWorkerThread-2:NIOServerCnxn@366<span class="token punctuation">]</span> - Unable to <span class="token builtin class-name">read</span> additional data from client sessionid 0x100000664250004, likely client has closed socket\n<span class="token number">2021</span>-04-29 07:22:51,569 <span class="token punctuation">[</span>myid:<span class="token punctuation">]</span> - INFO  <span class="token punctuation">[</span>SessionTracker:ZooKeeperServer@398<span class="token punctuation">]</span> - Expiring session 0x100000664250004, <span class="token function">timeout</span> of 30000ms exceeded\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>客户端与zookeeper断开连接后，马上又连接上，还是可以看到临时节点，但是此时的临时节点会在30s后自动删除。</p><blockquote><p>临时节点不能再有子节点</p></blockquote><h3 id="顺序节点" tabindex="-1"><a class="header-anchor" href="#顺序节点" aria-hidden="true">#</a> 顺序节点</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>create /seq\n<span class="token comment"># 加上s就是顺序节点</span>\ncreate <span class="token parameter variable">-s</span> /seq/hzz-\ncreate <span class="token parameter variable">-s</span> /seq/hzz-\n<span class="token comment"># 结果如下</span>\n/seq\n/seq/hzz-0000000000\n/seq/hzz-0000000001\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="临时顺序节点⭐" tabindex="-1"><a class="header-anchor" href="#临时顺序节点⭐" aria-hidden="true">#</a> 临时顺序节点⭐</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 创建一个节点用于存放临时节点</span>\ncreate /seq-ephemeral\n<span class="token comment"># 创建临时节点，临时节点的数据为xxx</span>\ncreate <span class="token parameter variable">-e</span> <span class="token parameter variable">-s</span> /seq-ephemeral/ xxx\n<span class="token comment"># 效果为</span>\n/seq-ephemeral/0000000000\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="容器节点" tabindex="-1"><a class="header-anchor" href="#容器节点" aria-hidden="true">#</a> 容器节点</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>create <span class="token parameter variable">-c</span> /container\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>如果容器节点没有子节点，那么会被zookeeper清除掉，大约60s后</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">2021</span>-04-29 07:48:28,448 <span class="token punctuation">[</span>myid:<span class="token punctuation">]</span> - INFO  <span class="token punctuation">[</span>ContainerManagerTask:ContainerManager@119<span class="token punctuation">]</span> - Attempting to delete candidate container: /container\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="ttl节点" tabindex="-1"><a class="header-anchor" href="#ttl节点" aria-hidden="true">#</a> TTL节点</h3><p>默认不开启，需要添加JVM参数</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># zkServer.sh</span>\n<span class="token parameter variable">-Dzookeeper.extendedTypesEnabled</span><span class="token operator">=</span>true\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="/../../../../saas-yong/fullstack/Java架构师之路/Zookeeper/imgs/image-20210429195520760.png" alt="image-20210429195520760"></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>create <span class="token parameter variable">-t</span> <span class="token number">5000</span> /ttl-node xxx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># ttl节点5s后会被自动删除</span>\n<span class="token number">2021</span>-04-29 08:00:24,835 <span class="token punctuation">[</span>myid:<span class="token punctuation">]</span> - INFO  <span class="token punctuation">[</span>ContainerManagerTask:ContainerManager@119<span class="token punctuation">]</span> - Attempting to delete candidate container: /ttl-node\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr>',43),l={},c=(0,a(66262).A)(l,[["render",function(n,s){const a=(0,e.g2)("OutboundLink");return(0,e.uX)(),(0,e.CE)(e.FK,null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",p,[(0,e.eW)("ZooKeeper: Because Coordinating Distributed Systems is a Zoo (apache.org)"),(0,e.bF)(a)])]),t],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);