"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[97685],{39097:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-8cec58de",path:"/RocketMQ/21%20Producer%E5%8F%91%E6%B6%88%E6%81%AF%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/RocketMQ/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Producer启动",slug:"producer启动",children:[]},{level:2,title:"Producer发消息",slug:"producer发消息",children:[]}],filePathRelative:"RocketMQ/21 Producer发消息源码分析.md"}},10819:(s,n,a)=>{a.r(n),a.d(n,{default:()=>r});var e=a(20641);const p=(0,e.Fv)('<h2 id="producer启动" tabindex="-1"><a class="header-anchor" href="#producer启动" aria-hidden="true">#</a> Producer启动</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// DefaultMQProducerImpl</span>\n<span class="token class-name">ConcurrentMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token comment">/* topic */</span><span class="token punctuation">,</span> <span class="token class-name">TopicPublishInfo</span><span class="token operator">&gt;</span> topicPublishInfoTable <span class="token operator">=</span>\n        <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">TopicPublishInfo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token comment">/* Topic */</span><span class="token punctuation">,</span> <span class="token class-name">TopicRouteData</span><span class="token operator">&gt;</span> topicRouteTable\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如何选择队列发送，尤其是第一次没有topic的时候</p><p><img src="/images/RocketMQ/image-20220613235730248.png" alt="image-20220614002517988"></p><p>它会根据系统的TBW102获取到Broker的基本信息，然后在producer中生成queue,生成的queue主要用来做负载均衡。（此时broker没有topic和对应的message queue建立）</p><h2 id="producer发消息" tabindex="-1"><a class="header-anchor" href="#producer发消息" aria-hidden="true">#</a> Producer发消息</h2>',6),o={href:"https://www.processon.com/view/link/62a7741007912939b22b5ffb",target:"_blank",rel:"noopener noreferrer"},t=(0,e.Lk)("p",null,[(0,e.Lk)("img",{src:"/images/RocketMQ/Producer发消息.png",alt:"Producer发消息"})],-1),c={},r=(0,a(66262).A)(c,[["render",function(s,n){const a=(0,e.g2)("OutboundLink"),c=(0,e.g2)("common-progresson-snippet");return(0,e.uX)(),(0,e.CE)(e.FK,null,[p,(0,e.Lk)("p",null,[(0,e.Lk)("a",o,[(0,e.eW)("Producer发消息 | ProcessOn免费在线作图,在线流程图,在线思维导图 |"),(0,e.bF)(a)])]),(0,e.bF)(c,{src:"https://www.processon.com/view/link/62a7741007912939b22b5ffb"}),t],64)}]])},66262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);