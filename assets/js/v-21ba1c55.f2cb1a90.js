"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[40130],{83280:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-21ba1c55",path:"/Docker/12%20compose%E9%83%A8%E7%BD%B2%E5%BE%AE%E6%9C%8D%E5%8A%A1.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Docker/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"编排依赖环境",slug:"编排依赖环境",children:[{level:3,title:"启动",slug:"启动",children:[]}]},{level:2,title:"编排微服务",slug:"编排微服务",children:[]}],filePathRelative:"Docker/12 compose部署微服务.md"}},63211:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});const e=(0,a(20641).Fv)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>如果微服务较多，则可以用docker compose来统一编排，接下来我们用docker compose来统一编排电商项目的五个微服务：mall-authcenter，mall-gateway，mall-member，mall-order，mall-product</p></div><h2 id="编排依赖环境" tabindex="-1"><a class="header-anchor" href="#编排依赖环境" aria-hidden="true">#</a> 编排依赖环境</h2><ol><li>创建一个空目录docker-mall</li><li>在docker-mall目录下新建一个编排文件docker-compose-env.yml，内容如下</li></ol><div class="language-docker ext-docker line-numbers-mode"><pre class="language-docker"><code>version: &#39;3.8&#39;\nservices:\n  mysql:\n    image: mysql:5.7\n    container_name: mysql\n    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci  #覆盖容器启动后默认执行的启动mysql命令\n    restart: always  #关机或者重启机器时，docker同时重启容器，一般mysql服务可以这么设置，保持服务一直都在\n    environment:\n      MYSQL_ROOT_PASSWORD: root #设置root帐号密码\n    ports:\n      - 3306:3306\n    volumes:\n      - /mydata/mysql/data/db:/var/lib/mysql #数据文件挂载\n      - /mydata/mysql/data/conf:/etc/mysql/conf.d #配置文件挂载\n      - /mydata/mysql/log:/var/log/mysql #日志文件挂载\n  redis:   \n    image: redis:5.0\n    container_name: redis\n    command: redis-server --appendonly yes  \n    volumes:\n      - /mydata/redis/data:/data #数据文件挂载\n    ports:\n      - 6379:6379\n  rabbitmq:\n    image: rabbitmq:3.7.25-management\n    container_name: rabbitmq\n    volumes:\n      - /mydata/rabbitmq/data:/var/lib/rabbitmq #数据文件挂载\n      - /mydata/rabbitmq/log:/var/log/rabbitmq #日志文件挂载\n    ports:\n      - 5672:5672\n      - 15672:15672\n  elasticsearch:\n    image: elasticsearch:6.4.0\n    container_name: elasticsearch\n    environment:\n      - &quot;cluster.name=elasticsearch&quot; #设置集群名称为elasticsearch\n      - &quot;discovery.type=single-node&quot; #以单一节点模式启动\n      - &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot; #设置使用jvm内存大小，稍微配置大点，不然有可能启动不成功\n    volumes:\n      - /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载\n      - /mydata/elasticsearch/data:/usr/share/elasticsearch/data #数据文件挂载\n    ports:\n      - 9200:9200\n      - 9300:9300\n  kibana:\n    image: kibana:6.4.0\n    container_name: kibana\n    links:  #同一个compose文件管理的服务可以直接用服务名访问，如果要给服务取别名则可以用links实现，如下面的es就是elasticsearch服务的别名\n      - elasticsearch:es #可以用es这个域名访问elasticsearch服务\n    depends_on:\n      - elasticsearch #kibana在elasticsearch启动之后再启动\n    environment:\n      - &quot;elasticsearch.hosts=http://es:9200&quot; #设置访问elasticsearch的地址\n    ports:\n      - 5601:5601\n  logstash:\n    image: logstash:6.4.0\n    container_name: logstash\n    volumes:\n      - /mydata/logstash/logstash-springboot.conf:/usr/share/logstash/pipeline/logstash.conf #挂载logstash的配置文件，docker对单个文件的挂载需要先在宿主机建好对应文件才能挂载成功\n    depends_on:\n      - elasticsearch #kibana在elasticsearch启动之后再启动\n    links:\n      - elasticsearch:es #可以用es这个域名访问elasticsearch服务\n    ports:\n      - 4560:4560\n  mongo:\n    image: mongo:3.2\n    container_name: mongo\n    volumes:\n      - /mydata/mongo/db:/data/db #数据文件挂载\n    ports:\n      - 27017:27017\n  nacos:\n    image: nacos/nacos-server:1.4.2\n    container_name: nacos\n    environment:\n      - MODE=standalone\n    volumes:\n      - /mydata/nacos/logs/:/home/nacos/logs\n    ports:\n      - &quot;8848:8848&quot;\n  zookeeper:\n    image: zookeeper:3.5\n    ports:\n      - 2181:2181 \n    volumes:\n      - /mydata/zookeeper/data:/data\n      - /mydata/zookeeper/conf:/conf\n      \n  rocketmq:\n    image: rocketmqinc/rocketmq\n    container_name: rocketmq\n    restart: always    \n    ports:\n      - 9876:9876\n    volumes:\n      - /mydata/rocketmq/logs:/home/rocketmq/logs\n      - /mydata/rocketmq/store:/home/rocketmq/store\n    command: sh mqnamesrv\n  broker:\n    image: rocketmqinc/rocketmq\n    container_name: rmqbroker\n    restart: always    \n    ports:\n      - 10909:10909\n      - 10911:10911\n      - 10912:10912\n    volumes:\n      - /mydata/rocketmq/logs:/home/rocketmq/logs\n      - /mydata/rocketmq/store:/home/rocketmq/store\n      - /mydata/rocketmq/conf/broker.conf:/opt/rocketmq-4.4.0/conf/broker.conf  #这个配置需要先在宿主机对应目录放好broker.conf配置文件,文件内容参考下面文档\n    command: sh mqbroker -n namesrv:9876 -c ../conf/broker.conf\n    depends_on:\n      - rocketmq\n    environment:\n      - JAVA_HOME=/usr/lib/jvm/jre\n  console:\n    image: styletang/rocketmq-console-ng\n    container_name: rocketmq-console-ng\n    restart: always    \n    ports:\n      - 8076:8080\n    depends_on:\n      - rocketmq\n    environment:\n      - JAVA_OPTS= -Dlogging.level.root=info -Drocketmq.namesrv.addr=rocketmq:9876 \n      - Dcom.rocketmq.sendMessageWithVIPChannel=false\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br></div></div><p>broker.conf文件内容</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">brokerName</span> <span class="token punctuation">=</span> <span class="token value attr-value">broker-a</span>\n<span class="token key attr-name">brokerId</span> <span class="token punctuation">=</span> <span class="token value attr-value">0</span>\n<span class="token key attr-name">deleteWhen</span> <span class="token punctuation">=</span> <span class="token value attr-value">04</span>\n<span class="token key attr-name">fileReservedTime</span> <span class="token punctuation">=</span> <span class="token value attr-value">48</span>\n<span class="token key attr-name">brokerRole</span> <span class="token punctuation">=</span> <span class="token value attr-value">ASYNC_MASTER</span>\n<span class="token key attr-name">flushDiskType</span> <span class="token punctuation">=</span> <span class="token value attr-value">ASYNC_FLUSH</span>\n<span class="token comment"># 宿主机IP</span>\n<span class="token key attr-name">brokerIP1</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.65.42</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><p>启动compose所有容器，在docker-mall目录执行如下命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> compose <span class="token parameter variable">-f</span> docker-compose-env.yml up <span class="token parameter variable">-d</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="编排微服务" tabindex="-1"><a class="header-anchor" href="#编排微服务" aria-hidden="true">#</a> 编排微服务</h2><ol><li><p>在docker-mall目录下分别创建mall-authcenter，mall-gateway，mall-member，mall-order，mall-product目录。</p></li><li><p>在每个微服务目录下新建一个Dockerfile，内容如下，以mall-product服务为例，其它微服务都类似修改：</p><div class="language-docker ext-docker line-numbers-mode"><pre class="language-docker"><code><span class="token comment"># 基于哪个镜像</span>\n<span class="token instruction"><span class="token keyword">From</span> java:8</span>\n<span class="token comment"># 复制文件到容器</span>\n<span class="token instruction"><span class="token keyword">ADD</span> mall-product-0.0.1-SNAPSHOT.jar /app.jar</span>\n<span class="token comment"># 配置容器启动后执行的命令</span>\n<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">&quot;java&quot;</span>,<span class="token string">&quot;-jar&quot;</span>,<span class="token string">&quot;/app.jar&quot;</span>]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>在docker-mall目录下新建微服务编排文件docker-compose-app.yml，内容如下</p><div class="language-docker ext-docker line-numbers-mode"><pre class="language-docker"><code>version: &#39;3.8&#39;\nservices:\n  mall-authcenter:\n    image: mall/mall-authcenter:0.0.1  #指定镜像名称\n    build: ./mall-authcenter  #指定Dockfile所在路径\n    container_name: mall-authcenter  #指定启动容器名称\n    ports:\n      - 9999:9999\n    volumes:\n      - /etc/localtime:/etc/localtime:ro  #同步宿主机与容器时间，ro代表readonly只读\n    environment:\n      - JAVA_TOOL_OPTIONS=-Xmx1g -Xms1g -XX:MaxMetaspaceSize=512m -javaagent:/agent/skywalking-agent.jar -DSW_AGENT_NAME=tulingmall-order -DSW_AGENT_COLLECTOR_BACKEND_SERVICES=192.168.65.204:11800\n    external_links:  #访问不在同一个compose文件管理的服务需要用external_links，前提是这些服务都在同一个网络下才能正常访问 \n      - nacos:nacos  #可以用nacos这个域名访问nacos服务\n      - mysql:db  #可以用db这个域名访问mysql服务\n    cap_add:\n      - SYS_PTRACE #这个参数是让docker能支持在容器里能执行jdk自带的类似jinfo，jmap这些命令，如果不需要在容器里执行这些命令可以不加\n  mall-gateway:\n    image: mall/mall-gateway:0.0.1\n    build: ./mall-gateway\n    container_name: mall-gateway\n    ports:\n      - 8888:8888\n    volumes:\n      - /etc/localtime:/etc/localtime:ro #同步宿主机与容器时间\n    environment:\n      - JAVA_TOOL_OPTIONS=-Xmx1g -Xms1g -XX:MaxMetaspaceSize=512m -javaagent:/agent/skywalking-agent.jar -DSW_AGENT_NAME=tulingmall-order -DSW_AGENT_COLLECTOR_BACKEND_SERVICES=192.168.65.204:11800\n    depends_on:\n      - mall-authcenter #gateway在authcenter启动之后再启动\n    external_links:\n      - nacos:nacos\n    cap_add:\n      - SYS_PTRACE #这个参数是让docker能支持在容器里能执行jdk自带的类似jinfo，jmap这些命令，如果不需要在容器里执行这些命令可以不加\n  mall-member:\n    image: mall/mall-member:0.0.1\n    build: ./mall-member\n    container_name: mall-member\n    ports:\n      - 8877:8877\n    volumes:\n      - /etc/localtime:/etc/localtime:ro #同步宿主机与容器时间\n    environment:\n      - JAVA_TOOL_OPTIONS=-Xmx1g -Xms1g -XX:MaxMetaspaceSize=512m -javaagent:/agent/skywalking-agent.jar -DSW_AGENT_NAME=tulingmall-order -DSW_AGENT_COLLECTOR_BACKEND_SERVICES=192.168.65.204:11800\n    external_links:\n      - nacos:nacos\n      - mysql:db #可以用db这个域名访问mysql服务\n      - mongo\n      - redis\n      - rabbitmq\n    cap_add:\n      - SYS_PTRACE #这个参数是让docker能支持在容器里能执行jdk自带的类似jinfo，jmap这些命令，如果不需要在容器里执行这些命令可以不加\n  tulingmall-product:\n    image: mall/mall-product:0.0.1\n    build: ./mall-product\n    container_name: mall-product\n    ports:\n      - 8866:8866\n    volumes:\n      - /etc/localtime:/etc/localtime:ro #同步宿主机与容器时间\n    environment:\n      - JAVA_TOOL_OPTIONS=-Xmx1g -Xms1g -XX:MaxMetaspaceSize=512m -javaagent:/agent/skywalking-agent.jar -DSW_AGENT_NAME=tulingmall-order -DSW_AGENT_COLLECTOR_BACKEND_SERVICES=192.168.65.204:11800\n    external_links:\n      - nacos:nacos\n      - mysql:db #可以用db这个域名访问mysql服务\n      - redis\n      - zookeeper\n    cap_add:\n      - SYS_PTRACE #这个参数是让docker能支持在容器里能执行jdk自带的类似jinfo，jmap这些命令，如果不需要在容器里执行这些命令可以不加\n  mall-order:\n    image: mall/mall-order:0.0.1\n    build: ./mall-order\n    container_name: mall-order\n    ports:\n      - 8844:8844\n    volumes:\n      - /etc/localtime:/etc/localtime:ro #同步宿主机与容器时间\n    environment:\n      - JAVA_TOOL_OPTIONS=-Xmx1g -Xms1g -XX:MaxMetaspaceSize=512m -javaagent:/agent/skywalking-agent.jar -DSW_AGENT_NAME=tulingmall-order -DSW_AGENT_COLLECTOR_BACKEND_SERVICES=192.168.65.204:11800\n    external_links:\n      - nacos:nacos\n      - mysql:db #可以用db这个域名访问mysql服务\n      - redis\n      - rabbitmq\n      - namesrv:rockermq\n    cap_add:\n      - SYS_PTRACE #这个参数是让docker能支持在容器里能执行jdk自带的类似jinfo，jmap这些命令，如果不需要在容器里执行这些命令可以不加\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div></li><li><p>启动compose的所有微服务容器，在docker-mall目录执行如下命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#这里启动的微服务跟上面启动的mysql，redis这些中间件服务因为都在docker-mall目录下，即都是同一个工程下，默认都在相同的网络下，可以相互访问</span>\n<span class="token function">docker-compose</span> <span class="token parameter variable">-f</span> docker-compose-app.yml up <span class="token parameter variable">-d</span>  \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol>',11),l={},r=(0,a(66262).A)(l,[["render",function(n,s){return e}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);