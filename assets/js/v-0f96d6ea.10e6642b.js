"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[17091],{40494:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-0f96d6ea",path:"/Redis/20%20Redis%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Redis/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Redis主从架构",slug:"redis主从架构",children:[]},{level:2,title:"搭建主从架构",slug:"搭建主从架构",children:[{level:3,title:"启动❤️",slug:"启动❤️",children:[]}]},{level:2,title:"缓解主从复制风暴",slug:"缓解主从复制风暴",children:[]}],filePathRelative:"Redis/20 Redis主从架构.md"}},82871:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(20641).Fv)('<h2 id="redis主从架构" tabindex="-1"><a class="header-anchor" href="#redis主从架构" aria-hidden="true">#</a> Redis主从架构</h2><ol><li>master主节点负责读写数据</li><li>slave节点负责同步master写入的数据，只能读不能写</li></ol><p><img src="/images/Redis/80584.png" alt=""></p><h2 id="搭建主从架构" tabindex="-1"><a class="header-anchor" href="#搭建主从架构" aria-hidden="true">#</a> <strong>搭建主从架构</strong></h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">1</span>、复制一份redis.conf文件  redis-6380.config\n<span class="token function">cp</span> redis.config ./config/redis-6380.config\n<span class="token number">2</span>、将相关配置修改为如下值：\nport <span class="token number">6380</span>\npidfile /var/run/redis_6380.pid  <span class="token comment"># 把pid进程号写入pidfile配置的文件</span>\nlogfile <span class="token string">&quot;6380.log&quot;</span>\n<span class="token function">dir</span> /usr/redis/redis-6.2.6/data/6380  <span class="token comment"># 指定数据存放目录</span>\n<span class="token comment"># 需要注释掉bind</span>\n<span class="token comment"># bind 127.0.0.1（bind绑定的是自己机器网卡的ip，如果有多块网卡可以配多个ip，代表允许客户端通过机器的哪些网卡ip去访问，内网一般可以不配置bind，注释掉即可）</span>\n\n<span class="token number">3</span>、配置主从复制\nreplicaof <span class="token number">192.168</span>.187.135 <span class="token number">6379</span>  <span class="token comment"># 从本机6379的redis实例复制数据，Redis 5.0之前使用slaveof</span>\nreplica-read-only <span class="token function">yes</span>  <span class="token comment"># 配置从节点只读</span>\n\n<span class="token number">4</span>、启动从节点\nsrc/redis-server ./config/redis-6380.config\n\n<span class="token number">5</span>、连接从节点\nsrc/redis-cli <span class="token parameter variable">-p</span> <span class="token number">6380</span>\n\n<span class="token number">6</span>、测试在6379实例上写数据，6380实例是否能及时同步新修改数据\n\n<span class="token number">7</span>、可以自己再配置一个6381的从节点\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><img src="/images/Redis/image-20211114094101521.png" alt=""></p><h3 id="启动❤️" tabindex="-1"><a class="header-anchor" href="#启动❤️" aria-hidden="true">#</a> 启动❤️</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/redis/redis-6.2.6\nsrc/redis-server redis.conf   <span class="token comment"># 启动6379（主）</span>\nsrc/redis-server ./config/redis-6380.config <span class="token comment"># 启动6380（从）</span>\nsrc/redis-server ./config/redis-6381.config <span class="token comment"># 启动6381（从）</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>查看是否启动成功</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost redis-6.2.6<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep redis</span>\nroot       <span class="token number">1616</span>      <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">11</span>:30 ?        00:00:08 src/redis-server *:6379\nroot       <span class="token number">1686</span>      <span class="token number">1</span>  <span class="token number">1</span> <span class="token number">12</span>:24 ?        00:00:00 src/redis-server *:6380\nroot       <span class="token number">1696</span>      <span class="token number">1</span>  <span class="token number">2</span> <span class="token number">12</span>:24 ?        00:00:00 src/redis-server *:6381\nroot       <span class="token number">1703</span>   <span class="token number">1654</span>  <span class="token number">0</span> <span class="token number">12</span>:24 pts/0    00:00:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto redis\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>进入其中一台redis服务查看信息</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>src/redis-cli  <span class="token parameter variable">-p</span> <span class="token number">6379</span>\n<span class="token operator">&gt;</span> info\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="/images/Redis/image-20220809003502114.png" alt="image-20220809003502114"></p><h2 id="缓解主从复制风暴" tabindex="-1"><a class="header-anchor" href="#缓解主从复制风暴" aria-hidden="true">#</a> 缓解主从复制风暴</h2><p>如果有很多从节点，为了缓解<strong>主从复制风暴</strong>(多个从节点同时复制主节点<strong>导致主节点压力过大</strong>)，可以做如下架构，让部分从节点与从节点(与主节点同步)同步数据</p><p><img src="/images/Redis/102435.png" alt=""></p>',16),r={},p=(0,a(66262).A)(r,[["render",function(s,n){return e}]])},66262:(s,n)=>{n.A=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);