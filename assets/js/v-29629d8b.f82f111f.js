"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[22242],{87234:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-29629d8b",path:"/minifrontendproject/33%20Memory%20Card%20Game.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/minifrontendproject/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Memory Card Game",slug:"memory-card-game",children:[]},{level:2,title:"如何做到翻转的效果",slug:"如何做到翻转的效果",children:[{level:3,title:"backface-visibility⭐",slug:"backface-visibility⭐",children:[]}]},{level:2,title:"如果做到抖动效果",slug:"如果做到抖动效果",children:[]},{level:2,title:"pointer-events",slug:"pointer-events",children:[]},{level:2,title:"css计算容器100%",slug:"css计算容器100",children:[]},{level:2,title:"如何打乱卡片",slug:"如何打乱卡片",children:[]},{level:2,title:"Vue3实现",slug:"vue3实现",children:[]},{level:2,title:"Refs inside v-for",slug:"refs-inside-v-for",children:[]},{level:2,title:"扩展",slug:"扩展",children:[{level:3,title:"perspective",slug:"perspective",children:[]}]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"minifrontendproject/33 Memory Card Game.md"}},8054:(n,s,a)=>{a.r(s),a.d(s,{default:()=>M});var e=a(20641);const p=(0,e.Lk)("h2",{id:"memory-card-game",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#memory-card-game","aria-hidden":"true"},"#"),(0,e.eW)(" Memory Card Game")],-1),t={href:"https://q10viking.github.io/Mini-FrontEnd-project/38%20Memory%20Card%20Game/vite-project/dist/",target:"_blank",rel:"noopener noreferrer"},o={href:"https://github.com/Q10Viking/Mini-FrontEnd-project/tree/main/38%20Memory%20Card%20Game/vanilla",target:"_blank",rel:"noopener noreferrer"},c={href:"https://github.com/Q10Viking/Mini-FrontEnd-project/tree/main/38%20Memory%20Card%20Game/vite-project",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Fv)('<h2 id="如何做到翻转的效果" tabindex="-1"><a class="header-anchor" href="#如何做到翻转的效果" aria-hidden="true">#</a> 如何做到翻转的效果</h2><h3 id="backface-visibility⭐" tabindex="-1"><a class="header-anchor" href="#backface-visibility⭐" aria-hidden="true">#</a> backface-visibility⭐</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><ol><li>一个容器中有两个div,其中一个前面的展示，一个是后面的展示</li><li>通过定位让他们重合在一起</li><li>通过Y轴旋转180deg到背面，并设置<code>backface-visibility:hidden</code> 将翻转到背面的元素隐藏</li><li>添加过渡效果就可以实现翻转的效果</li></ol></div><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token selector">.card</span><span class="token punctuation">{</span>\n      <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n      <span class="token selector">.view</span><span class="token punctuation">{</span>\n        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token comment">// 脱离文档流</span>\n        <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token comment">// 反转到背面隐藏</span>\n        <span class="token property">transition</span><span class="token punctuation">:</span> transform 0.2s linear<span class="token punctuation">;</span>  <span class="token comment">//动画效果</span>\n      <span class="token punctuation">}</span>\n\t  <span class="token comment">// 前面的展示</span>\n      <span class="token selector">.front-view</span><span class="token punctuation">{</span>\n        <span class="token keyword">@extend</span> .view<span class="token punctuation">;</span>   <span class="token comment">// scss语法继承.view</span>\n        <span class="token property">font-size</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>\n        <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>\n        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span>  <span class="token comment">// 正面先展示</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment">// 后面的展示</span>\n      <span class="token selector">.back-view</span><span class="token punctuation">{</span>\n        <span class="token keyword">@extend</span> .view<span class="token punctuation">;</span>\n        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 反转到背面隐藏</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token selector"><span class="token parent important">&amp;</span>:hover</span><span class="token punctuation">{</span>\n        <span class="token selector">.front-view</span><span class="token punctuation">{</span>\n          <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 隐藏</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token selector">.back-view</span><span class="token punctuation">{</span>\n          <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 展示</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="如果做到抖动效果" tabindex="-1"><a class="header-anchor" href="#如果做到抖动效果" aria-hidden="true">#</a> 如果做到抖动效果</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>动画效果，水平移动位置</p></div><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// 抖动</span>\n<span class="token selector"><span class="token parent important">&amp;</span>:hover</span><span class="token punctuation">{</span>\n    <span class="token property">animation</span><span class="token punctuation">:</span> shake 0.35s ease-in-out<span class="token punctuation">;</span>\n\n    <span class="token atrule"><span class="token rule">@keyframes</span> shake</span> <span class="token punctuation">{</span>\n        <span class="token selector">0%,100%</span><span class="token punctuation">{</span>\n            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">20%</span><span class="token punctuation">{</span>\n            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>12px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">40%</span><span class="token punctuation">{</span>\n            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-12px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">60%</span><span class="token punctuation">{</span>\n            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>5px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">80%</span><span class="token punctuation">{</span>\n            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-5px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="pointer-events" tabindex="-1"><a class="header-anchor" href="#pointer-events" aria-hidden="true">#</a> pointer-events</h2><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// 不赋值给event.target</span>\n<span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>div 里面有一个子元素\n\tp 100%撑满div\n\t\tspan p里面有span标签\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>当给div添加click事件的时候，点击div的区域，触发的event.target有可能不确定，当点击p时，触发的是event.target是p 元素，当点击span，触发的target是span。当给p和span标签设置pointer-events.后再次点击div区域，event.target就是div了。</p><h2 id="css计算容器100" tabindex="-1"><a class="header-anchor" href="#css计算容器100" aria-hidden="true">#</a> css计算容器100%</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>calc(100%/4 -10px)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="如何打乱卡片" tabindex="-1"><a class="header-anchor" href="#如何打乱卡片" aria-hidden="true">#</a> 如何打乱卡片</h2><p><strong>更改img.src的就好</strong></p>',15),r={href:"https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Fv)('<div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">/**\n * 刷新牌面\n */</span>\n<span class="token keyword">function</span> <span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token constant">RANDOM_IMAGES</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token operator">...</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token constant">IMAGES</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 随机</span>\n    <span class="token operator">...</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token constant">IMAGES</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">)</span>   <span class="token comment">// 随机</span>\n  <span class="token punctuation">]</span>\n  cards<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>card<span class="token punctuation">,</span>idx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> imgEl <span class="token operator">=</span> card<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span> <span class="token keyword">as</span> HTMLImageElement\n    imgEl<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token constant">RANDOM_IMAGES</span><span class="token punctuation">[</span>idx<span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><hr><h2 id="vue3实现" tabindex="-1"><a class="header-anchor" href="#vue3实现" aria-hidden="true">#</a> Vue3实现</h2><h2 id="refs-inside-v-for" tabindex="-1"><a class="header-anchor" href="#refs-inside-v-for" aria-hidden="true">#</a> Refs inside <code>v-for</code></h2>',4),u={href:"https://vuejs.org/guide/essentials/template-refs.html#refs-inside-v-for",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Lk)("p",null,[(0,e.eW)("It should be noted that the ref array does "),(0,e.Lk)("strong",null,"not"),(0,e.eW)(" guarantee the same order as the source array.（不能一定保证，但是目前的这个项目中，我得到的还是顺序的）")],-1),b={href:"https://vuejs.org/guide/components/props.html#one-way-data-flow",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Lk)("strong",null,"child component wants to use it as a local data property",-1),d=(0,e.Fv)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">idx</span><span class="token operator">:</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>\n      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>idx<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',1),v={href:"https://vuejs.org/guide/essentials/template-refs.html#ref-on-component",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Lk)("ol",null,[(0,e.Lk)("li",null,"reference will be that of a component instance:"),(0,e.Lk)("li",null,[(0,e.eW)("components using "),(0,e.Lk)("code",null,"<script setup>"),(0,e.eW)(" are "),(0,e.Lk)("strong",null,"private by default"),(0,e.eW)(": a parent component referencing a child component using "),(0,e.Lk)("code",null,"<script setup>"),(0,e.eW)(" won't be able to access anything unless the child component chooses to expose a public interface using the "),(0,e.Lk)("code",null,"defineExpose"),(0,e.eW)(" macro:")]),(0,e.Lk)("li",null,"defineExpose是父组件拿到子组件的时候看到的样子")],-1),g={href:"https://vuejs.org/guide/typescript/composition-api.html#typing-component-template-refs",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Fv)('<div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// 官网的例子</span>\n<span class="token keyword">import</span> MyModal <span class="token keyword">from</span> <span class="token string">&#39;./MyModal.vue&#39;</span>\n<span class="token keyword">const</span> modal <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span>InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> MyModal<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>我的例子</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>import Card from &#39;@/components/Card.vue&#39;\nconst cardRefs:Ref&lt;InstanceType<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeof</span> <span class="token attr-name">Card</span><span class="token punctuation">&gt;</span></span>[]&gt; = ref([])\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(image,idx) in RANDIMAGES<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:img-url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:idx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:isClickable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isClickable<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">@active</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleActiveCard<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cardRefs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>父组件MemoryCardGame看到的子组件Card.vue暴露的数据</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Card.vue</span>\n<span class="token doc-comment comment">/**\n * 定义子组件暴露的样子\n */</span>\n<span class="token function">defineExpose</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n  shakeCard<span class="token punctuation">,</span>\n  closeCard<span class="token punctuation">,</span>\n  callMeTest\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="/images/minifrontendproject/image-20220729124357315.png" alt="image-20220729124357315"></p><hr><h2 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展" aria-hidden="true">#</a> 扩展</h2><h3 id="perspective" tabindex="-1"><a class="header-anchor" href="#perspective" aria-hidden="true">#</a> perspective</h3>',9),y={href:"https://www.w3schools.com/cssref/css3_pr_perspective.asp",target:"_blank",rel:"noopener noreferrer"},x={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/perspective",target:"_blank",rel:"noopener noreferrer"},w=(0,e.Fv)('<ol><li><p>The <code>perspective</code> property is used to give a 3D-positioned element some perspective.</p></li><li><p>The <code>perspective</code> property defines <strong>how far the object is away from the user.</strong> So, a lower value will result in a more intensive 3D effect than a higher value.</p></li><li><p>When defining the <code>perspective</code> property for an element, <strong>it is the CHILD elements that get the perspective view, NOT the element itself.</strong></p></li></ol><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',2),L={href:"https://www.youtube.com/watch?v=DABkhfsBAWw",target:"_blank",rel:"noopener noreferrer"},C={},M=(0,a(66262).A)(C,[["render",function(n,s){const a=(0,e.g2)("OutboundLink"),C=(0,e.g2)("common-progresson-snippet");return(0,e.uX)(),(0,e.CE)(e.FK,null,[p,(0,e.Lk)("p",null,[(0,e.Lk)("a",t,[(0,e.eW)("项目预览（Project view）"),(0,e.bF)(a)])]),(0,e.Lk)("p",null,[(0,e.Lk)("a",o,[(0,e.eW)("vanilla Source Code"),(0,e.bF)(a)])]),(0,e.Lk)("p",null,[(0,e.Lk)("a",c,[(0,e.eW)("Vue3+ts重构 Source Code"),(0,e.bF)(a)])]),(0,e.bF)(C,{src:"https://q10viking.github.io/Mini-FrontEnd-project/38%20Memory%20Card%20Game/vite-project/dist/"}),l,(0,e.Lk)("p",null,[(0,e.Lk)("a",r,[(0,e.eW)("How to randomize (shuffle) a JavaScript array? - Stack Overflow"),(0,e.bF)(a)])]),i,(0,e.Lk)("p",null,[(0,e.Lk)("a",u,[(0,e.eW)("Refs in v-for"),(0,e.bF)(a)])]),k,(0,e.Lk)("p",null,[(0,e.Lk)("a",b,[m,(0,e.bF)(a)])]),d,(0,e.Lk)("p",null,[(0,e.Lk)("a",v,[(0,e.eW)("Ref On Component"),(0,e.bF)(a)])]),h,(0,e.Lk)("p",null,[(0,e.Lk)("a",g,[(0,e.eW)("Typing Component Template Refs"),(0,e.bF)(a)])]),f,(0,e.Lk)("p",null,[(0,e.Lk)("a",y,[(0,e.eW)("CSS perspective property (w3schools.com)"),(0,e.bF)(a)])]),(0,e.Lk)("p",null,[(0,e.Lk)("a",x,[(0,e.eW)("perspective - CSS: Cascading Style Sheets | MDN (mozilla.org)"),(0,e.bF)(a)])]),w,(0,e.Lk)("p",null,[(0,e.Lk)("a",L,[(0,e.eW)("(1) Build A Memory Card Game in HTML CSS & JavaScript - YouTube"),(0,e.bF)(a)])])],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);