"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[69788],{32994:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-018f17c6",path:"/SpringCloud/03%20%E7%BD%91%E5%85%B3.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/SpringCloud/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"API网关",slug:"api网关",children:[]},{level:2,title:"Spring Cloud Gateway",slug:"spring-cloud-gateway",children:[{level:3,title:"核心概念",slug:"核心概念",children:[]},{level:3,title:"简单案例",slug:"简单案例",children:[]}]}],filePathRelative:"SpringCloud/03 网关.md"}},34205:(n,a,s)=>{s.r(a),s.d(a,{default:()=>c});var e=s(20641);const p=(0,e.Fv)('<h2 id="api网关" tabindex="-1"><a class="header-anchor" href="#api网关" aria-hidden="true">#</a> API网关</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><strong>API网关为微服务架构的系统提供简单、有效且统一的API路由管理，作为系统的统一入口</strong>，提供内部服务的路由中转，给客户端提供统一的服务，可以实现一些和业务没有耦合的公用逻辑，主要功能包含认证、鉴权、路由转发、安全策略、防刷、流量控制、监控日志等。</p></div><blockquote><p>微服务架构中的位置</p></blockquote><p><img src="/images/java/56052" alt="img"></p><h2 id="spring-cloud-gateway" tabindex="-1"><a class="header-anchor" href="#spring-cloud-gateway" aria-hidden="true">#</a> Spring Cloud Gateway</h2><h3 id="核心概念" tabindex="-1"><a class="header-anchor" href="#核心概念" aria-hidden="true">#</a> 核心概念</h3><ul><li><p>路由（route)</p><p>路由是网关中最基础的部分，路由信息包括一个ID、一个目的URI、一组断言工厂、一组Filter组成。</p></li><li><p>断言(predicates)</p><p>SpringCloud Gateway中的断言函数类型是Spring5.0框架中的ServerWebExchange。断言函数允许开发者去定义匹配Http request中的任何信息，比如请求头和参数等。如果断言为真，则说明请求的URL和配置的路由匹配。</p></li><li><p>过滤器（Filter)</p><p>SpringCloud Gateway中的filter分为Gateway FilIer和Global Filter。Filter可以对请求和响应进行处理。</p></li></ul><h3 id="简单案例" tabindex="-1"><a class="header-anchor" href="#简单案例" aria-hidden="true">#</a> 简单案例</h3><p>微服务有三个：</p><p><img src="/images/springcloud/image-20230307234513062.png" alt="image-20230307234513062"></p>',10),l={href:"https://github.com/Q10Viking/springcloudalibaba/tree/main/springcloudgateway/01-gateway-basic",target:"_blank",rel:"noopener noreferrer"},t=(0,e.Fv)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#---------------------------------------------</span>\n<span class="token comment">#  mall-user服务启动在8010端口，mall-gateway启动在8080端口</span>\n<span class="token comment">#---------------------------------------------</span>\n\n<span class="token comment"># 原本访问mall-user服务是通过8010端口</span>\nhttp://localhost:8010/user/findOrderByUserId/1\n\n<span class="token comment"># 引入网关之后我们可以通过访问网关来间接访问到mall-user服务</span>\nhttp://localhost:8080/user/findOrderByUserId/1\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>配置</p><blockquote><p>基本上最简单的配置，就足够使用了，用来作统一路口，路由服务。</p></blockquote><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">application</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> mall<span class="token punctuation">-</span>gateway\n  <span class="token comment">#配置nacos注册中心地址</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>\n      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>\n        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.135.1<span class="token punctuation">:</span><span class="token number">8848</span>\n\n    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n      <span class="token comment">#设置路由：路由id、路由到微服务的uri、断言</span>\n      <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> order_route  <span class="token comment">#路由ID，全局唯一，建议配置服务名</span>\n          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//mall<span class="token punctuation">-</span>order  <span class="token comment">#lb 整合负载均衡器ribbon,loadbalancer</span>\n          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> Path=/order/<span class="token important">**</span>   <span class="token comment"># 断言，路径相匹配的进行路由</span>\n\n        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> user_route   <span class="token comment">#路由ID，全局唯一，建议配置服务名</span>\n          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//mall<span class="token punctuation">-</span>user  <span class="token comment">#lb 整合负载均衡器ribbon,loadbalancer</span>\n          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> Path=/user/<span class="token important">**</span>   <span class="token comment"># 断言，路径相匹配的进行路由</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>',4),r={},c=(0,s(66262).A)(r,[["render",function(n,a){const s=(0,e.g2)("OutboundLink");return(0,e.uX)(),(0,e.CE)(e.FK,null,[p,(0,e.Lk)("p",null,[(0,e.Lk)("a",l,[(0,e.eW)("Source Code"),(0,e.bF)(s)])]),t],64)}]])},66262:(n,a)=>{a.A=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);