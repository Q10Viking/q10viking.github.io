"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[90133],{26443:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-46f85a2a",path:"/netty/15%20netty%E6%9E%B6%E6%9E%84%E5%8F%8A%E6%A0%B8%E5%BF%83%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/netty/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"Netty架构图",slug:"netty架构图",children:[]},{level:2,title:"ServerBootStrap启动源码分析",slug:"serverbootstrap启动源码分析",children:[]},{level:2,title:"客户端连接服务端处理",slug:"客户端连接服务端处理",children:[]},{level:2,title:"自己画一个netty线程模型图",slug:"自己画一个netty线程模型图",children:[]},{level:2,title:"Java代码学习",slug:"java代码学习",children:[]}],filePathRelative:"netty/15 netty架构及核心源码分析.md"}},23006:(e,n,a)=>{a.r(n),a.d(n,{default:()=>h});var s=a(20641);const t=(0,s.Fv)('<h2 id="netty架构图" tabindex="-1"><a class="header-anchor" href="#netty架构图" aria-hidden="true">#</a> Netty架构图</h2><p><img src="/images/netty/85277netty.png" alt="85277netty.png"></p><hr><h2 id="serverbootstrap启动源码分析" tabindex="-1"><a class="header-anchor" href="#serverbootstrap启动源码分析" aria-hidden="true">#</a> ServerBootStrap启动源码分析</h2>',4),l={href:"https://www.processon.com/view/link/628d07f00e3e747f1e8d0420",target:"_blank",rel:"noopener noreferrer"},r={href:"https://blog.csdn.net/qq_41082092/article/details/114360597",target:"_blank",rel:"noopener noreferrer"},p=(0,s.Fv)('<p><img src="/images/netty/image-20230411214308635.png" alt="image-20230411214308635"></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>SelectionKey的作用\nselectionKey.interestOps(interestOps | readInterestOp)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>DefaultChannelHandlerContext\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 方法重载  </span>\n<span class="token comment">// https://blog.csdn.net/qq_57399395/article/details/122359009</span>\n<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">ChannelInitializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">C</span> <span class="token keyword">extends</span> <span class="token class-name">Channel</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">initChannel</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span>\n\t<span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">initChannel</span><span class="token punctuation">(</span><span class="token class-name">C</span> ch<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><hr><h2 id="客户端连接服务端处理" tabindex="-1"><a class="header-anchor" href="#客户端连接服务端处理" aria-hidden="true">#</a> 客户端连接服务端处理</h2><ol><li>连接建立SocketChannel</li><li>创建pipe</li></ol><p>客户端发数据，服务端响应</p>',8),o={href:"https://www.processon.com/view/link/628d07f00e3e747f1e8d0420",target:"_blank",rel:"noopener noreferrer"},c=(0,s.Lk)("hr",null,null,-1),i=(0,s.Lk)("h2",{id:"自己画一个netty线程模型图",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#自己画一个netty线程模型图","aria-hidden":"true"},"#"),(0,s.eW)(" 自己画一个netty线程模型图")],-1),d={href:"https://www.processon.com/view/link/628f12a0e0b34d41d954a181",target:"_blank",rel:"noopener noreferrer"},u=(0,s.Fv)('<p><img src="/images/netty/netty线程模型.png" alt="netty线程模型"></p><h2 id="java代码学习" tabindex="-1"><a class="header-anchor" href="#java代码学习" aria-hidden="true">#</a> Java代码学习</h2><p>反射修改</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>interface = new Interface[12];\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>netty线程的流转</p>',5),k={},h=(0,a(66262).A)(k,[["render",function(e,n){const a=(0,s.g2)("OutboundLink"),k=(0,s.g2)("common-progresson-snippet");return(0,s.uX)(),(0,s.CE)(s.FK,null,[t,(0,s.Lk)("p",null,[(0,s.Lk)("a",l,[(0,s.eW)("Link"),(0,s.bF)(a)])]),(0,s.bF)(k,{src:"https://www.processon.com/view/link/628d07f00e3e747f1e8d0420"}),(0,s.Lk)("p",null,[(0,s.Lk)("a",r,[(0,s.eW)("netty 启动绑定时为什么给ServerSocketChanel注册的ops为 0 而不是OP_ACCEPT"),(0,s.bF)(a)])]),p,(0,s.Lk)("p",null,[(0,s.Lk)("a",o,[(0,s.eW)("link"),(0,s.bF)(a)])]),(0,s.bF)(k,{src:"https://www.processon.com/view/link/628d07f00e3e747f1e8d0420"}),c,i,(0,s.Lk)("p",null,[(0,s.Lk)("a",d,[(0,s.eW)("Link"),(0,s.bF)(a)])]),(0,s.bF)(k,{src:"https://www.processon.com/view/link/628f12a0e0b34d41d954a181"}),u],64)}]])},66262:(e,n)=>{n.A=(e,n)=>{const a=e.__vccOpts||e;for(const[e,s]of n)a[e]=s;return a}}}]);