"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[27953],{60775:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-7dc43ed9",path:"/maven/04%20%E4%BE%9D%E8%B5%96%E4%BC%A0%E9%80%92.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/maven/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"1 依赖传递的概念",slug:"_1-依赖传递的概念",children:[]},{level:2,title:"2 依赖冲突",slug:"_2-依赖冲突",children:[]},{level:2,title:"3 解决依赖冲突",slug:"_3-解决依赖冲突",children:[{level:3,title:"3.1 使用maven提供的依赖调解原则",slug:"_3-1-使用maven提供的依赖调解原则",children:[]},{level:3,title:"3.2 排除依赖exclusion",slug:"_3-2-排除依赖exclusion",children:[]},{level:3,title:"3.3 锁定版本",slug:"_3-3-锁定版本",children:[]}]}],filePathRelative:"maven/04 依赖传递.md"}},88929:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(20641).Fv)('<h2 id="_1-依赖传递的概念" tabindex="-1"><a class="header-anchor" href="#_1-依赖传递的概念" aria-hidden="true">#</a> 1 依赖传递的概念</h2><p>在maven中，依赖是可以传递的，假设存在三个项目，分别是项目A，项目B以及项目C。假设C依赖B，B依赖A，那么我们可以根据maven项目依赖的特征不难推出项目C也依赖A。</p><img src="/images/maven/image-20201230111430629.png" alt="image-20201230111430629"><hr><p><img src="/images/maven/image-20201230111504532.png" alt="image-20201230111504532"></p><p>通过上面的图可以看到，我们的web项目直接依赖了spring-webmvc，而spring-webmvc依赖了sping-aop、spring-beans等。最终的结果就是在我们的web项目中<strong>间接依赖了spring-aop、spring-beans等</strong>。</p><h2 id="_2-依赖冲突" tabindex="-1"><a class="header-anchor" href="#_2-依赖冲突" aria-hidden="true">#</a> 2 依赖冲突</h2><p>由于依赖传递现象的存在， spring-webmvc 依赖 spirng-beans-4.1.3，spring-aop 依赖 spring-beans-5.0.2，但是发现 spirng-beans-4.1.3 加入到了工程中，而我们希望 spring-beans-5.0.2 加入工程。这就造成了<strong>依赖冲突</strong>。（<strong>版本不一致</strong>）</p><img src="/images/maven/image-20201230112414629.png" alt="image-20201230112414629"><hr><h2 id="_3-解决依赖冲突" tabindex="-1"><a class="header-anchor" href="#_3-解决依赖冲突" aria-hidden="true">#</a> 3 <strong>解决依赖冲突</strong></h2><h3 id="_3-1-使用maven提供的依赖调解原则" tabindex="-1"><a class="header-anchor" href="#_3-1-使用maven提供的依赖调解原则" aria-hidden="true">#</a> 3.1 使用maven提供的依赖调解原则</h3><h4 id="_3-1-1-第一声明者优先原则" tabindex="-1"><a class="header-anchor" href="#_3-1-1-第一声明者优先原则" aria-hidden="true">#</a> 3.1.1 第一声明者优先原则</h4><p>在 pom 文件中定义依赖，以先声明的依赖为准。其实就是根据<strong>坐标导入的顺序来确定最终使用哪个传递过来的依赖</strong>。</p><img src="/images/maven/image-20201230113349263.png" alt="image-20201230113349263"><p>结论：通过上图可以看到，<code>spring-aop</code>和<code>spring-webmvc</code>都传递过来了<code>spring-beans</code>，但是因为<code>spring-aop</code><strong>在前面</strong>，所以最终使用的<code>spring-beans</code>是由<code>spring-aop</code>传递过来的，而<code>spring-webmvc</code>传递过来的<code>spring-beans</code>则被忽略了</p><h4 id="_3-1-3-路径近者优先原则" tabindex="-1"><a class="header-anchor" href="#_3-1-3-路径近者优先原则" aria-hidden="true">#</a> 3.1.3 路径近者优先原则</h4><p>在 <code>pom</code> 文件定义依赖，以路径近者为准。</p><p>还是上述情况，<code>spring-aop</code> 和 <code>spring-webmvc</code> 都会传递过来 <code>spirng-beans</code>，那如果直接把 <code>spring-beans</code> 的依赖直接写到 <code>pom</code> 文件中，那么项目就不会再使用其他依赖传递来的 <code>spring-beans</code>，<strong>因为自己直接在 <code>pom</code> 中定义 <code>spring-beans</code>要比其他依赖传递过来的路径要近。</strong></p><img src="/images/maven/image-20201230114454873.png" alt="image-20201230114454873"><h3 id="_3-2-排除依赖exclusion" tabindex="-1"><a class="header-anchor" href="#_3-2-排除依赖exclusion" aria-hidden="true">#</a> <strong>3.2 排除依赖</strong>exclusion</h3><p>如springboot使用fastjson2来替代springboot使用的默认jackson</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- 去掉Jackson依赖，用fastjson --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-json<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.32<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson2-extension<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.32<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="_3-3-锁定版本" tabindex="-1"><a class="header-anchor" href="#_3-3-锁定版本" aria-hidden="true">#</a> 3.3 锁定版本</h3><p>采用直接锁定版本的方法确定<strong>依赖jar包的版本</strong>，<strong>版本锁定后则不考虑依赖的声明顺序或依赖的路径，以锁定的版本为准添加到工程中</strong>，此方法在企业开发中经常使用。</p><img src="/images/maven/image-20201230115359657.png" alt="image-20201230115359657"><p>版本锁定的使用方式：</p><p>第一步：在<strong>dependencyManagement</strong>标签中锁定依赖的版本</p><p>第二步：在<strong>dependencies</strong>标签中声明需要导入的<code>maven</code>坐标</p><p><strong>注意</strong></p><p><code>pom</code>文件中使用<code>dependencyManagement</code>标签进行依赖jar的版本锁定，<strong>并不会真正将jar包导入到项目中</strong>，<strong>只是对这些jar的版本进行锁定。</strong></p><p><strong>项目中使用哪些jar包，还需要在dependencies标签中进行声明</strong></p>',32),p={},e=(0,a(66262).A)(p,[["render",function(n,s){return t}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);