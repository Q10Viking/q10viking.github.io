"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[8417],{76008:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-4902921d",path:"/designpattern/15%20enum%E7%B1%BB%E5%9E%8B%E6%94%B9%E9%80%A0switch%E5%88%86%E7%B1%BB.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/designpattern/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"改造前",slug:"改造前",children:[]},{level:2,title:"用设计模式改造一下",slug:"用设计模式改造一下",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"designpattern/15 enum类型改造switch分类.md"}},92487:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var p=a(20641);const t=(0,p.Fv)('<h2 id="改造前" tabindex="-1"><a class="header-anchor" href="#改造前" aria-hidden="true">#</a> 改造前</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LemonadeChange</span><span class="token punctuation">{</span>\n<span class="token comment">//leetcode submit region begin(Prohibit modification and deletion)</span>\n<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">int</span> five <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">int</span> ten <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">int</span> twenty <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">lemonadeChange</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bills<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> bill<span class="token operator">:</span> bills<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>bill <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                five<span class="token operator">++</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span><span class="token punctuation">(</span>bill <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>five <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    five<span class="token operator">--</span><span class="token punctuation">;</span>\n                    ten<span class="token operator">++</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span><span class="token punctuation">(</span>bill <span class="token operator">==</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>ten<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> five<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    ten<span class="token operator">--</span><span class="token punctuation">;</span>\n                    five<span class="token operator">--</span><span class="token punctuation">;</span>\n                    twenty<span class="token operator">++</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>five<span class="token operator">&gt;=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    five <span class="token operator">-=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n                    twenty<span class="token operator">--</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//leetcode submit region end(Prohibit modification and deletion)</span>\n\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n       <span class="token class-name">Solution</span> solution <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LemonadeChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bills <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">boolean</span> b <span class="token operator">=</span> solution<span class="token punctuation">.</span><span class="token function">lemonadeChange</span><span class="token punctuation">(</span>bills<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h2 id="用设计模式改造一下" tabindex="-1"><a class="header-anchor" href="#用设计模式改造一下" aria-hidden="true">#</a> 用设计模式改造一下</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LemonadeChange</span><span class="token punctuation">{</span>\n<span class="token comment">//leetcode submit region begin(Prohibit modification and deletion)</span>\n<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> five <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> ten <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> twenty <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">lemonadeChange</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bills<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> bill<span class="token operator">:</span> bills<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">boolean</span> result <span class="token operator">=</span> <span class="token class-name">BillTask</span><span class="token punctuation">.</span><span class="token function">getByPrice</span><span class="token punctuation">(</span>bill<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dealWithBill</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">BillTask</span><span class="token punctuation">{</span>\n        <span class="token function">FIVE</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token annotation punctuation">@Override</span>\n            <span class="token keyword">public</span>  <span class="token keyword">boolean</span> <span class="token function">dealWithBill</span><span class="token punctuation">(</span><span class="token class-name">Solution</span> solution<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                solution<span class="token punctuation">.</span>five<span class="token operator">++</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">TEN</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token annotation punctuation">@Override</span>\n            <span class="token keyword">public</span>  <span class="token keyword">boolean</span> <span class="token function">dealWithBill</span><span class="token punctuation">(</span><span class="token class-name">Solution</span> solution<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>solution<span class="token punctuation">.</span>five <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    solution<span class="token punctuation">.</span>five<span class="token operator">--</span><span class="token punctuation">;</span>\n                    solution<span class="token punctuation">.</span>ten<span class="token operator">++</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">TWENTY</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token annotation punctuation">@Override</span>\n            <span class="token keyword">public</span>  <span class="token keyword">boolean</span> <span class="token function">dealWithBill</span><span class="token punctuation">(</span><span class="token class-name">Solution</span> solution<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>solution<span class="token punctuation">.</span>ten<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> solution<span class="token punctuation">.</span>five<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    solution<span class="token punctuation">.</span>ten<span class="token operator">--</span><span class="token punctuation">;</span>\n                    solution<span class="token punctuation">.</span>five<span class="token operator">--</span><span class="token punctuation">;</span>\n                    solution<span class="token punctuation">.</span>twenty<span class="token operator">++</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>solution<span class="token punctuation">.</span>five<span class="token operator">&gt;=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    solution<span class="token punctuation">.</span>five <span class="token operator">-=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n                    solution<span class="token punctuation">.</span>twenty<span class="token operator">--</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">private</span> <span class="token keyword">int</span> bill<span class="token punctuation">;</span>\n        <span class="token keyword">private</span> <span class="token class-name">BillTask</span><span class="token punctuation">(</span><span class="token keyword">int</span> bill<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bill <span class="token operator">=</span> bill<span class="token punctuation">;</span><span class="token punctuation">}</span>\n        <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getBill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> bill<span class="token punctuation">;</span><span class="token punctuation">}</span>\n\n        <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">boolean</span> <span class="token function">dealWithBill</span><span class="token punctuation">(</span><span class="token class-name">Solution</span> solution<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">BillTask</span> <span class="token function">getByPrice</span><span class="token punctuation">(</span><span class="token keyword">int</span> bill<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">BillTask</span> billTask<span class="token operator">:</span> <span class="token class-name">BillTask</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>billTask<span class="token punctuation">.</span><span class="token function">getBill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> bill<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> billTask<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>bill<span class="token operator">+</span><span class="token string">&quot; is not support!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n<span class="token comment">//leetcode submit region end(Prohibit modification and deletion)</span>\n\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n       <span class="token class-name">Solution</span> solution <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LemonadeChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bills <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">boolean</span> b <span class="token operator">=</span> solution<span class="token punctuation">.</span><span class="token function">lemonadeChange</span><span class="token punctuation">(</span>bills<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',5),e={href:"https://stackoverflow.com/questions/32003932/how-to-use-design-pattern-in-place-of-switch-case",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Fv)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">TaskName</span> <span class="token punctuation">{</span>\n     <span class="token constant">LOGIN</span> <span class="token punctuation">{</span>\n         <span class="token annotation punctuation">@Override</span>\n         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doIt</span><span class="token punctuation">(</span><span class="token class-name">TaskController</span> taskController<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              taskController<span class="token punctuation">.</span><span class="token function">getUserDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token comment">/*something*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token comment">//...</span>\n         <span class="token punctuation">}</span>\n     <span class="token punctuation">}</span><span class="token punctuation">,</span>\n     <span class="token constant">REGISTER</span> <span class="token punctuation">{</span>\n         <span class="token annotation punctuation">@Override</span>\n         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doIt</span><span class="token punctuation">(</span><span class="token class-name">TaskController</span> taskController<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token comment">//Implementation</span>\n         <span class="token punctuation">}</span>\n     <span class="token punctuation">}</span><span class="token punctuation">,</span>\n     <span class="token constant">MESSAGE</span> <span class="token punctuation">{</span>\n         <span class="token annotation punctuation">@Override</span>\n         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doIt</span><span class="token punctuation">(</span><span class="token class-name">TaskController</span> taskController<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              taskController<span class="token punctuation">.</span><span class="token function">getMessageDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token comment">/*something*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token comment">//...</span>\n         <span class="token punctuation">}</span>\n     <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n     <span class="token keyword">private</span> <span class="token class-name">TaskName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token punctuation">}</span>\n\n     <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">doIt</span><span class="token punctuation">(</span><span class="token class-name">TaskController</span> taskController<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">TaskName</span> <span class="token function">getByTaskName</span><span class="token punctuation">(</span><span class="token class-name">String</span> taskName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n         <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">TaskName</span> taskEnum <span class="token operator">:</span> <span class="token class-name">TaskName</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n             <span class="token keyword">if</span><span class="token punctuation">(</span>taskEnum<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>taskName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                 <span class="token keyword">return</span> taskEnum<span class="token punctuation">;</span>\n             <span class="token punctuation">}</span>\n         <span class="token punctuation">}</span>\n         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;The Task Name [&quot;</span> <span class="token operator">+</span> taskName <span class="token operator">+</span> <span class="token string">&quot;] is not a valid task name!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TaskController</span> <span class="token punctuation">{</span>\n\n\n    <span class="token keyword">private</span> <span class="token class-name">UserDao</span> userDaoJpaImpl<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">FriendDao</span> friendDaoJpaImpl<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">GroupDao</span> groupDaoJpaImpl<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">MessageDao</span> messageDaoJpaImpl<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">TaskController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">EntityManagerFactory</span> emfactory <span class="token operator">=</span> <span class="token class-name">Persistence</span><span class="token punctuation">.</span><span class="token function">createEntityManagerFactory</span><span class="token punctuation">(</span><span class="token string">&quot;Eclipselink_JPA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        userDaoJpaImpl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDaoJpaImpl</span><span class="token punctuation">(</span>emfactory<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        friendDaoJpaImpl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FriendDaoJpaImpl</span><span class="token punctuation">(</span>emfactory<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        groupDaoJpaImpl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GroupDaoJpaImpl</span><span class="token punctuation">(</span>emfactory<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        messageDaoJpaImpl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MessageDaoJpaImpl</span><span class="token punctuation">(</span>emfactory<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doIt</span><span class="token punctuation">(</span><span class="token class-name">String</span> taskName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">TaskName</span><span class="token punctuation">.</span><span class="token function">getByTaskName</span><span class="token punctuation">(</span>taskName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doIt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div>',1),c={},l=(0,a(66262).A)(c,[["render",function(n,s){const a=(0,p.g2)("OutboundLink");return(0,p.uX)(),(0,p.CE)(p.FK,null,[t,(0,p.Lk)("p",null,[(0,p.Lk)("a",e,[(0,p.eW)("java - How to use design Pattern in place of switch case - Stack Overflow"),(0,p.bF)(a)])]),o],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);