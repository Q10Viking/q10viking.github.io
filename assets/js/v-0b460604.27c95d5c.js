"use strict";(self.webpackChunkq10viking_github_io=self.webpackChunkq10viking_github_io||[]).push([[73286],{84129:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-0b460604",path:"/Algorithm/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8II.html",title:"",lang:"zh-CN",frontmatter:{sidebarDepth:3,sidebar:"auto",prev:{text:"Back To 目录",link:"/Algorithm/"},"typora-root-url":"..\\.vuepress\\public"},excerpt:"",headers:[{level:2,title:"简单的链表反转",slug:"简单的链表反转",children:[]}],filePathRelative:"Algorithm/反转链表II.md"}},60467:(n,s,a)=>{a.r(s),a.d(s,{default:()=>b});var e=a(20641);const p={class:"custom-container tip"},t=(0,e.Lk)("p",{class:"custom-container-title"},"TIP",-1),o={href:"https://leetcode.cn/problems/reverse-linked-list-ii/",target:"_blank",rel:"noopener noreferrer"},l={href:"https://github.com/Q10Viking/learncode/blob/main/algorithm/src/main/java/org/hzz/linkedlist/ReverseLinkedListII_92.java",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Fv)('<p>初始状态</p><p><img src="/images/algorithm/image-20220816021918545.png" alt="image-20220816021918545"></p><p>第一轮循环</p><p><img src="/images/algorithm/image-20220816021941026.png" alt="image-20220816021941026"></p><p><img src="/images/algorithm/image-20220816021958852.png" alt="image-20220816021958852"></p><p><img src="/images/algorithm/image-20220816022025387.png" alt="image-20220816022025387"></p><p><img src="/images/algorithm/image-20220816022038818.png" alt="image-20220816022038818"></p><p>第二轮循环</p><p><img src="/images/algorithm/image-20220816022207238.png" alt="image-20220816022207238"></p><p><img src="/images/algorithm/image-20220816022224110.png" alt="image-20220816022224110"></p><p><img src="/images/algorithm/image-20220816022336156.png" alt="image-20220816022336156"></p><p><img src="/images/algorithm/image-20220816022404574.png" alt="image-20220816022404574"></p><p>最终结果：</p><p><img src="/images/algorithm/image-20220816022431518.png" alt="image-20220816022431518"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReverseLinkedListII_92</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">reverseBetween</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">ListNode</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        temp<span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">;</span>\n        <span class="token class-name">ListNode</span> pre <span class="token operator">=</span> temp<span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> left <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            pre <span class="token operator">=</span> pre<span class="token punctuation">.</span>next<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token class-name">ListNode</span> cur <span class="token operator">=</span> pre<span class="token punctuation">.</span>next<span class="token punctuation">;</span>\n        <span class="token class-name">ListNode</span> next <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> right <span class="token operator">-</span> left<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n           cur<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>\n           next<span class="token punctuation">.</span>next <span class="token operator">=</span> pre<span class="token punctuation">.</span>next<span class="token punctuation">;</span>\n           pre<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>\n           next <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><hr><h2 id="简单的链表反转" tabindex="-1"><a class="header-anchor" href="#简单的链表反转" aria-hidden="true">#</a> 简单的链表反转</h2>',17),r={class:"custom-container tip"},i=(0,e.Lk)("p",{class:"custom-container-title"},"TIP",-1),u={href:"https://leetcode.cn/problems/reverse-linked-list/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/Q10Viking/learncode/blob/main/algorithm/src/main/java/org/hzz/linkedlist/ReverseLinkedListI_206.java",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Fv)('<p><img src="/images/algorithm/image-20220816032236893.png" alt="image-20220816032236893"></p><p><img src="/images/algorithm/image-20220816032224244.png" alt="image-20220816032224244"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReverseLinkedListI_206</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">reverseList</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">ListNode</span> pre <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>current <span class="token operator">=</span> head<span class="token punctuation">,</span> next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span><span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            next <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span>\n            current<span class="token punctuation">.</span>next <span class="token operator">=</span> pre<span class="token punctuation">;</span>\n            pre <span class="token operator">=</span> current<span class="token punctuation">;</span>\n            current <span class="token operator">=</span> next<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> pre<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',3),g={},b=(0,a(66262).A)(g,[["render",function(n,s){const a=(0,e.g2)("OutboundLink");return(0,e.uX)(),(0,e.CE)(e.FK,null,[(0,e.Lk)("div",p,[t,(0,e.Lk)("p",null,[(0,e.Lk)("a",o,[(0,e.eW)("92. 反转链表 II - 力扣（LeetCode）"),(0,e.bF)(a)])]),(0,e.Lk)("p",null,[(0,e.Lk)("a",l,[(0,e.eW)("Source Code ReverseLinkedListII_92.java"),(0,e.bF)(a)])])]),c,(0,e.Lk)("div",r,[i,(0,e.Lk)("p",null,[(0,e.Lk)("a",u,[(0,e.eW)("206. 反转链表 - 力扣（LeetCode）"),(0,e.bF)(a)])]),(0,e.Lk)("p",null,[(0,e.Lk)("a",k,[(0,e.eW)("Source Code ReverseLinkedListI_206.java"),(0,e.bF)(a)])])]),m],64)}]])},66262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);